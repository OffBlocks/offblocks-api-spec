{
	"info": {
		"_postman_id": "c0b1226f-dcbe-44c8-8eac-d37b00c6ea90",
		"name": "OffBlocks API 1.0",
		"description": "OffBlocks API provides endpoints and capabilities covering user (customer) onboarding, account and card management, transaction lifecycle as well as live feed for all entities via webhooks.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "31088643-c0b1226f-dcbe-44c8-8eac-d37b00c6ea90"
	},
	"item": [
		{
			"name": "auth",
			"item": [
				{
					"name": "Initial Authentication",
					"id": "17452a4e-249b-409c-9700-194f7a776d9a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"apiKey\": \"{{apiKey}}\",\n  \"apiSecret\": \"{{apiSecret}}\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"token"
							]
						},
						"description": "Retrieve authentication token using API credentials"
					},
					"response": [
						{
							"id": "e4c61dbb-a93f-46a4-bda8-5225c74c6c98",
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"apiKey\": \"<string>\",\n  \"apiSecret\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.sandbox.offblocks.xyz/v1/auth/token",
									"protocol": "https",
									"host": [
										"api",
										"sandbox",
										"offblocks",
										"xyz"
									],
									"path": [
										"v1",
										"auth",
										"token"
									]
								},
								"description": "Retrieve authentication token using API credentials"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "html",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"token\": \"<string>\",\n  \"expiresAt\": \"<integer>\",\n  \"tokenType\": \"<string>\"\n}"
						},
						{
							"id": "8a4866d6-4915-4238-94b5-d6155f47024e",
							"name": "Invalid request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"apiKey\": \"<string>\",\n  \"apiSecret\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"token"
									]
								},
								"description": "Retrieve authentication token using API credentials"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "69d51cf9-ae38-47c8-86a9-3ddde2ac6153",
							"name": "Invalid credentials",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"apiKey\": \"<string>\",\n  \"apiSecret\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"token"
									]
								},
								"description": "Retrieve authentication token using API credentials"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "30d708d6-35c7-49ab-bdfc-f39ecc9eed5d",
							"name": "Internal error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"apiKey\": \"{{apiKey}}\",\n  \"apiSecret\": \"{{apiSecret}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"token"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Update signing key",
					"id": "7a38e473-0011-4763-a4ed-4641b75848bd",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"signingKey\": \"{{signaturePublicKey}}\",\n  \"signingKeyId\": \"{{signatureKeyId}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/signing",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"signing"
							]
						},
						"description": "Update public key used to sign API requests. When you upload your public key, a unique key ID is returned in response. This is different to your public key itself, and is required to sign your requests"
					},
					"response": [
						{
							"id": "19676b47-20a8-47f5-a0af-d91980e191ab",
							"name": "Invalid request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"signingKey\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/v1/auth/signing",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"v1",
										"auth",
										"signing"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "60272156-3f99-47fc-b5bf-b742b26369e2",
							"name": "Not authorised",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"signingKey\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/signing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"signing"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "047db800-684e-484a-8d0f-e30f823d4eb7",
							"name": "Successful operation",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"signingKey\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/signing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"signing"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "1a1d2fb0-d11a-44f1-994d-091804e4ba5a",
							"name": "Internal error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"signingKey\": \"{{signaturePublicKey}}\",\n  \"signingKeyId\": \"{{signatureKeyId}}\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/auth/signing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"signing"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Delete signing key",
					"id": "5cb792c0-40b7-4ccc-81ed-ae9918730995",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"signingKeyId\": \"<uuid>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/signing",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"signing"
							]
						},
						"description": "Delete public key used to sign API requests"
					},
					"response": [
						{
							"id": "db986c8b-f0aa-479e-9def-f55281c17e8d",
							"name": "Successful operation",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"signingKeyId\": \"<uuid>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/v1/auth/signing",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"v1",
										"auth",
										"signing"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "82763597-a98f-4563-beb8-a2bdb3e378c6",
							"name": "Invalid request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"signingKeyId\": \"<uuid>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/signing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"signing"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "37795021-70e8-4331-93d6-ce79feae4603",
							"name": "Not authorised",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"signingKeyId\": \"<uuid>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/signing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"signing"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "57979bd5-0474-4228-a983-ea01fc1332da",
							"name": "Internal error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"signingKeyId\": \"<uuid>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/signing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"signing"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Update API credentials",
					"id": "4c60442c-97e8-4e13-bd19-eb32d322ad3f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"apiKey\": \"{{apiKey}}\",\n  \"apiSecret\": \"{{apiSecret}}\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/credentials",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"credentials"
							]
						},
						"description": "Update existing API credentials (API key, API secret or both). This invalidates all issued tokens and active sessions"
					},
					"response": [
						{
							"id": "16b59591-8749-481d-baba-e14199711964",
							"name": "Successful operation",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"apiKey\": \"<string>\",\n  \"apiSecret\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.sandbox.offblocks.xyz/v1/auth/credentials",
									"protocol": "https",
									"host": [
										"api",
										"sandbox",
										"offblocks",
										"xyz"
									],
									"path": [
										"v1",
										"auth",
										"credentials"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "2d4e9ee7-ca8c-41d4-b4c2-b3ea1332a473",
							"name": "Invalid request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"apiKey\": \"<string>\",\n  \"apiSecret\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/credentials",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"credentials"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "8805c173-ef61-4104-9212-e89b7e6f12d4",
							"name": "Not authorised",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"apiKey\": \"<string>\",\n  \"apiSecret\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/credentials",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"credentials"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "ec4d757a-b094-4362-b752-0b95422e0dda",
							"name": "Internal error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"apiKey\": \"{{apiKey}}\",\n  \"apiSecret\": \"{{apiSecret}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/credentials",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"credentials"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Delete API credentials",
					"id": "0bc8b34f-3506-48d2-be56-9a63cdf16f9a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"apiKey\": \"{{apiKey}}\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/credentials",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"credentials"
							]
						},
						"description": "Delete existing API credentials. This invalidates all issued tokens and active sessions"
					},
					"response": [
						{
							"id": "78ae70d0-0ab4-449e-adcc-d7d97ebd74d6",
							"name": "Successful operation",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"apiKey\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/v1/auth/credentials",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"v1",
										"auth",
										"credentials"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "db13ba6c-ae54-423f-912e-04f423c0c405",
							"name": "Invalid request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"apiKey\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/credentials",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"credentials"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "efb51bc8-478d-4864-9ad4-a318ceb3193d",
							"name": "Not authorised",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"apiKey\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/credentials",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"credentials"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "d057324e-9777-45b1-b0c4-a6a9f75ecd7d",
							"name": "Internal error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"apiKey\": \"{{apiKey}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/credentials",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"credentials"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						}
					]
				}
			],
			"id": "e8c5ffde-409f-44bb-9d50-6f3419d4c992"
		},
		{
			"name": "customers",
			"item": [
				{
					"name": "Retrieve customers",
					"id": "95c9f5da-709e-4b76-a6e5-ef084e7f6722",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"customers"
							]
						},
						"description": "Retrieves customers' details"
					},
					"response": [
						{
							"id": "a8bff6bf-22d5-4241-89bb-9f14a2e7ab53",
							"name": "Successful operation",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.sandbox.offblocks.xyz/v1/customers",
									"protocol": "https",
									"host": [
										"api",
										"sandbox",
										"offblocks",
										"xyz"
									],
									"path": [
										"v1",
										"customers"
									]
								},
								"description": "Retrieves customers' details"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "html",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"status\": \"inactive\",\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"externalId\": \"<string>\",\n    \"chainId\": \"<string>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"status\": \"active\",\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"externalId\": \"<string>\",\n    \"chainId\": \"<string>\"\n  }\n]"
						},
						{
							"id": "0eef944c-c22a-41b7-aadc-42a4fff17328",
							"name": "Invalid request",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers"
									]
								},
								"description": "Retrieves customers' details"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "e2bdac14-a27b-4c63-9794-269dcd5d58f3",
							"name": "Not authorised",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers"
									]
								},
								"description": "Retrieves customers' details"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "9fb26458-3127-42be-993d-aca49fdcdb70",
							"name": "Internal error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Retrieve customer",
					"id": "048eb3d7-2b62-45c9-a645-05f2951a19d6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/customers/:customerId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"customers",
								":customerId"
							],
							"variable": [
								{
									"key": "customerId",
									"value": "<customer-id>",
									"description": "(Required) ID of customer to be retrieved"
								}
							]
						},
						"description": "Retrieves customer's details"
					},
					"response": [
						{
							"id": "710d764d-f790-4407-b3dd-d05c15b6ddcb",
							"name": "Successful operation",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.sandbox.offblocks.xyz/v1/customers/:customerId",
									"protocol": "https",
									"host": [
										"api",
										"sandbox",
										"offblocks",
										"xyz"
									],
									"path": [
										"v1",
										"customers",
										":customerId"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "<string>",
											"description": "(Required) ID of customer to be retrieved"
										}
									]
								},
								"description": "Retrieves customer's details"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "html",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"status\": \"verifying\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"externalId\": \"<string>\",\n  \"chainId\": \"<string>\"\n}"
						},
						{
							"id": "4d1d2cab-5555-4554-9e53-b0cb4123dca4",
							"name": "Invalid request",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "<string>",
											"description": "(Required) ID of customer to be retrieved"
										}
									]
								},
								"description": "Retrieves customer's details"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "fceaaf86-4636-4c9d-80fc-cd80ba2c8253",
							"name": "Not authorised",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "<string>",
											"description": "(Required) ID of customer to be retrieved"
										}
									]
								},
								"description": "Retrieves customer's details"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "466e7157-40de-4713-a4a5-eb1fb748fb55",
							"name": "Customer not found",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "<string>",
											"description": "(Required) ID of customer to be retrieved"
										}
									]
								},
								"description": "Retrieves customer's details"
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "d7e52851-58d8-43d0-8a7d-cef4738167c7",
							"name": "Internal error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId"
									],
									"variable": [
										{
											"key": "customerId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Create new customer",
					"id": "6876e4c3-d72c-46c0-97ac-f6ff73bfa3a9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"description": "(Required) Content digest",
								"key": "Content-Digest",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) Idempotency key (free format)",
								"key": "Idempotency-Key",
								"value": "{{$randomUUID}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"customers"
							]
						},
						"description": "Creates new customer and generates a KYC verification URL"
					},
					"response": [
						{
							"id": "22da3d62-27f0-4bf9-86ac-502e54ea347f",
							"name": "Successful operation",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.sandbox.offblocks.xyz/v1/customers",
									"protocol": "https",
									"host": [
										"api",
										"sandbox",
										"offblocks",
										"xyz"
									],
									"path": [
										"v1",
										"customers"
									]
								},
								"description": "Creates new customer and generates a KYC verification URL"
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "html",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"status\": \"inactive\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"challenge\": \"<string>\",\n  \"chainId\": \"<string>\",\n  \"externalId\": \"<string>\"\n}"
						},
						{
							"id": "be8503a4-bb54-4233-bda7-40c90ec8845f",
							"name": "Invalid request",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/customers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers"
									]
								},
								"description": "Creates new customer and generates a KYC verification URL"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "93ba89f0-9194-44d2-9b3e-126e4c7d436f",
							"name": "Not authorised",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/customers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers"
									]
								},
								"description": "Creates new customer and generates a KYC verification URL"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "5333e0b7-4756-4208-9063-e57f38525f27",
							"name": "Customer already exists",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"chainId\": \"eip155:280:0x078A9c24556eF8198Ae8264253E78E8B02ed0bC1\",\n  \"externalId\": \"6e021e3f-57ae-4e76-8c07-245bbb21c1bb\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/customers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "a203b127-c955-441d-80bb-e75244c5077a",
							"name": "Internal error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"chainId\": \"eip155:280:0x078A9c24556eF8198Ae8264253E78E8B02ed0bC1\",\n  \"externalId\": \"6e021e3f-57ae-4e76-8c07-245bbb21c1bb\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/customers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Retrieve customer challenge",
					"id": "dae0f2cc-ad29-4cca-9554-04d8286581ca",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "(Required) HTTP message signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/customers/:customerId/challenge",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"customers",
								":customerId",
								"challenge"
							],
							"variable": [
								{
									"key": "customerId",
									"value": "<customer-id>",
									"description": "(Required) ID of customer to be challenged"
								}
							]
						},
						"description": "Retrieves challenge to verify customer's ownership of their blockchain account. This operation invalidates any previously issued challenges for the customer"
					},
					"response": [
						{
							"id": "32023d58-717d-41bb-b428-e6cacc46fb9b",
							"name": "Successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId/challenge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId",
										"challenge"
									],
									"variable": [
										{
											"key": "customerId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "html",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"challenge\": \"<string>\"\n}"
						},
						{
							"id": "d25acd78-541c-48a7-9a38-dc15afb6ecbf",
							"name": "Invalid request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId/challenge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId",
										"challenge"
									],
									"variable": [
										{
											"key": "customerId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "bd029e67-48a0-49b7-968f-10767685924e",
							"name": "Not authorised",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId/challenge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId",
										"challenge"
									],
									"variable": [
										{
											"key": "customerId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "e86a495d-8953-4017-a2df-67cb4a9ec3ce",
							"name": "Customer not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId/challenge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId",
										"challenge"
									],
									"variable": [
										{
											"key": "customerId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "d5a04650-32a0-4a7e-ad71-9acc1dfad9d5",
							"name": "Internal error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId/challenge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId",
										"challenge"
									],
									"variable": [
										{
											"key": "customerId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Sign previously issued customer challenge",
					"id": "a1d090c0-8f40-49a4-a180-b8043d974087",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"description": "(Required) Content digest",
								"key": "Content-Digest",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP message signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "(Required) Idempotency key (UUID)",
								"key": "Idempotency-Key",
								"value": "{{$randomUUID}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ownerId\": \"<blockchain-id>\",\n    \"challenge\": \"<challenge>\",\n    \"signature\": \"<signature>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/customers/:customerId/challenge/sign",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"customers",
								":customerId",
								"challenge",
								"sign"
							],
							"variable": [
								{
									"key": "customerId",
									"value": "<customer-id>",
									"description": "(Required) ID of customer to be challenged"
								}
							]
						},
						"description": "Signs previously issued challenge to verify customer's ownership of their blockchain account"
					},
					"response": [
						{
							"id": "a73cf547-8835-4f72-b7e3-90b1d7c5626d",
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ownerId\": \"ut consequat ex Ut\",\n  \"challenge\": \"<string>\",\n  \"signature\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId/challenge/sign",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId",
										"challenge",
										"sign"
									],
									"variable": [
										{
											"key": "customerId"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "29bbce1b-c71e-4ea6-8d59-ac9e2f7e85a4",
							"name": "Invalid request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ownerId\": \"ut consequat ex Ut\",\n  \"challenge\": \"<string>\",\n  \"signature\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId/challenge/sign",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId",
										"challenge",
										"sign"
									],
									"variable": [
										{
											"key": "customerId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "57c18647-9b67-44d7-8cf8-9d7085247854",
							"name": "Not authorised",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ownerId\": \"ut consequat ex Ut\",\n  \"challenge\": \"<string>\",\n  \"signature\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId/challenge/sign",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId",
										"challenge",
										"sign"
									],
									"variable": [
										{
											"key": "customerId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "17c1a585-a5a9-4503-9a36-783b467e332c",
							"name": "Customer not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ownerId\": \"ut consequat ex Ut\",\n  \"challenge\": \"<string>\",\n  \"signature\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId/challenge/sign",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId",
										"challenge",
										"sign"
									],
									"variable": [
										{
											"key": "customerId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "505c3171-fd3c-4b3d-b47a-06d3e1464bcb",
							"name": "Challenge already signed",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ownerId\": \"eip155:280:0x43158f45b5EbD7b1179130131DF00393928C2691\",\n  \"challenge\": \"TnpOak5Ea3dPRGN0T0RVd1l5MDBNV0V3TFdFd05HWXROakJqTWpnNE4yVmlabVk0\",\n  \"signature\": \"c2lnbmF0dXJl\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId/challenge/sign",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId",
										"challenge",
										"sign"
									],
									"variable": [
										{
											"key": "customerId"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "1935ca86-f02c-40fb-bdba-09ad1608620e",
							"name": "Internal error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ownerId\": \"eip155:280:0x43158f45b5EbD7b1179130131DF00393928C2691\",\n  \"challenge\": \"TnpOak5Ea3dPRGN0T0RVd1l5MDBNV0V3TFdFd05HWXROakJqTWpnNE4yVmlabVk0\",\n  \"signature\": \"c2lnbmF0dXJl\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId/challenge/sign",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId",
										"challenge",
										"sign"
									],
									"variable": [
										{
											"key": "customerId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Deactivate customer",
					"id": "fd6d9f31-c2ea-4875-a235-0c04de8b5ec6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) Idempotency key (free format)",
								"key": "Idempotency-Key",
								"value": "{{$randomUUID}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/customers/:customerId/deactivate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"customers",
								":customerId",
								"deactivate"
							],
							"variable": [
								{
									"key": "customerId",
									"value": "<customer-id>",
									"description": "(Required) ID of customer to be deactivated"
								}
							]
						},
						"description": "Deactivates customer and all associated resources"
					},
					"response": [
						{
							"id": "c9bb9bf3-cdb6-49b6-bc3d-8bef7aeaadec",
							"name": "Successful operation",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.sandbox.offblocks.xyz/v1/customers/:customerId/deactivate",
									"protocol": "https",
									"host": [
										"api",
										"sandbox",
										"offblocks",
										"xyz"
									],
									"path": [
										"v1",
										"customers",
										":customerId",
										"deactivate"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "<string>",
											"description": "(Required) ID of customer to be deactivated"
										}
									]
								},
								"description": "Deactivates customer and all associated resources"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "html",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"status\": \"rejected\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"externalId\": \"<string>\",\n  \"chainId\": \"<string>\"\n}"
						},
						{
							"id": "ced908ca-42d5-42d6-b9a5-f5b7ea1ad203",
							"name": "Invalid request",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId/deactivate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId",
										"deactivate"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "<string>",
											"description": "(Required) ID of customer to be deactivated"
										}
									]
								},
								"description": "Deactivates customer and all associated resources"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "78f2818d-7597-48c9-b28e-652525e94b9f",
							"name": "Not authorised",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId/deactivate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId",
										"deactivate"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "<string>",
											"description": "(Required) ID of customer to be deactivated"
										}
									]
								},
								"description": "Deactivates customer and all associated resources"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "aa03df00-b018-47a1-a2b2-0d4d32a634f5",
							"name": "Customer not found",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId/deactivate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId",
										"deactivate"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "<string>",
											"description": "(Required) ID of customer to be deactivated"
										}
									]
								},
								"description": "Deactivates customer and all associated resources"
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "74685760-e033-4111-8982-51d8f3bb60a9",
							"name": "Invalid state transition",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId/deactivate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId",
										"deactivate"
									],
									"variable": [
										{
											"key": "customerId"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "f589641c-a258-4f1d-8a26-a780e70dfc2f",
							"name": "Internal error",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId/deactivate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId",
										"deactivate"
									],
									"variable": [
										{
											"key": "customerId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Activate customer",
					"id": "46d285ae-77ce-4cfc-84f8-3fac3674827b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) Idempotency key (free format)",
								"key": "Idempotency-Key",
								"value": "{{$randomUUID}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/customers/:customerId/activate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"customers",
								":customerId",
								"activate"
							],
							"variable": [
								{
									"key": "customerId",
									"value": "<customer-id>",
									"description": "(Required) ID of customer to be activated"
								}
							]
						},
						"description": "Activates customer and all associated resources"
					},
					"response": [
						{
							"id": "fb2f3aad-32b5-4d77-982c-d56ad361b509",
							"name": "Successful operation",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.sandbox.offblocks.xyz/v1/customers/:customerId/activate",
									"protocol": "https",
									"host": [
										"api",
										"sandbox",
										"offblocks",
										"xyz"
									],
									"path": [
										"v1",
										"customers",
										":customerId",
										"activate"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "<string>",
											"description": "(Required) ID of customer to be activated"
										}
									]
								},
								"description": "Activates customer and all associated resources"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "html",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"status\": \"initiating\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"externalId\": \"<string>\",\n  \"chainId\": \"<string>\"\n}"
						},
						{
							"id": "dde769e3-53e9-4948-82dd-435ee49860cf",
							"name": "Invalid request",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId/activate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId",
										"activate"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "<string>",
											"description": "(Required) ID of customer to be activated"
										}
									]
								},
								"description": "Activates customer and all associated resources"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "12be394d-71f7-4c3b-9955-f92914d09a86",
							"name": "Not authorised",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId/activate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId",
										"activate"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "<string>",
											"description": "(Required) ID of customer to be activated"
										}
									]
								},
								"description": "Activates customer and all associated resources"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "45c25c9b-cb1f-4d40-aa02-8a8386a9490a",
							"name": "Customer not found",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId/activate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId",
										"activate"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "<string>",
											"description": "(Required) ID of customer to be activated"
										}
									]
								},
								"description": "Activates customer and all associated resources"
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "4942edf7-6c26-4404-a1b5-566da177e53f",
							"name": "Invalid state transition",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId/activate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId",
										"activate"
									],
									"variable": [
										{
											"key": "customerId"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "c96bf26a-3640-4384-86e6-93f908a6f79b",
							"name": "Internal error",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId/activate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId",
										"activate"
									],
									"variable": [
										{
											"key": "customerId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						}
					]
				}
			],
			"id": "c45c6185-f683-4dea-99e9-01d386dcd884"
		},
		{
			"name": "accounts",
			"item": [
				{
					"name": "Retrieve accounts",
					"id": "21aa5677-ce1f-4192-8284-f2bd43d15d51",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/accounts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"accounts"
							]
						},
						"description": "Retrieves accounts' details"
					},
					"response": [
						{
							"id": "407b046b-2559-4ef6-a042-69c0b797606e",
							"name": "Successful operation",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.sandbox.offblocks.xyz/v1/accounts",
									"protocol": "https",
									"host": [
										"api",
										"sandbox",
										"offblocks",
										"xyz"
									],
									"path": [
										"v1",
										"accounts"
									]
								},
								"description": "Retrieves accounts' details"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "html",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"customerId\": \"<uuid>\",\n    \"status\": \"initiating\",\n    \"type\": \"card_account\",\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"currencies\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"customerId\": \"<uuid>\",\n    \"status\": \"active\",\n    \"type\": \"card_account\",\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"currencies\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]"
						},
						{
							"id": "26c7becb-bc14-4b83-afda-dafa7342966f",
							"name": "Invalid request",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts"
									]
								},
								"description": "Retrieves accounts' details"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "8192fde3-adda-40fc-bca2-06c6fdb1f00b",
							"name": "Not authorised",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts"
									]
								},
								"description": "Retrieves accounts' details"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "63a8536d-0070-4905-8561-9c07abf8680f",
							"name": "Internal error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Retrieve account",
					"id": "4e2ed2d4-bda0-4eeb-82dc-06884dd65693",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/accounts/:accountId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"accounts",
								":accountId"
							],
							"variable": [
								{
									"key": "accountId",
									"value": "<account-id>",
									"description": "(Required) ID of account to be retrieved"
								}
							]
						},
						"description": "Retrieves account's details"
					},
					"response": [
						{
							"id": "4fae46bf-dd71-44cc-8b07-2f2eadf0394e",
							"name": "Successful operation",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.sandbox.offblocks.xyz/v1/accounts/:accountId",
									"protocol": "https",
									"host": [
										"api",
										"sandbox",
										"offblocks",
										"xyz"
									],
									"path": [
										"v1",
										"accounts",
										":accountId"
									],
									"variable": [
										{
											"key": "accountId",
											"value": "<string>",
											"description": "(Required) ID of account to be retrieved"
										}
									]
								},
								"description": "Retrieves account's details"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "html",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"customerId\": \"<uuid>\",\n  \"status\": \"closed\",\n  \"type\": \"card_account\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"currencies\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"id": "d9281075-e0b2-4d2f-a819-b7a2d5059656",
							"name": "Invalid request",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId"
									],
									"variable": [
										{
											"key": "accountId",
											"value": "<string>",
											"description": "(Required) ID of account to be retrieved"
										}
									]
								},
								"description": "Retrieves account's details"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "8aba8a7d-c224-45b2-aff4-fa0d69172cfd",
							"name": "Not authorised",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId"
									],
									"variable": [
										{
											"key": "accountId",
											"value": "<string>",
											"description": "(Required) ID of account to be retrieved"
										}
									]
								},
								"description": "Retrieves account's details"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "3bf98771-a3f5-42f5-b0f0-31afe546f667",
							"name": "Account not found",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId"
									],
									"variable": [
										{
											"key": "accountId",
											"value": "<string>",
											"description": "(Required) ID of account to be retrieved"
										}
									]
								},
								"description": "Retrieves account's details"
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "5d0295bc-cc21-4b85-9d64-f068d86143d4",
							"name": "Internal error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId"
									],
									"variable": [
										{
											"key": "accountId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Retrieve customer accounts",
					"id": "784096b4-1e45-49d7-b951-d0a2de026f83",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/customers/:customerId/accounts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"customers",
								":customerId",
								"accounts"
							],
							"variable": [
								{
									"key": "customerId",
									"value": "<customer-id>",
									"description": "(Required) ID of the customer"
								}
							]
						},
						"description": "Retrieves customer's accounts"
					},
					"response": [
						{
							"id": "e2afac06-42e1-4845-90c2-98b3e214b65c",
							"name": "Successful operation",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.sandbox.offblocks.xyz/v1/customers/:customerId/accounts",
									"protocol": "https",
									"host": [
										"api",
										"sandbox",
										"offblocks",
										"xyz"
									],
									"path": [
										"v1",
										"customers",
										":customerId",
										"accounts"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "<string>",
											"description": "(Required) ID of the customer"
										}
									]
								},
								"description": "Retrieves customer's accounts"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "html",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"customerId\": \"<uuid>\",\n    \"status\": \"pending\",\n    \"type\": \"card_account\",\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"currencies\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"customerId\": \"<uuid>\",\n    \"status\": \"initiating\",\n    \"type\": \"card_account\",\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"currencies\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]"
						},
						{
							"id": "474a2227-075e-42ba-ba44-0b453b906183",
							"name": "Invalid request",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId",
										"accounts"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "<string>",
											"description": "(Required) ID of the customer"
										}
									]
								},
								"description": "Retrieves customer's accounts"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "41f3f82d-bc7f-4db0-a01a-f820126b6154",
							"name": "Not authorised",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId",
										"accounts"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "<string>",
											"description": "(Required) ID of the customer"
										}
									]
								},
								"description": "Retrieves customer's accounts"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "96cc026a-61eb-4126-894d-6bfd77c179fd",
							"name": "Customer not found",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId",
										"accounts"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "<string>",
											"description": "(Required) ID of the customer"
										}
									]
								},
								"description": "Retrieves customer's accounts"
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "7c7fe77d-a71e-4a5a-a038-767aeb7d8be7",
							"name": "Internal error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId",
										"accounts"
									],
									"variable": [
										{
											"key": "customerId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Create new customer account",
					"id": "e482c39c-3780-4299-ad56-ded99d6bac25",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"description": "(Required) Content digest",
								"key": "Content-Digest",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) Idempotency key (free format)",
								"key": "Idempotency-Key",
								"value": "{{$randomUUID}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"type\": \"card_account\",\n    \"currencies\": [\n        \"EUR\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/customers/:customerId/accounts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"customers",
								":customerId",
								"accounts"
							],
							"variable": [
								{
									"key": "customerId",
									"value": "<customer-id>",
									"description": "(Required) ID of customer"
								}
							]
						},
						"description": "Creates new account for the customer"
					},
					"response": [
						{
							"id": "201f94b5-3c34-4415-87d8-238a3483dcfe",
							"name": "Successful operation",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<string>\",\n  \"type\": \"CARD_ACCOUNT\",\n  \"currencies\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"signature\": {\n    \"chainId\": \"<integer>\",\n    \"owner\": \"<string>\",\n    \"r\": \"<string>\",\n    \"s\": \"<string>\",\n    \"v\": \"<integer>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.sandbox.offblocks.xyz/v1/customers/:customerId/accounts",
									"protocol": "https",
									"host": [
										"api",
										"sandbox",
										"offblocks",
										"xyz"
									],
									"path": [
										"v1",
										"customers",
										":customerId",
										"accounts"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "<string>",
											"description": "(Required) ID of customer"
										}
									]
								},
								"description": "Creates new account for the customer"
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "html",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"customerId\": \"<uuid>\",\n  \"status\": \"pending\",\n  \"type\": \"card_account\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"currencies\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"challenge\": \"<string>\"\n}"
						},
						{
							"id": "06a349d0-8728-4638-b466-a1262593d5c9",
							"name": "Invalid request",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<string>\",\n  \"type\": \"CARD_ACCOUNT\",\n  \"currencies\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"signature\": {\n    \"chainId\": \"<integer>\",\n    \"owner\": \"<string>\",\n    \"r\": \"<string>\",\n    \"s\": \"<string>\",\n    \"v\": \"<integer>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId",
										"accounts"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "<string>",
											"description": "(Required) ID of customer"
										}
									]
								},
								"description": "Creates new account for the customer"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "a0f85021-c9ec-4947-9dc3-952d8aeb3d3f",
							"name": "Not authorised",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<string>\",\n  \"type\": \"CARD_ACCOUNT\",\n  \"currencies\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"signature\": {\n    \"chainId\": \"<integer>\",\n    \"owner\": \"<string>\",\n    \"r\": \"<string>\",\n    \"s\": \"<string>\",\n    \"v\": \"<integer>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId",
										"accounts"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "<string>",
											"description": "(Required) ID of customer"
										}
									]
								},
								"description": "Creates new account for the customer"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "c3c248c0-0601-47e5-9964-aa39c41d61f9",
							"name": "Customer not found",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<string>\",\n  \"type\": \"CARD_ACCOUNT\",\n  \"currencies\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"signature\": {\n    \"chainId\": \"<integer>\",\n    \"owner\": \"<string>\",\n    \"r\": \"<string>\",\n    \"s\": \"<string>\",\n    \"v\": \"<integer>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId",
										"accounts"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "<string>",
											"description": "(Required) ID of customer"
										}
									]
								},
								"description": "Creates new account for the customer"
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "248f2c84-dda6-49ae-825b-95909bd307e3",
							"name": "Internal error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"CARD_ACCOUNT\",\n  \"currencies\": [\n    \"EUR\"\n  ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId",
										"accounts"
									],
									"variable": [
										{
											"key": "customerId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Retrieve account challenge",
					"id": "7be4de38-fcc7-407d-89d4-6fdc1f6ecf9e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "(Required) HTTP message signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/accounts/:accountId/challenge",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"accounts",
								":accountId",
								"challenge"
							],
							"variable": [
								{
									"key": "accountId",
									"value": "<account-id>",
									"description": "(Required) ID of account to be challenged"
								}
							]
						},
						"description": "Retrieves challenge to sign account creation or deletion transaction on-chain. This operation invalidates any previously issued challenges for the account"
					},
					"response": [
						{
							"id": "24ff9404-625b-42f3-a466-306114b49746",
							"name": "Successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId/challenge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId",
										"challenge"
									],
									"variable": [
										{
											"key": "accountId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "html",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"challenge\": \"<string>\"\n}"
						},
						{
							"id": "8ce753f5-550d-473d-9010-d549c5b7e0dc",
							"name": "Invalid request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId/challenge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId",
										"challenge"
									],
									"variable": [
										{
											"key": "accountId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "a03f75e6-93fd-4d82-8975-71cc74b4c532",
							"name": "Not authorised",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId/challenge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId",
										"challenge"
									],
									"variable": [
										{
											"key": "accountId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "04153f12-046b-4d31-9a6e-860516a07d74",
							"name": "Account not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId/challenge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId",
										"challenge"
									],
									"variable": [
										{
											"key": "accountId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "1fe2343c-cedf-444b-bb0a-90525d55a500",
							"name": "Internal error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId/challenge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId",
										"challenge"
									],
									"variable": [
										{
											"key": "accountId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Sign previously issued account challenge",
					"id": "baa6a3d6-7785-4969-90fb-2fda0b6b6472",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"description": "(Required) Content digest",
								"key": "Content-Digest",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP message signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "(Required) Idempotency key (UUID)",
								"key": "Idempotency-Key",
								"value": "{{$randomUUID}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ownerId\": \"<blockchain-id>\",\n    \"challenge\": \"<challenge>\",\n    \"signature\": \"<signature>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/accounts/:accountId/challenge/sign",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"accounts",
								":accountId",
								"challenge",
								"sign"
							],
							"variable": [
								{
									"key": "accountId",
									"value": "<account-id>",
									"description": "(Required) ID of account to be challenged"
								}
							]
						},
						"description": "Signs previously issued challenge to sign account creation or deletion transaction on-chain"
					},
					"response": [
						{
							"id": "f5951ebe-5e6e-48da-9f07-a77f330449fc",
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ownerId\": \"ut consequat ex Ut\",\n  \"challenge\": \"<string>\",\n  \"signature\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId/challenge/sign",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId",
										"challenge",
										"sign"
									],
									"variable": [
										{
											"key": "accountId"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "3e98ac3c-743e-495d-885e-8fe36aef8371",
							"name": "Invalid request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ownerId\": \"ut consequat ex Ut\",\n  \"challenge\": \"<string>\",\n  \"signature\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId/challenge/sign",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId",
										"challenge",
										"sign"
									],
									"variable": [
										{
											"key": "accountId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "9ebfb50e-e48f-4e74-ad56-79ac7b185603",
							"name": "Not authorised",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ownerId\": \"ut consequat ex Ut\",\n  \"challenge\": \"<string>\",\n  \"signature\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId/challenge/sign",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId",
										"challenge",
										"sign"
									],
									"variable": [
										{
											"key": "accountId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "61535330-1bbb-449d-a309-ed5b2d4ffa78",
							"name": "Account not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ownerId\": \"ut consequat ex Ut\",\n  \"challenge\": \"<string>\",\n  \"signature\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId/challenge/sign",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId",
										"challenge",
										"sign"
									],
									"variable": [
										{
											"key": "accountId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "52f1c438-6e75-482c-88ee-ba360539612f",
							"name": "Challenge already signed",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ownerId\": \"eip155:280:0x43158f45b5EbD7b1179130131DF00393928C2691\",\n  \"challenge\": \"YTEzNzljOTktZTUwMi00MjhhLWI2OWItOTlhZTc1ODAzMjIy\",\n  \"signature\": \"c2lnbmF0dXJl\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId/challenge/sign",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId",
										"challenge",
										"sign"
									],
									"variable": [
										{
											"key": "accountId"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "02370751-f411-419b-8ec8-b9edff90b771",
							"name": "Internal error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ownerId\": \"eip155:280:0x43158f45b5EbD7b1179130131DF00393928C2691\",\n  \"challenge\": \"YTEzNzljOTktZTUwMi00MjhhLWI2OWItOTlhZTc1ODAzMjIy\",\n  \"signature\": \"c2lnbmF0dXJl\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId/challenge/sign",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId",
										"challenge",
										"sign"
									],
									"variable": [
										{
											"key": "accountId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Deactivate account",
					"id": "5eef180e-a9e1-491d-8b90-4431edd27756",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) Idempotency key (free format)",
								"key": "Idempotency-Key",
								"value": "{{$randomUUID}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/accounts/:accountId/deactivate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"accounts",
								":accountId",
								"deactivate"
							],
							"variable": [
								{
									"key": "accountId",
									"value": "<account-id>",
									"description": "(Required) ID of account to be deactivated"
								}
							]
						},
						"description": "Deactivates account and all associated resources"
					},
					"response": [
						{
							"id": "b55b2a46-eb5c-4b29-bdc0-c005b5f1f23d",
							"name": "Successful operation",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.sandbox.offblocks.xyz/v1/accounts/:accountId/deactivate",
									"protocol": "https",
									"host": [
										"api",
										"sandbox",
										"offblocks",
										"xyz"
									],
									"path": [
										"v1",
										"accounts",
										":accountId",
										"deactivate"
									],
									"variable": [
										{
											"key": "accountId",
											"value": "<string>",
											"description": "(Required) ID of account to be deactivated"
										}
									]
								},
								"description": "Deactivates account and all associated resources"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "html",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"customerId\": \"<uuid>\",\n  \"status\": \"closed\",\n  \"type\": \"card_account\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"currencies\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"id": "30b7911b-6c24-4165-91a2-cbf8ed63a342",
							"name": "Invalid request",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId/deactivate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId",
										"deactivate"
									],
									"variable": [
										{
											"key": "accountId",
											"value": "<string>",
											"description": "(Required) ID of account to be deactivated"
										}
									]
								},
								"description": "Deactivates account and all associated resources"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "a4b68de7-a397-42fd-b4ad-55ac30140bf3",
							"name": "Not authorised",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId/deactivate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId",
										"deactivate"
									],
									"variable": [
										{
											"key": "accountId",
											"value": "<string>",
											"description": "(Required) ID of account to be deactivated"
										}
									]
								},
								"description": "Deactivates account and all associated resources"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "d7d36a12-fff7-445e-8387-0b927f43c044",
							"name": "Account not found",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId/deactivate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId",
										"deactivate"
									],
									"variable": [
										{
											"key": "accountId",
											"value": "<string>",
											"description": "(Required) ID of account to be deactivated"
										}
									]
								},
								"description": "Deactivates account and all associated resources"
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "cdb9ee11-965d-4768-83eb-8fe9dab19947",
							"name": "Invalid state transition",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId/deactivate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId",
										"deactivate"
									],
									"variable": [
										{
											"key": "accountId"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "96a3964a-ec18-45dc-91d4-f88c17de0c7a",
							"name": "Internal error",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId/deactivate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId",
										"deactivate"
									],
									"variable": [
										{
											"key": "accountId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Activate account",
					"id": "b28eed4d-efd1-45dd-94a4-7dd59c834add",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) Idempotency key (free format)",
								"key": "Idempotency-Key",
								"value": "{{$randomUUID}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/accounts/:accountId/activate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"accounts",
								":accountId",
								"activate"
							],
							"variable": [
								{
									"key": "accountId",
									"value": "<account-id>",
									"description": "(Required) ID of account to be activated"
								}
							]
						},
						"description": "Activates account and all associated resources"
					},
					"response": [
						{
							"id": "4687b35a-2a6f-4aa1-b3e3-72ac5df5fb61",
							"name": "Successful operation",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.sandbox.offblocks.xyz/v1/accounts/:accountId/activate",
									"protocol": "https",
									"host": [
										"api",
										"sandbox",
										"offblocks",
										"xyz"
									],
									"path": [
										"v1",
										"accounts",
										":accountId",
										"activate"
									],
									"variable": [
										{
											"key": "accountId",
											"value": "<string>",
											"description": "(Required) ID of account to be activated"
										}
									]
								},
								"description": "Activates account and all associated resources"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "html",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"customerId\": \"<uuid>\",\n  \"status\": \"pending\",\n  \"type\": \"card_account\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"currencies\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"id": "2684033d-99b0-4365-87fc-2f7bfda6f4ba",
							"name": "Invalid request",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId/activate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId",
										"activate"
									],
									"variable": [
										{
											"key": "accountId",
											"value": "<string>",
											"description": "(Required) ID of account to be activated"
										}
									]
								},
								"description": "Activates account and all associated resources"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "4ac630b1-c0d6-4733-9402-d162c41bb0e8",
							"name": "Not authorised",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId/activate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId",
										"activate"
									],
									"variable": [
										{
											"key": "accountId",
											"value": "<string>",
											"description": "(Required) ID of account to be activated"
										}
									]
								},
								"description": "Activates account and all associated resources"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "8f335bf5-f73d-409c-aefe-a3f3a2091865",
							"name": "Account not found",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId/activate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId",
										"activate"
									],
									"variable": [
										{
											"key": "accountId",
											"value": "<string>",
											"description": "(Required) ID of account to be activated"
										}
									]
								},
								"description": "Activates account and all associated resources"
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "536ac75c-1e0a-4389-921e-b9b9a5a150de",
							"name": "Invalid state transition",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId/activate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId",
										"activate"
									],
									"variable": [
										{
											"key": "accountId"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "1abf0c3f-ec2a-4843-8f5d-a4c9ec3fec9e",
							"name": "Internal error",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId/activate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId",
										"activate"
									],
									"variable": [
										{
											"key": "accountId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Close account",
					"id": "d32de123-92d4-4f7f-900f-184a88650bd9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) Idempotency key (free format)",
								"key": "Idempotency-Key",
								"value": "{{$randomUUID}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"signature\": {\n    \"chainId\": \"<integer>\",\n    \"owner\": \"<string>\",\n    \"r\": \"<string>\",\n    \"s\": \"<string>\",\n    \"v\": \"<integer>\"\n  }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/accounts/:accountId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"accounts",
								":accountId"
							],
							"variable": [
								{
									"key": "accountId",
									"value": "<account-id>",
									"description": "(Required) ID of account to be closed"
								}
							]
						},
						"description": "Closes account"
					},
					"response": [
						{
							"id": "7299d5ea-5c37-456d-af8f-60a3fb169e06",
							"name": "Invalid request",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"signature\": {\n    \"chainId\": \"<integer>\",\n    \"owner\": \"<string>\",\n    \"r\": \"<string>\",\n    \"s\": \"<string>\",\n    \"v\": \"<integer>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId"
									],
									"variable": [
										{
											"key": "accountId",
											"value": "<string>",
											"description": "(Required) ID of account to be closed"
										}
									]
								},
								"description": "Closes account"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "7f341d66-1164-4ba4-b42a-5683660a7e79",
							"name": "Not authorised",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"signature\": {\n    \"chainId\": \"<integer>\",\n    \"owner\": \"<string>\",\n    \"r\": \"<string>\",\n    \"s\": \"<string>\",\n    \"v\": \"<integer>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId"
									],
									"variable": [
										{
											"key": "accountId",
											"value": "<string>",
											"description": "(Required) ID of account to be closed"
										}
									]
								},
								"description": "Closes account"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "90a55215-d40b-4693-8ff4-f856ab6677ac",
							"name": "Account not found",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"signature\": {\n    \"chainId\": \"<integer>\",\n    \"owner\": \"<string>\",\n    \"r\": \"<string>\",\n    \"s\": \"<string>\",\n    \"v\": \"<integer>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId"
									],
									"variable": [
										{
											"key": "accountId",
											"value": "<string>",
											"description": "(Required) ID of account to be closed"
										}
									]
								},
								"description": "Closes account"
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "6deac779-1117-46a0-99b7-e027a0b16d04",
							"name": "Successful operation",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"signature\": {\n    \"chainId\": \"<integer>\",\n    \"owner\": \"<string>\",\n    \"r\": \"<string>\",\n    \"s\": \"<string>\",\n    \"v\": \"<integer>\"\n  }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId"
									],
									"variable": [
										{
											"key": "accountId"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "107310e4-3a5f-4c8a-9ee3-11059a76883d",
							"name": "Invalid state transition",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"signature\": {\n    \"chainId\": \"<integer>\",\n    \"owner\": \"<string>\",\n    \"r\": \"<string>\",\n    \"s\": \"<string>\",\n    \"v\": \"<integer>\"\n  }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId"
									],
									"variable": [
										{
											"key": "accountId"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "8dfdc7fe-7c06-49d2-955a-86328c8d5070",
							"name": "Internal error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"signature\": {\n    \"chainId\": \"<integer>\",\n    \"owner\": \"<string>\",\n    \"r\": \"<string>\",\n    \"s\": \"<string>\",\n    \"v\": \"<integer>\"\n  }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId"
									],
									"variable": [
										{
											"key": "accountId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						}
					]
				}
			],
			"id": "8be23c85-b622-43e2-ba0d-0a7bfa49c232"
		},
		{
			"name": "cards",
			"item": [
				{
					"name": "Retrieve cards",
					"id": "8fd35f4e-8acb-4c32-beb7-69edea8e8166",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/cards",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cards"
							]
						},
						"description": "Retrieves cards' details"
					},
					"response": [
						{
							"id": "8ce923a9-966f-4147-9f19-aa6d89f4562e",
							"name": "Successful operation",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.sandbox.offblocks.xyz/v1/cards",
									"protocol": "https",
									"host": [
										"api",
										"sandbox",
										"offblocks",
										"xyz"
									],
									"path": [
										"v1",
										"cards"
									]
								},
								"description": "Retrieves cards' details"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "html",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"accountId\": \"<uuid>\",\n    \"customerId\": \"<uuid>\",\n    \"type\": \"physical\",\n    \"status\": \"suspended\",\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"name\": \"<string>\",\n    \"network\": \"mastercard\",\n    \"lastFourDigits\": \"<string>\",\n    \"expirationDate\": \"<string>\",\n    \"billingAddress\": {\n      \"firstLine\": \"<string>\",\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postCode\": \"<string>\",\n      \"secondLine\": \"<string>\",\n      \"state\": \"<string>\"\n    }\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"accountId\": \"<uuid>\",\n    \"customerId\": \"<uuid>\",\n    \"type\": \"virtual\",\n    \"status\": \"blocked\",\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"name\": \"<string>\",\n    \"network\": \"visa\",\n    \"lastFourDigits\": \"<string>\",\n    \"expirationDate\": \"<string>\",\n    \"billingAddress\": {\n      \"firstLine\": \"<string>\",\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postCode\": \"<string>\",\n      \"secondLine\": \"<string>\",\n      \"state\": \"<string>\"\n    }\n  }\n]"
						},
						{
							"id": "4918314e-f4d8-48bf-9946-aa739e4cf180",
							"name": "Invalid request",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cards"
									]
								},
								"description": "Retrieves cards' details"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "6bf4cf85-1de1-48ff-9ddc-5b89ac85358e",
							"name": "Not authorised",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cards"
									]
								},
								"description": "Retrieves cards' details"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "f92b32f5-21a8-44da-8fb5-f115f06a3041",
							"name": "Internal error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cards"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Retrieve card",
					"id": "5a6a330f-d318-4a07-a46d-566e394e6c6e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/cards/:cardId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cards",
								":cardId"
							],
							"variable": [
								{
									"key": "cardId",
									"value": "<card-id>",
									"description": "(Required) ID of a card to be retrieved"
								}
							]
						},
						"description": "Retrieves card's details"
					},
					"response": [
						{
							"id": "0e2024b7-3322-427a-9ed6-d07b92551a80",
							"name": "Successful operation",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.sandbox.offblocks.xyz/v1/cards/:cardId",
									"protocol": "https",
									"host": [
										"api",
										"sandbox",
										"offblocks",
										"xyz"
									],
									"path": [
										"v1",
										"cards",
										":cardId"
									],
									"variable": [
										{
											"key": "cardId",
											"value": "<string>",
											"description": "(Required) ID of a card to be retrieved"
										}
									]
								},
								"description": "Retrieves card's details"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "html",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"accountId\": \"<uuid>\",\n  \"customerId\": \"<uuid>\",\n  \"type\": \"virtual\",\n  \"status\": \"blocked\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"name\": \"<string>\",\n  \"network\": \"mastercard\",\n  \"lastFourDigits\": \"<string>\",\n  \"expirationDate\": \"<string>\",\n  \"billingAddress\": {\n    \"firstLine\": \"<string>\",\n    \"city\": \"<string>\",\n    \"country\": \"<string>\",\n    \"postCode\": \"<string>\",\n    \"secondLine\": \"<string>\",\n    \"state\": \"<string>\"\n  }\n}"
						},
						{
							"id": "25eb141d-96be-4417-b7ef-62d55c1830e1",
							"name": "Invalid request",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cards/:cardId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cards",
										":cardId"
									],
									"variable": [
										{
											"key": "cardId",
											"value": "<string>",
											"description": "(Required) ID of a card to be retrieved"
										}
									]
								},
								"description": "Retrieves card's details"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "a5bb1317-49e6-43fc-9ef8-e5b27c91e83d",
							"name": "Not authorised",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cards/:cardId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cards",
										":cardId"
									],
									"variable": [
										{
											"key": "cardId",
											"value": "<string>",
											"description": "(Required) ID of a card to be retrieved"
										}
									]
								},
								"description": "Retrieves card's details"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "298f2335-d1c0-4239-a475-6335a92741e5",
							"name": "Card not found",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cards/:cardId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cards",
										":cardId"
									],
									"variable": [
										{
											"key": "cardId",
											"value": "<string>",
											"description": "(Required) ID of a card to be retrieved"
										}
									]
								},
								"description": "Retrieves card's details"
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "3e6009cd-9e0a-4143-8750-825b9ccf9b67",
							"name": "Internal error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cards/:cardId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cards",
										":cardId"
									],
									"variable": [
										{
											"key": "cardId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Retrieve account cards",
					"id": "1902300e-9500-43aa-83b8-b5d589ce43aa",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/accounts/:accountId/cards",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"accounts",
								":accountId",
								"cards"
							],
							"variable": [
								{
									"key": "accountId",
									"value": "<account-id>",
									"description": "(Required) ID of the account"
								}
							]
						},
						"description": "Retrieves account's cards"
					},
					"response": [
						{
							"id": "488416c9-60e7-42ea-b057-320fbfe03999",
							"name": "Successful operation",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.sandbox.offblocks.xyz/v1/accounts/:accountId/cards",
									"protocol": "https",
									"host": [
										"api",
										"sandbox",
										"offblocks",
										"xyz"
									],
									"path": [
										"v1",
										"accounts",
										":accountId",
										"cards"
									],
									"variable": [
										{
											"key": "accountId",
											"value": "<string>",
											"description": "(Required) ID of the account"
										}
									]
								},
								"description": "Retrieves account's cards"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "html",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"accountId\": \"<uuid>\",\n    \"customerId\": \"<uuid>\",\n    \"type\": \"virtual\",\n    \"status\": \"blocked\",\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"name\": \"<string>\",\n    \"network\": \"visa\",\n    \"lastFourDigits\": \"<string>\",\n    \"expirationDate\": \"<string>\",\n    \"billingAddress\": {\n      \"firstLine\": \"<string>\",\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postCode\": \"<string>\",\n      \"secondLine\": \"<string>\",\n      \"state\": \"<string>\"\n    }\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"accountId\": \"<uuid>\",\n    \"customerId\": \"<uuid>\",\n    \"type\": \"physical\",\n    \"status\": \"inactive\",\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"name\": \"<string>\",\n    \"network\": \"mastercard\",\n    \"lastFourDigits\": \"<string>\",\n    \"expirationDate\": \"<string>\",\n    \"billingAddress\": {\n      \"firstLine\": \"<string>\",\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postCode\": \"<string>\",\n      \"secondLine\": \"<string>\",\n      \"state\": \"<string>\"\n    }\n  }\n]"
						},
						{
							"id": "ee179945-766e-46fb-9398-599dbaded21c",
							"name": "Invalid request",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId/cards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId",
										"cards"
									],
									"variable": [
										{
											"key": "accountId",
											"value": "<string>",
											"description": "(Required) ID of the account"
										}
									]
								},
								"description": "Retrieves account's cards"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "59c1440e-d0b1-49fa-99b6-e57e3a2ad9ac",
							"name": "Not authorised",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId/cards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId",
										"cards"
									],
									"variable": [
										{
											"key": "accountId",
											"value": "<string>",
											"description": "(Required) ID of the account"
										}
									]
								},
								"description": "Retrieves account's cards"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "1a25a280-5d80-4929-8782-8fc846a1550b",
							"name": "Account not found",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId/cards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId",
										"cards"
									],
									"variable": [
										{
											"key": "accountId",
											"value": "<string>",
											"description": "(Required) ID of the account"
										}
									]
								},
								"description": "Retrieves account's cards"
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "8c6040a9-a25d-4c51-a208-a633d84468ba",
							"name": "Internal error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId/cards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId",
										"cards"
									],
									"variable": [
										{
											"key": "accountId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Create new card",
					"id": "3257f32f-cec9-4df7-bfbc-9771c0a4eadc",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"description": "(Required) Content digest",
								"key": "Content-Digest",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) Idempotency key (free format)",
								"key": "Idempotency-Key",
								"value": "{{$randomUUID}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"type\": \"virtual\",\n    \"billingAddress\": {\n        \"firstLine\": \"1 Test Avenue\",\n        \"city\": \"London\",\n        \"country\": \"GB\",\n        \"postCode\": \"SW1 1AA\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/accounts/:accountId/cards",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"accounts",
								":accountId",
								"cards"
							],
							"variable": [
								{
									"key": "accountId",
									"value": "<account-id>",
									"description": "(Required) ID of account"
								}
							]
						},
						"description": "Creates new card for the account"
					},
					"response": [
						{
							"id": "0dfca241-11f4-4c05-9b0a-9ab24f186589",
							"name": "Successful operation",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<string>\",\n  \"type\": \"VIRTUAL\",\n  \"billingAddress\": {\n    \"firstLine\": \"<string>\",\n    \"city\": \"<string>\",\n    \"country\": \"<string>\",\n    \"postCode\": \"<string>\",\n    \"secondLine\": \"<string>\",\n    \"state\": \"<string>\"\n  },\n  \"shippingAddress\": {\n    \"firstLine\": \"<string>\",\n    \"city\": \"<string>\",\n    \"country\": \"<string>\",\n    \"postCode\": \"<string>\",\n    \"secondLine\": \"<string>\",\n    \"state\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.sandbox.offblocks.xyz/v1/accounts/:accountId/cards",
									"protocol": "https",
									"host": [
										"api",
										"sandbox",
										"offblocks",
										"xyz"
									],
									"path": [
										"v1",
										"accounts",
										":accountId",
										"cards"
									],
									"variable": [
										{
											"key": "accountId",
											"value": "<string>",
											"description": "(Required) ID of account"
										}
									]
								},
								"description": "Creates new card for the account"
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "html",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"accountId\": \"<uuid>\",\n  \"customerId\": \"<uuid>\",\n  \"type\": \"virtual\",\n  \"status\": \"suspended\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"name\": \"<string>\",\n  \"network\": \"mastercard\",\n  \"lastFourDigits\": \"<string>\",\n  \"expirationDate\": \"<string>\",\n  \"billingAddress\": {\n    \"firstLine\": \"<string>\",\n    \"city\": \"<string>\",\n    \"country\": \"<string>\",\n    \"postCode\": \"<string>\",\n    \"secondLine\": \"<string>\",\n    \"state\": \"<string>\"\n  }\n}"
						},
						{
							"id": "1365c34e-1455-4a38-83c8-13749687f407",
							"name": "Invalid request",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<string>\",\n  \"type\": \"VIRTUAL\",\n  \"billingAddress\": {\n    \"firstLine\": \"<string>\",\n    \"city\": \"<string>\",\n    \"country\": \"<string>\",\n    \"postCode\": \"<string>\",\n    \"secondLine\": \"<string>\",\n    \"state\": \"<string>\"\n  },\n  \"shippingAddress\": {\n    \"firstLine\": \"<string>\",\n    \"city\": \"<string>\",\n    \"country\": \"<string>\",\n    \"postCode\": \"<string>\",\n    \"secondLine\": \"<string>\",\n    \"state\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId/cards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId",
										"cards"
									],
									"variable": [
										{
											"key": "accountId",
											"value": "<string>",
											"description": "(Required) ID of account"
										}
									]
								},
								"description": "Creates new card for the account"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "cf8fa85f-f32a-4fe6-af56-bb5899426141",
							"name": "Not authorised",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<string>\",\n  \"type\": \"VIRTUAL\",\n  \"billingAddress\": {\n    \"firstLine\": \"<string>\",\n    \"city\": \"<string>\",\n    \"country\": \"<string>\",\n    \"postCode\": \"<string>\",\n    \"secondLine\": \"<string>\",\n    \"state\": \"<string>\"\n  },\n  \"shippingAddress\": {\n    \"firstLine\": \"<string>\",\n    \"city\": \"<string>\",\n    \"country\": \"<string>\",\n    \"postCode\": \"<string>\",\n    \"secondLine\": \"<string>\",\n    \"state\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId/cards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId",
										"cards"
									],
									"variable": [
										{
											"key": "accountId",
											"value": "<string>",
											"description": "(Required) ID of account"
										}
									]
								},
								"description": "Creates new card for the account"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "209dc2d7-32a7-4ce7-a3ad-14bf2f6e70a5",
							"name": "Account not found",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<string>\",\n  \"type\": \"VIRTUAL\",\n  \"billingAddress\": {\n    \"firstLine\": \"<string>\",\n    \"city\": \"<string>\",\n    \"country\": \"<string>\",\n    \"postCode\": \"<string>\",\n    \"secondLine\": \"<string>\",\n    \"state\": \"<string>\"\n  },\n  \"shippingAddress\": {\n    \"firstLine\": \"<string>\",\n    \"city\": \"<string>\",\n    \"country\": \"<string>\",\n    \"postCode\": \"<string>\",\n    \"secondLine\": \"<string>\",\n    \"state\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId/cards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId",
										"cards"
									],
									"variable": [
										{
											"key": "accountId",
											"value": "<string>",
											"description": "(Required) ID of account"
										}
									]
								},
								"description": "Creates new card for the account"
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "15dd15b0-6f37-4cb0-8048-f7c63650ba4f",
							"name": "Internal error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"VIRTUAL\",\n  \"billingAddress\": {\n    \"firstLine\": \"1 Text Avenue\",\n    \"city\": \"London\",\n    \"country\": \"GB\",\n    \"postCode\": \"SW1 1AA\"\n  }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId/cards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId",
										"cards"
									],
									"variable": [
										{
											"key": "accountId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Deactivate card",
					"id": "2a5ad24a-2f9a-4c63-8dd0-8bb7be27908a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) Idempotency key (free format)",
								"key": "Idempotency-Key",
								"value": "{{$randomUUID}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/cards/:cardId/deactivate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cards",
								":cardId",
								"deactivate"
							],
							"variable": [
								{
									"key": "cardId",
									"value": "<card-id>",
									"description": "(Required) ID of card to be deactivated"
								}
							]
						},
						"description": "Deactivates card and all associated resources"
					},
					"response": [
						{
							"id": "79a8d575-c8e2-4a72-bd21-b79a24450211",
							"name": "Successful operation",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.sandbox.offblocks.xyz/v1/cards/:cardId/deactivate",
									"protocol": "https",
									"host": [
										"api",
										"sandbox",
										"offblocks",
										"xyz"
									],
									"path": [
										"v1",
										"cards",
										":cardId",
										"deactivate"
									],
									"variable": [
										{
											"key": "cardId",
											"value": "<string>",
											"description": "(Required) ID of card to be deactivated"
										}
									]
								},
								"description": "Deactivates card and all associated resources"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "html",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"accountId\": \"<uuid>\",\n  \"customerId\": \"<uuid>\",\n  \"type\": \"physical\",\n  \"status\": \"inactive\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"name\": \"<string>\",\n  \"network\": \"visa\",\n  \"lastFourDigits\": \"<string>\",\n  \"expirationDate\": \"<string>\",\n  \"billingAddress\": {\n    \"firstLine\": \"<string>\",\n    \"city\": \"<string>\",\n    \"country\": \"<string>\",\n    \"postCode\": \"<string>\",\n    \"secondLine\": \"<string>\",\n    \"state\": \"<string>\"\n  }\n}"
						},
						{
							"id": "02c6bc15-4571-4169-a6be-2c680b7a4627",
							"name": "Invalid request",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cards/:cardId/deactivate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cards",
										":cardId",
										"deactivate"
									],
									"variable": [
										{
											"key": "cardId",
											"value": "<string>",
											"description": "(Required) ID of card to be deactivated"
										}
									]
								},
								"description": "Deactivates card and all associated resources"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "6ba07fd5-da90-42fd-9dca-ea1bef43d26a",
							"name": "Not authorised",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cards/:cardId/deactivate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cards",
										":cardId",
										"deactivate"
									],
									"variable": [
										{
											"key": "cardId",
											"value": "<string>",
											"description": "(Required) ID of card to be deactivated"
										}
									]
								},
								"description": "Deactivates card and all associated resources"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "122c70cb-a5dd-4da9-9ed9-e5998b22c67b",
							"name": "Account not found",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cards/:cardId/deactivate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cards",
										":cardId",
										"deactivate"
									],
									"variable": [
										{
											"key": "cardId",
											"value": "<string>",
											"description": "(Required) ID of card to be deactivated"
										}
									]
								},
								"description": "Deactivates card and all associated resources"
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "9a7b7364-e9fd-4ecd-af50-400f0c9fed63",
							"name": "Invalid state transition",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cards/:cardId/deactivate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cards",
										":cardId",
										"deactivate"
									],
									"variable": [
										{
											"key": "cardId"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "26bace72-f63e-477f-85c9-623be5f9f063",
							"name": "Internal error",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cards/:cardId/deactivate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cards",
										":cardId",
										"deactivate"
									],
									"variable": [
										{
											"key": "cardId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Activate card",
					"id": "31eb97f0-d4a7-49e2-960e-ddf33cf8b2e8",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) Idempotency key (free format)",
								"key": "Idempotency-Key",
								"value": "{{$randomUUID}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/cards/:cardId/activate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cards",
								":cardId",
								"activate"
							],
							"variable": [
								{
									"key": "cardId",
									"value": "<card-id>",
									"description": "(Required) ID of card to be activated"
								}
							]
						},
						"description": "Activates card and all associated resources"
					},
					"response": [
						{
							"id": "fee578df-355b-4cb2-8ad1-97d70e5a10c4",
							"name": "Successful operation",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.sandbox.offblocks.xyz/v1/cards/:cardId/activate",
									"protocol": "https",
									"host": [
										"api",
										"sandbox",
										"offblocks",
										"xyz"
									],
									"path": [
										"v1",
										"cards",
										":cardId",
										"activate"
									],
									"variable": [
										{
											"key": "cardId",
											"value": "<string>",
											"description": "(Required) ID of card to be activated"
										}
									]
								},
								"description": "Activates card and all associated resources"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "html",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"accountId\": \"<uuid>\",\n  \"customerId\": \"<uuid>\",\n  \"type\": \"virtual\",\n  \"status\": \"active\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"name\": \"<string>\",\n  \"network\": \"mastercard\",\n  \"lastFourDigits\": \"<string>\",\n  \"expirationDate\": \"<string>\",\n  \"billingAddress\": {\n    \"firstLine\": \"<string>\",\n    \"city\": \"<string>\",\n    \"country\": \"<string>\",\n    \"postCode\": \"<string>\",\n    \"secondLine\": \"<string>\",\n    \"state\": \"<string>\"\n  }\n}"
						},
						{
							"id": "9a4d8006-348d-416e-b9dd-7b32ab9bcd6d",
							"name": "Invalid request",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cards/:cardId/activate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cards",
										":cardId",
										"activate"
									],
									"variable": [
										{
											"key": "cardId",
											"value": "<string>",
											"description": "(Required) ID of card to be activated"
										}
									]
								},
								"description": "Activates card and all associated resources"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "fc9e6237-c1cb-4214-8da9-7c0b1f0d8eb9",
							"name": "Not authorised",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cards/:cardId/activate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cards",
										":cardId",
										"activate"
									],
									"variable": [
										{
											"key": "cardId",
											"value": "<string>",
											"description": "(Required) ID of card to be activated"
										}
									]
								},
								"description": "Activates card and all associated resources"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "b0a9457e-04b9-4754-ad95-f23eb8308b15",
							"name": "Account not found",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cards/:cardId/activate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cards",
										":cardId",
										"activate"
									],
									"variable": [
										{
											"key": "cardId",
											"value": "<string>",
											"description": "(Required) ID of card to be activated"
										}
									]
								},
								"description": "Activates card and all associated resources"
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "83259244-a72c-4d50-8d43-3c9e219372da",
							"name": "Invalid state transition",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cards/:cardId/activate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cards",
										":cardId",
										"activate"
									],
									"variable": [
										{
											"key": "cardId"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "d3382d98-fa4e-4bdb-898c-352efaf37271",
							"name": "Internal error",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cards/:cardId/activate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cards",
										":cardId",
										"activate"
									],
									"variable": [
										{
											"key": "cardId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Terminate card",
					"id": "2548d250-1b9c-4d7e-9f06-6ab52d6257f5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) Idempotency key (free format)",
								"key": "Idempotency-Key",
								"value": "{{$randomUUID}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/cards/:cardId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cards",
								":cardId"
							],
							"variable": [
								{
									"key": "cardId",
									"value": "<card-id>",
									"description": "(Required) ID of a card to be closed"
								}
							]
						},
						"description": "Terminates card"
					},
					"response": [
						{
							"id": "4e36b6ec-703d-4732-a08b-0a70c001127b",
							"name": "Successful operation",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "https://api.sandbox.offblocks.xyz/v1/cards/:cardId",
									"protocol": "https",
									"host": [
										"api",
										"sandbox",
										"offblocks",
										"xyz"
									],
									"path": [
										"v1",
										"cards",
										":cardId"
									],
									"variable": [
										{
											"key": "cardId",
											"value": "<string>",
											"description": "(Required) ID of a card to be closed"
										}
									]
								},
								"description": "Terminates card"
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "cf9626b1-862e-40c2-8354-e4ecfe23de6c",
							"name": "Invalid request",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cards/:cardId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cards",
										":cardId"
									],
									"variable": [
										{
											"key": "cardId",
											"value": "<string>",
											"description": "(Required) ID of a card to be closed"
										}
									]
								},
								"description": "Terminates card"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "e6aaf731-8afc-4be8-8cdf-fa279d2c8802",
							"name": "Not authorised",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cards/:cardId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cards",
										":cardId"
									],
									"variable": [
										{
											"key": "cardId",
											"value": "<string>",
											"description": "(Required) ID of a card to be closed"
										}
									]
								},
								"description": "Terminates card"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "730de310-0060-484c-a348-d91b68b1f24a",
							"name": "Card not found",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cards/:cardId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cards",
										":cardId"
									],
									"variable": [
										{
											"key": "cardId",
											"value": "<string>",
											"description": "(Required) ID of a card to be closed"
										}
									]
								},
								"description": "Terminates card"
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "48e50a29-cc1f-4157-a24b-4b9095e374b1",
							"name": "Invalid state transition",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cards/:cardId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cards",
										":cardId"
									],
									"variable": [
										{
											"key": "cardId"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "169c0575-544a-4f11-8c8d-9efcf02fc10e",
							"name": "Internal error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cards/:cardId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cards",
										":cardId"
									],
									"variable": [
										{
											"key": "cardId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						}
					]
				}
			],
			"id": "eb09101e-1771-4e2d-bd75-6b6c0e1ca183"
		},
		{
			"name": "transactions",
			"item": [
				{
					"name": "Retrieve transaction details",
					"id": "b1c0be39-b6ea-4a4e-8a6b-46cd6134a064",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/transactions/:transactionId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transactions",
								":transactionId"
							],
							"variable": [
								{
									"key": "transactionId",
									"value": "<transaction-id>",
									"description": "(Required) ID of the transaction"
								}
							]
						},
						"description": "Retrieves transaction's details"
					},
					"response": [
						{
							"id": "a375b295-db10-48d4-8126-e8c336fd1a9e",
							"name": "Successful operation",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.sandbox.offblocks.xyz/v1/transactions/:transactionId",
									"protocol": "https",
									"host": [
										"api",
										"sandbox",
										"offblocks",
										"xyz"
									],
									"path": [
										"v1",
										"transactions",
										":transactionId"
									],
									"variable": [
										{
											"key": "transactionId",
											"value": "<string>",
											"description": "(Required) ID of the transaction"
										}
									]
								},
								"description": "Retrieves transaction's details"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "html",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"accountId\": \"<uuid>\",\n  \"customerId\": \"<uuid>\",\n  \"status\": \"processed\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"cardId\": \"<uuid>\",\n  \"amount\": \"<integer>\",\n  \"currency\": \"<string>\",\n  \"token\": \"<string>\",\n  \"tokenAmount\": \"<string>\",\n  \"meta\": {\n    \"direction\": \"NOOP\",\n    \"exchangeRate\": \"<integer>\",\n    \"merchant\": {\n      \"name\": \"<string>\",\n      \"mcc\": \"<integer>\",\n      \"country\": \"<string>\",\n      \"city\": \"<string>\",\n      \"id\": \"<string>\"\n    },\n    \"transactionType\": \"PURCHASE\",\n    \"authCode\": \"<string>\"\n  },\n  \"direction\": \"credit\",\n  \"merchantAmount\": \"<string>\",\n  \"merchantCurrency\": \"<string>\",\n  \"exchangeRate\": \"<string>\",\n  \"merchant\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"mcc\": \"<integer>\",\n    \"country\": \"<string>\",\n    \"city\": \"<string>\"\n  },\n  \"fees\": [\n    {\n      \"type\": \"network\",\n      \"tokenAmount\": \"<string>\"\n    },\n    {\n      \"type\": \"service\",\n      \"tokenAmount\": \"<string>\"\n    }\n  ],\n  \"chainTransactions\": [\n    {\n      \"chainId\": \"<string>\",\n      \"createdAt\": \"<dateTime>\"\n    },\n    {\n      \"chainId\": \"<string>\",\n      \"createdAt\": \"<dateTime>\"\n    }\n  ]\n}"
						},
						{
							"id": "c998c0e7-7d79-4d9a-9e06-4c3d3333a237",
							"name": "Invalid request",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transactions/:transactionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transactions",
										":transactionId"
									],
									"variable": [
										{
											"key": "transactionId",
											"value": "<string>",
											"description": "(Required) ID of the transaction"
										}
									]
								},
								"description": "Retrieves transaction's details"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "335692c1-8136-48c3-be62-c45a329b9612",
							"name": "Not authorised",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transactions/:transactionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transactions",
										":transactionId"
									],
									"variable": [
										{
											"key": "transactionId",
											"value": "<string>",
											"description": "(Required) ID of the transaction"
										}
									]
								},
								"description": "Retrieves transaction's details"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "0e64b06d-90ef-482f-95d5-deeb8340f795",
							"name": "Transaction not found",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transactions/:transactionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transactions",
										":transactionId"
									],
									"variable": [
										{
											"key": "transactionId",
											"value": "<string>",
											"description": "(Required) ID of the transaction"
										}
									]
								},
								"description": "Retrieves transaction's details"
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "953099f1-3eb7-40b1-8cc9-6088c51edc07",
							"name": "Internal error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transactions/:transactionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transactions",
										":transactionId"
									],
									"variable": [
										{
											"key": "transactionId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Retrieve account transactions",
					"id": "659b2e11-1d8c-4c0f-804d-d6e478993e25",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/accounts/:accountId/transactions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"accounts",
								":accountId",
								"transactions"
							],
							"variable": [
								{
									"key": "accountId",
									"value": "<account-id>",
									"description": "(Required) ID of the account"
								}
							]
						},
						"description": "Retrieves account's transactions"
					},
					"response": [
						{
							"id": "7ae4ef58-be41-4443-8be4-f6da3924a279",
							"name": "Successful operation",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.sandbox.offblocks.xyz/v1/accounts/:accountId/transactions",
									"protocol": "https",
									"host": [
										"api",
										"sandbox",
										"offblocks",
										"xyz"
									],
									"path": [
										"v1",
										"accounts",
										":accountId",
										"transactions"
									],
									"variable": [
										{
											"key": "accountId",
											"value": "<string>",
											"description": "(Required) ID of the account"
										}
									]
								},
								"description": "Retrieves account's transactions"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "html",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"accountId\": \"<uuid>\",\n    \"customerId\": \"<uuid>\",\n    \"status\": \"reversed\",\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"cardId\": \"<uuid>\",\n    \"amount\": \"<integer>\",\n    \"currency\": \"<string>\",\n    \"token\": \"<string>\",\n    \"tokenAmount\": \"<string>\",\n    \"meta\": {\n      \"direction\": \"DEBIT\",\n      \"exchangeRate\": \"<integer>\",\n      \"merchant\": {\n        \"name\": \"<string>\",\n        \"mcc\": \"<integer>\",\n        \"country\": \"<string>\",\n        \"city\": \"<string>\",\n        \"id\": \"<string>\"\n      },\n      \"transactionType\": \"DEPOSIT\",\n      \"authCode\": \"<string>\"\n    },\n    \"direction\": \"credit\",\n    \"merchantAmount\": \"<string>\",\n    \"merchantCurrency\": \"<string>\",\n    \"exchangeRate\": \"<string>\",\n    \"merchant\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"mcc\": \"<integer>\",\n      \"country\": \"<string>\",\n      \"city\": \"<string>\"\n    },\n    \"fees\": [\n      {\n        \"type\": \"network\",\n        \"tokenAmount\": \"<string>\"\n      },\n      {\n        \"type\": \"partner\",\n        \"tokenAmount\": \"<string>\"\n      }\n    ],\n    \"chainTransactions\": [\n      {\n        \"chainId\": \"<string>\",\n        \"createdAt\": \"<dateTime>\"\n      },\n      {\n        \"chainId\": \"<string>\",\n        \"createdAt\": \"<dateTime>\"\n      }\n    ]\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"accountId\": \"<uuid>\",\n    \"customerId\": \"<uuid>\",\n    \"status\": \"reversing\",\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"cardId\": \"<uuid>\",\n    \"amount\": \"<integer>\",\n    \"currency\": \"<string>\",\n    \"token\": \"<string>\",\n    \"tokenAmount\": \"<string>\",\n    \"meta\": {\n      \"direction\": \"NOOP\",\n      \"exchangeRate\": \"<integer>\",\n      \"merchant\": {\n        \"name\": \"<string>\",\n        \"mcc\": \"<integer>\",\n        \"country\": \"<string>\",\n        \"city\": \"<string>\",\n        \"id\": \"<string>\"\n      },\n      \"transactionType\": \"REFUND\",\n      \"authCode\": \"<string>\"\n    },\n    \"direction\": \"debit\",\n    \"merchantAmount\": \"<string>\",\n    \"merchantCurrency\": \"<string>\",\n    \"exchangeRate\": \"<string>\",\n    \"merchant\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"mcc\": \"<integer>\",\n      \"country\": \"<string>\",\n      \"city\": \"<string>\"\n    },\n    \"fees\": [\n      {\n        \"type\": \"partner\",\n        \"tokenAmount\": \"<string>\"\n      },\n      {\n        \"type\": \"service\",\n        \"tokenAmount\": \"<string>\"\n      }\n    ],\n    \"chainTransactions\": [\n      {\n        \"chainId\": \"<string>\",\n        \"createdAt\": \"<dateTime>\"\n      },\n      {\n        \"chainId\": \"<string>\",\n        \"createdAt\": \"<dateTime>\"\n      }\n    ]\n  }\n]"
						},
						{
							"id": "f3e83129-2027-4cbc-a0c6-db033b8e4f32",
							"name": "Invalid request",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId/transactions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId",
										"transactions"
									],
									"variable": [
										{
											"key": "accountId",
											"value": "<string>",
											"description": "(Required) ID of the account"
										}
									]
								},
								"description": "Retrieves account's transactions"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "0b1dbe52-8bd8-4d34-9e5c-c0f1ce869e8c",
							"name": "Not authorised",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId/transactions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId",
										"transactions"
									],
									"variable": [
										{
											"key": "accountId",
											"value": "<string>",
											"description": "(Required) ID of the account"
										}
									]
								},
								"description": "Retrieves account's transactions"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "9c0b93f9-dc6f-4d34-8ec9-5de89784c962",
							"name": "Account not found",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId/transactions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId",
										"transactions"
									],
									"variable": [
										{
											"key": "accountId",
											"value": "<string>",
											"description": "(Required) ID of the account"
										}
									]
								},
								"description": "Retrieves account's transactions"
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "31bdf27e-0134-4ea9-b243-2df0ad58bd45",
							"name": "Internal error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId/transactions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId",
										"transactions"
									],
									"variable": [
										{
											"key": "accountId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Retrieve card transactions",
					"id": "97c8b4d6-7295-409f-ad60-3d8d69580e44",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/cards/:cardId/transactions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cards",
								":cardId",
								"transactions"
							],
							"variable": [
								{
									"key": "cardId",
									"value": "<card-id>",
									"description": "(Required) ID of the card"
								}
							]
						},
						"description": "Retrieves card's transactions"
					},
					"response": [
						{
							"id": "49328934-f8d8-4910-b5e9-73c9b78a2ea9",
							"name": "Successful operation",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.sandbox.offblocks.xyz/v1/cards/:cardId/transactions",
									"protocol": "https",
									"host": [
										"api",
										"sandbox",
										"offblocks",
										"xyz"
									],
									"path": [
										"v1",
										"cards",
										":cardId",
										"transactions"
									],
									"variable": [
										{
											"key": "cardId",
											"value": "<string>",
											"description": "(Required) ID of the card"
										}
									]
								},
								"description": "Retrieves card's transactions"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "html",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"accountId\": \"<uuid>\",\n    \"customerId\": \"<uuid>\",\n    \"status\": \"processed\",\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"cardId\": \"<uuid>\",\n    \"amount\": \"<integer>\",\n    \"currency\": \"<string>\",\n    \"token\": \"<string>\",\n    \"tokenAmount\": \"<string>\",\n    \"meta\": {\n      \"direction\": \"DEBIT\",\n      \"exchangeRate\": \"<integer>\",\n      \"merchant\": {\n        \"name\": \"<string>\",\n        \"mcc\": \"<integer>\",\n        \"country\": \"<string>\",\n        \"city\": \"<string>\",\n        \"id\": \"<string>\"\n      },\n      \"transactionType\": \"OTHER\",\n      \"authCode\": \"<string>\"\n    },\n    \"direction\": \"credit\",\n    \"merchantAmount\": \"<string>\",\n    \"merchantCurrency\": \"<string>\",\n    \"exchangeRate\": \"<string>\",\n    \"merchant\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"mcc\": \"<integer>\",\n      \"country\": \"<string>\",\n      \"city\": \"<string>\"\n    },\n    \"fees\": [\n      {\n        \"type\": \"partner\",\n        \"tokenAmount\": \"<string>\"\n      },\n      {\n        \"type\": \"network\",\n        \"tokenAmount\": \"<string>\"\n      }\n    ],\n    \"chainTransactions\": [\n      {\n        \"chainId\": \"<string>\",\n        \"createdAt\": \"<dateTime>\"\n      },\n      {\n        \"chainId\": \"<string>\",\n        \"createdAt\": \"<dateTime>\"\n      }\n    ]\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"accountId\": \"<uuid>\",\n    \"customerId\": \"<uuid>\",\n    \"status\": \"reversing\",\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"cardId\": \"<uuid>\",\n    \"amount\": \"<integer>\",\n    \"currency\": \"<string>\",\n    \"token\": \"<string>\",\n    \"tokenAmount\": \"<string>\",\n    \"meta\": {\n      \"direction\": \"NOOP\",\n      \"exchangeRate\": \"<integer>\",\n      \"merchant\": {\n        \"name\": \"<string>\",\n        \"mcc\": \"<integer>\",\n        \"country\": \"<string>\",\n        \"city\": \"<string>\",\n        \"id\": \"<string>\"\n      },\n      \"transactionType\": \"WITHDRAWAL\",\n      \"authCode\": \"<string>\"\n    },\n    \"direction\": \"credit\",\n    \"merchantAmount\": \"<string>\",\n    \"merchantCurrency\": \"<string>\",\n    \"exchangeRate\": \"<string>\",\n    \"merchant\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"mcc\": \"<integer>\",\n      \"country\": \"<string>\",\n      \"city\": \"<string>\"\n    },\n    \"fees\": [\n      {\n        \"type\": \"network\",\n        \"tokenAmount\": \"<string>\"\n      },\n      {\n        \"type\": \"service\",\n        \"tokenAmount\": \"<string>\"\n      }\n    ],\n    \"chainTransactions\": [\n      {\n        \"chainId\": \"<string>\",\n        \"createdAt\": \"<dateTime>\"\n      },\n      {\n        \"chainId\": \"<string>\",\n        \"createdAt\": \"<dateTime>\"\n      }\n    ]\n  }\n]"
						},
						{
							"id": "ed936617-0e27-468b-8280-3efeeff2d32c",
							"name": "Invalid request",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cards/:cardId/transactions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cards",
										":cardId",
										"transactions"
									],
									"variable": [
										{
											"key": "cardId",
											"value": "<string>",
											"description": "(Required) ID of the card"
										}
									]
								},
								"description": "Retrieves card's transactions"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "f5c12c74-5c9a-4ae3-8feb-cd8521603fbc",
							"name": "Not authorised",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cards/:cardId/transactions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cards",
										":cardId",
										"transactions"
									],
									"variable": [
										{
											"key": "cardId",
											"value": "<string>",
											"description": "(Required) ID of the card"
										}
									]
								},
								"description": "Retrieves card's transactions"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "4ec50f2d-109e-4712-a8c4-cfa646e7e7dc",
							"name": "Card not found",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cards/:cardId/transactions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cards",
										":cardId",
										"transactions"
									],
									"variable": [
										{
											"key": "cardId",
											"value": "<string>",
											"description": "(Required) ID of the card"
										}
									]
								},
								"description": "Retrieves card's transactions"
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "3ddf10d8-0c68-4cb9-a3b8-15099ee4b24b",
							"name": "Internal error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cards/:cardId/transactions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cards",
										":cardId",
										"transactions"
									],
									"variable": [
										{
											"key": "cardId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Retrieve authorisation details",
					"id": "0bf1fbc6-2e32-48f9-ab2d-0e8fd1d60e62",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "(Required) HTTP message signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/authorisations/:authorisationId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"authorisations",
								":authorisationId"
							],
							"variable": [
								{
									"key": "authorisationId",
									"value": "<authorisation-id>",
									"description": "(Required) ID of the authorisation"
								}
							]
						},
						"description": "Retrieves authorisation's details"
					},
					"response": [
						{
							"id": "567c4fd2-e140-4eab-89e2-4ad636ced9d1",
							"name": "Successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/authorisations/:authorisationId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorisations",
										":authorisationId"
									],
									"variable": [
										{
											"key": "authorisationId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "html",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"urn:uuid:a612862f-5bd9-f9aa-8cca-1ee958b266ba\",\n  \"accountId\": \"3bc109e6-8e9a-8157-077f-a1e017f3e201\",\n  \"status\": \"released\",\n  \"amount\": \"consequat fugiat deserunt\",\n  \"currency\": \"<string>\",\n  \"merchantAmount\": \"labore Excepteur nulla\",\n  \"merchantCurrency\": \"<string>\",\n  \"exchangeRate\": \"ipsum qui aute do\",\n  \"merchant\": {\n    \"id\": \"dolor adipisicing\",\n    \"name\": \"dolore esse sed consectetur cupidatat\",\n    \"mcc\": 12738263,\n    \"country\": \"elit voluptate ullamco sint\",\n    \"city\": \"in aliquip esse dolore nisi\"\n  },\n  \"createdAt\": \"1982-09-19T22:22:35.732Z\",\n  \"updatedAt\": \"2020-04-14T17:52:11.235Z\",\n  \"cardId\": \"urn:uuid:3e4c5d3b-509b-2104-1a49-24bc7ea8f1a8\"\n}"
						},
						{
							"id": "ed094231-9058-4f66-9aa0-4daf948587f9",
							"name": "Invalid request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/authorisations/:authorisationId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorisations",
										":authorisationId"
									],
									"variable": [
										{
											"key": "authorisationId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "ae761250-4284-4acd-bda5-943d32c929cb",
							"name": "Not authorised",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/authorisations/:authorisationId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorisations",
										":authorisationId"
									],
									"variable": [
										{
											"key": "authorisationId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "49346593-f9be-424d-a529-27d5f54bfd37",
							"name": "Authorisation not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/authorisations/:authorisationId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorisations",
										":authorisationId"
									],
									"variable": [
										{
											"key": "authorisationId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "e7674e8d-e23f-474c-9097-b09cea142302",
							"name": "Internal error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/authorisations/:authorisationId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorisations",
										":authorisationId"
									],
									"variable": [
										{
											"key": "authorisationId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						}
					]
				}
			],
			"id": "57a73ad4-6949-46c7-8649-f559bb28418c"
		},
		{
			"name": "webhooks",
			"item": [
				{
					"name": "Retrieve all active webhooks",
					"id": "13fabd07-2656-4c1b-9da3-e40598aab768",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "(Required) HTTP message signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/webhooks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"webhooks"
							]
						},
						"description": "Retrieves all active webhooks"
					},
					"response": [
						{
							"id": "e90308ac-91a1-43cc-af59-fce74e49158f",
							"name": "Successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "html",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"0035c6b1-2d9a-a173-5f40-bb43cc7c1b11\",\n    \"callbackUrl\": \"<uri>\",\n    \"types\": [\n      \"card.updated\",\n      \"account.updated\"\n    ],\n    \"createdAt\": \"1946-06-27T21:33:35.570Z\",\n    \"updatedAt\": \"1998-06-23T18:04:25.880Z\"\n  },\n  {\n    \"id\": \"b78cf6f4-f2a3-cec0-3298-39326e207ab1\",\n    \"callbackUrl\": \"<uri>\",\n    \"types\": [\n      \"transaction.updated\",\n      \"account.updated\"\n    ],\n    \"createdAt\": \"1980-02-19T22:57:18.409Z\",\n    \"updatedAt\": \"1997-09-27T23:29:02.103Z\"\n  }\n]"
						},
						{
							"id": "d334bb98-67f3-4507-91f4-6c5313ba320c",
							"name": "Invalid request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "49e12a1f-7829-4f8a-a7af-6611a227eedb",
							"name": "Not authorised",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "11e5f669-f886-4e2f-89d5-2ceb9f4c4ae7",
							"name": "Internal error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Retrieve webhook subscription information",
					"id": "f65c497a-9767-47b5-a588-01965d80e740",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "(Required) HTTP message signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/webhooks/:webhookId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"webhooks",
								":webhookId"
							],
							"variable": [
								{
									"key": "webhookId",
									"value": "<webhook-id>",
									"description": "(Required) ID for a webhook to be retrieved"
								}
							]
						},
						"description": "Retrieves webhook subscription information"
					},
					"response": [
						{
							"id": "9a595ce1-7dda-4c24-8784-5712b8879a08",
							"name": "Successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/:webhookId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										":webhookId"
									],
									"variable": [
										{
											"key": "webhookId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "html",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"urn:uuid:5fee6244-408b-246c-f2d6-56717b8386fe\",\n  \"callbackUrl\": \"<uri>\",\n  \"types\": [\n    \"authorisation.updated\",\n    \"card.updated\"\n  ],\n  \"createdAt\": \"1980-02-19T12:53:45.389Z\",\n  \"updatedAt\": \"1994-12-28T16:45:05.168Z\"\n}"
						},
						{
							"id": "bd4f3b61-c48b-4bd4-8fd5-e012c160bfbd",
							"name": "Invalid request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/:webhookId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										":webhookId"
									],
									"variable": [
										{
											"key": "webhookId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "814a89e5-fd93-4a3e-90ed-225cf24fdc30",
							"name": "Not authorised",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/:webhookId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										":webhookId"
									],
									"variable": [
										{
											"key": "webhookId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "9c512358-f90c-40c8-b8d0-8cb190cb5fd1",
							"name": "Webhook not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/:webhookId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										":webhookId"
									],
									"variable": [
										{
											"key": "webhookId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "c61e953b-966a-4c1a-8278-0d58f7f76ef7",
							"name": "Internal error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/:webhookId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										":webhookId"
									],
									"variable": [
										{
											"key": "webhookId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Create new or update an existing webhook",
					"id": "96e5fc68-2371-43f3-bfe0-0b10a2176308",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"description": "(Required) Content digest",
								"key": "Content-Digest",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) Idempotency key (free format)",
								"key": "Idempotency-Key",
								"value": "{{$randomUUID}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"callbackUrl\": \"<uri>\",\n  \"types\": [\n    \"customer.updated\",\n    \"account.updated\",\n    \"card.updated\",\n    \"authorisation.updated\",\n    \"transaction.updated\"\n  ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/webhooks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"webhooks"
							]
						},
						"description": "Creates new webhook subscription or updates an existing one"
					},
					"response": [
						{
							"id": "74866b9b-8ec1-4882-aee1-e11a9209f6bb",
							"name": "Successful operation",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<string>\",\n  \"callbackUrl\": \"<string>\",\n  \"scopes\": [\n    \"ACCOUNT\",\n    \"CARD\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									]
								},
								"description": "Creates new webhook subscription or updates an existing one"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "html",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"callbackUrl\": \"<uri>\",\n  \"scopes\": [\n    \"transaction\",\n    \"card\"\n  ],\n  \"createdAt\": \"<dateTime>\",\n  \"types\": [\n    \"card.updated\",\n    \"card.updated\"\n  ],\n  \"updatedAt\": \"<dateTime>\"\n}"
						},
						{
							"id": "103714d7-3d85-4d77-8962-21e6e1e73a38",
							"name": "Invalid request",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<string>\",\n  \"callbackUrl\": \"<string>\",\n  \"scopes\": [\n    \"ACCOUNT\",\n    \"CARD\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									]
								},
								"description": "Creates new webhook subscription or updates an existing one"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "0fe7f8c9-c92d-40a0-843a-10efc7f11008",
							"name": "Not authorised",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<string>\",\n  \"callbackUrl\": \"<string>\",\n  \"scopes\": [\n    \"ACCOUNT\",\n    \"CARD\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									]
								},
								"description": "Creates new webhook subscription or updates an existing one"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "83167f60-499c-4d05-b91a-003b8ad77664",
							"name": "Internal error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<uuid>\",\n  \"callbackUrl\": \"<string>\",\n  \"scopes\": [\n    \"customer\",\n    \"authorisation\"\n  ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Remove webhook subscription",
					"id": "7333a88e-ceac-4d2b-ac47-7968eee5d0c1",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) Idempotency key (free format)",
								"key": "Idempotency-Key",
								"value": "{{$randomUUID}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/webhooks/:webhookId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"webhooks",
								":webhookId"
							],
							"variable": [
								{
									"key": "webhookId",
									"value": "<webhook-id>",
									"description": "(Required) ID for a webhook to be removed"
								}
							]
						},
						"description": "Removes webhook subscription"
					},
					"response": [
						{
							"id": "c264bd41-8cde-4e89-b417-312f7002121f",
							"name": "Successful operation",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/:webhookId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										":webhookId"
									],
									"variable": [
										{
											"key": "webhookId",
											"value": "<string>",
											"description": "(Required) ID for a webhook to be removed"
										}
									]
								},
								"description": "Removes webhook subscription"
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "73d9c6d9-8015-4e4c-ac6a-efbd5e0420ff",
							"name": "Invalid request",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/:webhookId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										":webhookId"
									],
									"variable": [
										{
											"key": "webhookId",
											"value": "<string>",
											"description": "(Required) ID for a webhook to be removed"
										}
									]
								},
								"description": "Removes webhook subscription"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "555e022b-7025-4787-bfce-a1450dceb18e",
							"name": "Not authorised",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/:webhookId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										":webhookId"
									],
									"variable": [
										{
											"key": "webhookId",
											"value": "<string>",
											"description": "(Required) ID for a webhook to be removed"
										}
									]
								},
								"description": "Removes webhook subscription"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "980327d7-b823-4a02-bd4c-cef33b6d57b9",
							"name": "Account not found",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/:webhookId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										":webhookId"
									],
									"variable": [
										{
											"key": "webhookId",
											"value": "<string>",
											"description": "(Required) ID for a webhook to be removed"
										}
									]
								},
								"description": "Removes webhook subscription"
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "7e0d1f86-84ef-4d10-9fe5-c9a5f10afe3d",
							"name": "Internal error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/:webhookId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										":webhookId"
									],
									"variable": [
										{
											"key": "webhookId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Retrieve webhook verification key",
					"id": "03f210be-1acd-4d0c-bb54-d08adb5494da",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "(Required) HTTP message signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/webhooks/verification-key",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"webhooks",
								"verification-key"
							]
						},
						"description": "Retrieves webhook verification key"
					},
					"response": [
						{
							"id": "41f205ca-8c74-48a0-a182-41b92eaa0c46",
							"name": "Successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/verification-key",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"verification-key"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "html",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"keyId\": \"ff758253-3f00-8cda-82b7-243ed3d9d88d\",\n  \"key\": \"<string>\"\n}"
						},
						{
							"id": "d9a63ee4-338b-48cd-8d6f-c44033ea5d28",
							"name": "Invalid request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/verification-key",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"verification-key"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "af8526e1-0b75-4079-b0b8-73dd4921cbca",
							"name": "Not authorised",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/verification-key",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"verification-key"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "797b06e4-a5fd-4d89-9a57-391732a7c630",
							"name": "Internal error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/verification-key",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										"verification-key"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						}
					]
				}
			],
			"id": "de814e15-af56-4b47-8b9c-4f84b6abd719"
		},
		{
			"name": "simulator",
			"item": [
				{
					"name": "Verify customer",
					"id": "9a395318-12bc-4fa6-ac5e-e24a0819cde8",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PATCH",
						"header": [
							{
								"description": "(Required) HTTP message signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "(Required) Idempotency key (UUID)",
								"key": "Idempotency-Key",
								"value": "{{$randomUUID}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/simulator/customers/:customerId/verify",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"simulator",
								"customers",
								":customerId",
								"verify"
							],
							"variable": [
								{
									"key": "customerId",
									"value": "<customer-id>",
									"description": "(Required) ID of customer to be verified"
								}
							]
						},
						"description": "Simulates customer verification success"
					},
					"response": [
						{
							"id": "53e96b62-2955-4cb2-b7a7-fade125a0524",
							"name": "Successful operation",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/simulator/customers/:customerId/verify",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"customers",
										":customerId",
										"verify"
									],
									"variable": [
										{
											"key": "customerId"
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "c72c6415-9034-4cb1-8d09-3b4a51142d84",
							"name": "Invalid request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/simulator/customers/:customerId/verify",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"customers",
										":customerId",
										"verify"
									],
									"variable": [
										{
											"key": "customerId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "35a24d94-1784-45f0-8cf3-85cecf661e64",
							"name": "Not authorised",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/simulator/customers/:customerId/verify",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"customers",
										":customerId",
										"verify"
									],
									"variable": [
										{
											"key": "customerId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "f4f8da9e-d25d-44d3-a71f-db28b128e046",
							"name": "Customer not found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/simulator/customers/:customerId/verify",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"customers",
										":customerId",
										"verify"
									],
									"variable": [
										{
											"key": "customerId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "91b5ce4c-8418-4b78-8582-a6427ecb8dd6",
							"name": "Internal error",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/simulator/customers/:customerId/verify",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"customers",
										":customerId",
										"verify"
									],
									"variable": [
										{
											"key": "customerId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Reject customer",
					"id": "3a031220-3d77-4946-870a-ff6a68547f4d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PATCH",
						"header": [
							{
								"description": "(Required) HTTP message signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "(Required) Idempotency key (UUID)",
								"key": "Idempotency-Key",
								"value": "{{$randomUUID}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/simulator/customers/:customerId/reject",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"simulator",
								"customers",
								":customerId",
								"reject"
							],
							"variable": [
								{
									"key": "customerId",
									"value": "<customer-id>",
									"description": "(Required) ID of customer to be rejected"
								}
							]
						},
						"description": "Simulates customer verification rejection"
					},
					"response": [
						{
							"id": "58fab439-1698-4fa9-9c50-c96b24a0b9a7",
							"name": "Successful operation",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/simulator/customers/:customerId/reject",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"customers",
										":customerId",
										"reject"
									],
									"variable": [
										{
											"key": "customerId"
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "7343e5da-c970-4d1a-9169-353ca88312ba",
							"name": "Invalid request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/simulator/customers/:customerId/reject",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"customers",
										":customerId",
										"reject"
									],
									"variable": [
										{
											"key": "customerId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "f8a41439-6eca-41da-8e4a-4242ace2f321",
							"name": "Not authorised",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/simulator/customers/:customerId/reject",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"customers",
										":customerId",
										"reject"
									],
									"variable": [
										{
											"key": "customerId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "ea2b6a0a-9912-4119-bcc2-06b2d2f86de0",
							"name": "Customer not found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/simulator/customers/:customerId/reject",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"customers",
										":customerId",
										"reject"
									],
									"variable": [
										{
											"key": "customerId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "a5e0df86-ae62-457e-8792-4532311fa10a",
							"name": "Internal error",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/simulator/customers/:customerId/reject",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"customers",
										":customerId",
										"reject"
									],
									"variable": [
										{
											"key": "customerId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Issue card",
					"id": "f0e454f1-4474-46ea-871c-a41fdd64929c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PATCH",
						"header": [
							{
								"description": "(Required) HTTP message signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "(Required) Idempotency key (UUID)",
								"key": "Idempotency-Key",
								"value": "{{$randomUUID}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/simulator/cards/:cardId/issue",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"simulator",
								"cards",
								":cardId",
								"issue"
							],
							"variable": [
								{
									"key": "cardId",
									"value": "<card-id>",
									"description": "(Required) ID of card to be issued"
								}
							]
						},
						"description": "Simulates card issuing success"
					},
					"response": [
						{
							"id": "aa3d6b8d-b8d2-478f-934e-2ddf95d79f28",
							"name": "Successful operation",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/simulator/cards/:cardId/issue",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"cards",
										":cardId",
										"issue"
									],
									"variable": [
										{
											"key": "cardId"
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "8a892641-5168-44cb-87c3-e42619be1cfc",
							"name": "Invalid request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/simulator/cards/:cardId/issue",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"cards",
										":cardId",
										"issue"
									],
									"variable": [
										{
											"key": "cardId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "b070403a-2b15-4038-8767-1b84df0bdc2e",
							"name": "Not authorised",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/simulator/cards/:cardId/issue",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"cards",
										":cardId",
										"issue"
									],
									"variable": [
										{
											"key": "cardId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "06e316cf-f1b6-47bb-a447-031c28e4d4ba",
							"name": "Card not found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/simulator/cards/:cardId/issue",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"cards",
										":cardId",
										"issue"
									],
									"variable": [
										{
											"key": "cardId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "456ed4ad-19b4-4460-b47b-ed081f06fdef",
							"name": "Internal error",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/simulator/cards/:cardId/issue",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"cards",
										":cardId",
										"issue"
									],
									"variable": [
										{
											"key": "cardId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Fail card issuance",
					"id": "8849d10d-72e6-41ae-be3e-fcc6b55423e7",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PATCH",
						"header": [
							{
								"description": "(Required) HTTP message signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "(Required) Idempotency key (UUID)",
								"key": "Idempotency-Key",
								"value": "{{$randomUUID}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/simulator/cards/:cardId/fail",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"simulator",
								"cards",
								":cardId",
								"fail"
							],
							"variable": [
								{
									"key": "cardId",
									"value": "<customer-id>",
									"description": "(Required) ID of card to be failed"
								}
							]
						},
						"description": "Simulates card issuing failure"
					},
					"response": [
						{
							"id": "c258cc20-d895-442b-9259-0d1cb92e65c3",
							"name": "Successful operation",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/simulator/cards/:cardId/fail",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"cards",
										":cardId",
										"fail"
									],
									"variable": [
										{
											"key": "cardId"
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "f048dc90-aca7-4794-ae67-e6cf0e55ff35",
							"name": "Invalid request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/simulator/cards/:cardId/fail",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"cards",
										":cardId",
										"fail"
									],
									"variable": [
										{
											"key": "cardId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "9410871a-9c00-4724-8942-1b5b01d47ce9",
							"name": "Not authorised",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/simulator/cards/:cardId/fail",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"cards",
										":cardId",
										"fail"
									],
									"variable": [
										{
											"key": "cardId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "ef36a15a-2dbe-4b14-b1ec-46dada737ca9",
							"name": "Card not found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/simulator/cards/:cardId/fail",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"cards",
										":cardId",
										"fail"
									],
									"variable": [
										{
											"key": "cardId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "0a1fb6ed-a89e-46f4-8bed-6a1a57682c1e",
							"name": "Internal error",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/simulator/cards/:cardId/fail",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"cards",
										":cardId",
										"fail"
									],
									"variable": [
										{
											"key": "cardId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Initiate card authorisation",
					"id": "75b01a70-5407-44b8-8f6c-bcc249134a49",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "(Required) Content digest",
								"key": "Content-Digest",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP message signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "(Required) Idempotency key (UUID)",
								"key": "Idempotency-Key",
								"value": "{{$randomUUID}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"amount\": \"10.0\",\n    \"currency\": \"EUR\",\n    \"capture\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/simulator/cards/:cardId/authorisation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"simulator",
								"cards",
								":cardId",
								"authorisation"
							],
							"variable": [
								{
									"key": "cardId",
									"value": "<card-id>",
									"description": "(Required) ID of card"
								}
							]
						},
						"description": "Simulates card authorisation"
					},
					"response": [
						{
							"id": "54b0c83d-9209-4916-a867-7964261ba0e4",
							"name": "Invalid request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"esse dolor\",\n  \"currency\": \"<string>\",\n  \"capture\": true\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/simulator/cards/:cardId/authorisation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"cards",
										":cardId",
										"authorisation"
									],
									"variable": [
										{
											"key": "cardId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "df17791b-fba7-42e0-9e3b-5ec2429a52c9",
							"name": "Not authorised",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"esse dolor\",\n  \"currency\": \"<string>\",\n  \"capture\": true\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/simulator/cards/:cardId/authorisation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"cards",
										":cardId",
										"authorisation"
									],
									"variable": [
										{
											"key": "cardId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "7d411d2f-a9e0-4e4f-b0de-9256778a5f57",
							"name": "Card not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"esse dolor\",\n  \"currency\": \"<string>\",\n  \"capture\": true\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/simulator/cards/:cardId/authorisation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"cards",
										":cardId",
										"authorisation"
									],
									"variable": [
										{
											"key": "cardId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "54944f2d-6654-4d5d-b734-5056299731c7",
							"name": "Internal error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"esse dolor\",\n  \"currency\": \"<string>\",\n  \"capture\": true\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/simulator/cards/:cardId/authorisation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"cards",
										":cardId",
										"authorisation"
									],
									"variable": [
										{
											"key": "cardId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "7e137dd2-bfdd-4b5b-b1a3-2c2227963f74",
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"10.0\",\n  \"currency\": \"EUR\",\n  \"capture\": false\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/simulator/cards/:cardId/authorisation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"cards",
										":cardId",
										"authorisation"
									],
									"variable": [
										{
											"key": "cardId"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "html",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"accountId\": \"<uuid>\",\n  \"status\": \"released\",\n  \"amount\": \"<string>\",\n  \"currency\": \"<string>\",\n  \"merchantAmount\": \"<string>\",\n  \"merchantCurrency\": \"<string>\",\n  \"exchangeRate\": \"<string>\",\n  \"merchant\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"mcc\": \"<integer>\",\n    \"country\": \"<string>\",\n    \"city\": \"<string>\"\n  },\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"cardId\": \"<uuid>\"\n}"
						}
					]
				},
				{
					"name": "Capture card authorisation",
					"id": "5f512f5b-81f0-47eb-a601-1494f351f21c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PATCH",
						"header": [
							{
								"description": "(Required) HTTP message signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "(Required) Idempotency key (UUID)",
								"key": "Idempotency-Key",
								"value": "{{$randomUUID}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/simulator/authorisations/:authorisationId/capture",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"simulator",
								"authorisations",
								":authorisationId",
								"capture"
							],
							"variable": [
								{
									"key": "authorisationId",
									"value": "<authorisation-id>",
									"description": "(Required) ID of authorisation to be captured"
								}
							]
						},
						"description": "Simulates card authorisation capture"
					},
					"response": [
						{
							"id": "ab65cd70-6c40-4769-a2b4-e537138619c5",
							"name": "Successful operation",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/simulator/authorisations/:authorisationId/capture",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"authorisations",
										":authorisationId",
										"capture"
									],
									"variable": [
										{
											"key": "authorisationId"
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "54716d81-eb7b-4b2d-b2fd-6f6fca0f800b",
							"name": "Invalid request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/simulator/authorisations/:authorisationId/capture",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"authorisations",
										":authorisationId",
										"capture"
									],
									"variable": [
										{
											"key": "authorisationId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "89d8550e-1bee-44e1-838b-6b6794a8174c",
							"name": "Not authorised",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/simulator/authorisations/:authorisationId/capture",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"authorisations",
										":authorisationId",
										"capture"
									],
									"variable": [
										{
											"key": "authorisationId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "d4e399e0-ab91-489f-b286-3f913528a9d6",
							"name": "Authorisation not found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/simulator/authorisations/:authorisationId/capture",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"authorisations",
										":authorisationId",
										"capture"
									],
									"variable": [
										{
											"key": "authorisationId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "6e1e03d8-7afc-4c21-b77b-276addd0e71c",
							"name": "Internal error",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/simulator/authorisations/:authorisationId/capture",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"authorisations",
										":authorisationId",
										"capture"
									],
									"variable": [
										{
											"key": "authorisationId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Release card authorisation",
					"id": "0b8c11d3-13d9-46da-8f90-1e79b97700b7",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PATCH",
						"header": [
							{
								"description": "(Required) HTTP message signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "(Required) Idempotency key (UUID)",
								"key": "Idempotency-Key",
								"value": "{{$randomUUID}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/simulator/authorisations/:authorisationId/release",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"simulator",
								"authorisations",
								":authorisationId",
								"release"
							],
							"variable": [
								{
									"key": "authorisationId",
									"value": "<authorisation-id>",
									"description": "(Required) ID of authorisation to be released"
								}
							]
						},
						"description": "Simulates card authorisation release"
					},
					"response": [
						{
							"id": "0a195061-8532-4367-badf-ae816d749844",
							"name": "Successful operation",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/simulator/authorisations/:authorisationId/release",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"authorisations",
										":authorisationId",
										"release"
									],
									"variable": [
										{
											"key": "authorisationId"
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "cea28cb8-9afe-4871-b96a-e63fe60a2f88",
							"name": "Invalid request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/simulator/authorisations/:authorisationId/release",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"authorisations",
										":authorisationId",
										"release"
									],
									"variable": [
										{
											"key": "authorisationId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "e79ba03d-7c16-43a0-8160-f304cd1afa10",
							"name": "Not authorised",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/simulator/authorisations/:authorisationId/release",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"authorisations",
										":authorisationId",
										"release"
									],
									"variable": [
										{
											"key": "authorisationId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "6ca5b18c-09ec-43c7-bbb1-d60870e56fd3",
							"name": "Authorisation not found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/simulator/authorisations/:authorisationId/release",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"authorisations",
										":authorisationId",
										"release"
									],
									"variable": [
										{
											"key": "authorisationId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						},
						{
							"id": "23becbc4-6e42-4c44-8349-4b0ddced1222",
							"name": "Internal error",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/simulator/authorisations/:authorisationId/release",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"authorisations",
										":authorisationId",
										"release"
									],
									"variable": [
										{
											"key": "authorisationId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"_postman_previewtype": "html",
							"header": [],
							"cookie": []
						}
					]
				}
			],
			"id": "87eaa549-fc8a-4e09-8fc4-45a80dbed6d9"
		},
		{
			"name": "Retrieve supported blockchains",
			"id": "0bc2d6e7-e33b-40b3-a09a-88d92e77d222",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{bearerToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) HTTP message signature",
						"key": "Signature",
						"value": "<string>"
					},
					{
						"description": "(Required) HTTP message signature input",
						"key": "Signature-Input",
						"value": "<string>"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/chains",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"chains"
					]
				},
				"description": "Retrieves supported blockchains"
			},
			"response": [
				{
					"id": "7bb4999c-60ea-41ac-aede-26367f3159d9",
					"name": "Successful operation",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) HTTP message signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"description": "Added as a part of security scheme: bearer",
								"key": "Authorization",
								"value": "Bearer <token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/chains",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"chains"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"_postman_previewtype": "html",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  }\n]"
				},
				{
					"id": "2a57d78c-cd7f-4a3d-afbf-02935a935005",
					"name": "Invalid request",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) HTTP message signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "Added as a part of security scheme: bearer",
								"key": "Authorization",
								"value": "Bearer <token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/chains",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"chains"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"_postman_previewtype": "html",
					"header": [],
					"cookie": []
				},
				{
					"id": "6a0d413e-3185-49da-8986-4beaa3f7f032",
					"name": "Not authorised",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) HTTP message signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "Added as a part of security scheme: bearer",
								"key": "Authorization",
								"value": "Bearer <token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/chains",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"chains"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"_postman_previewtype": "html",
					"header": [],
					"cookie": []
				},
				{
					"id": "0a54301e-0fa4-49b0-b037-ce11bc8ac408",
					"name": "Internal error",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) HTTP message signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "Added as a part of security scheme: bearer",
								"key": "Authorization",
								"value": "Bearer <token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/chains",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"chains"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "text",
					"_postman_previewtype": "html",
					"header": [],
					"cookie": []
				}
			]
		},
		{
			"name": "Retrieve supported assets",
			"id": "7eff28de-4e9a-440d-a7a2-ec94b53e7ed6",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{bearerToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) HTTP message signature",
						"key": "Signature",
						"value": "<string>"
					},
					{
						"description": "(Required) HTTP message signature input",
						"key": "Signature-Input",
						"value": "<string>"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/assets?chain=<string>",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"assets"
					],
					"query": [
						{
							"description": "Optional filter by blockchain",
							"key": "chain",
							"value": "<string>"
						}
					]
				},
				"description": "Retrieves supported assets"
			},
			"response": [
				{
					"id": "e84db26f-2f74-44fc-b3a3-a468ee9eb5c2",
					"name": "Successful operation",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) HTTP message signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"description": "Added as a part of security scheme: bearer",
								"key": "Authorization",
								"value": "Bearer <token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/assets?chain=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assets"
							],
							"query": [
								{
									"description": "Optional filter by blockchain",
									"key": "chain",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"_postman_previewtype": "html",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n  {\n    \"id\": \"ex sed\",\n    \"blockchain\": \"<string>\",\n    \"name\": \"<string>\",\n    \"symbol\": \"<string>\"\n  },\n  {\n    \"id\": \"consequat sit\",\n    \"blockchain\": \"<string>\",\n    \"name\": \"<string>\",\n    \"symbol\": \"<string>\"\n  }\n]"
				},
				{
					"id": "62bcdf96-6aa0-4704-a77f-943ea87f8fd5",
					"name": "Invalid request",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) HTTP message signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "Added as a part of security scheme: bearer",
								"key": "Authorization",
								"value": "Bearer <token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/assets?chain=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assets"
							],
							"query": [
								{
									"description": "Optional filter by blockchain",
									"key": "chain",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"_postman_previewtype": "html",
					"header": [],
					"cookie": []
				},
				{
					"id": "44ea52c5-4029-4b28-8ded-b7f83754e70c",
					"name": "Not authorised",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) HTTP message signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "Added as a part of security scheme: bearer",
								"key": "Authorization",
								"value": "Bearer <token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/assets?chain=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assets"
							],
							"query": [
								{
									"description": "Optional filter by blockchain",
									"key": "chain",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"_postman_previewtype": "html",
					"header": [],
					"cookie": []
				},
				{
					"id": "4f3850f2-8be5-4332-81d0-b6c19d51167a",
					"name": "Internal error",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) HTTP message signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "Added as a part of security scheme: bearer",
								"key": "Authorization",
								"value": "Bearer <token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/assets?chain=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assets"
							],
							"query": [
								{
									"description": "Optional filter by blockchain",
									"key": "chain",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "text",
					"_postman_previewtype": "html",
					"header": [],
					"cookie": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{bearerToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "1e256fe3-29d6-4c5e-9bca-865e7b91813f",
				"type": "text/javascript",
				"exec": [
					"const URL = require('url')",
					"var canonicalize = {};",
					"",
					"function updateRequestSignature(httpMessageSignatures) {",
					"    if (!pm.request.headers.has(\"Signature\")) {",
					"        return",
					"    }",
					"",
					"    const keyId = pm.environment.get(\"signatureKeyId\");",
					"    const privateKey = pm.environment.get(\"signaturePrivateKey\");",
					"",
					"    const key = httpMessageSignatures.createSigner(privateKey, 'ecdsa-p384-sha384', keyId);",
					"    const fields = ['@method', '@authority', '@path']",
					"    ",
					"    const url = URL.parse(pm.variables.replaceIn(pm.request.url.toString()));",
					"    const method = pm.request.method;",
					"",
					"    const headers = {};",
					"",
					"    if (pm.request.body.raw) {",
					"        var hash = CryptoJS.SHA512(pm.variables.replaceIn(pm.request.body).raw);",
					"        var digest = hash.toString(CryptoJS.enc.Base64);",
					"        headers[\"content-digest\"] = `sha-512=:${digest}:`;",
					"        fields.push('content-digest');",
					"    }",
					"",
					"    // browser version of crypto doesn't support ieee-p1363 encoding of ECDSA signature",
					"    // we need to manually unpack DER encoding and assemble the signature back",
					"    const patchSignature = (sig) => {",
					"        // remove leading \"sig=: and trailing :\"",
					"        const [name, original] = sig.split(':')",
					"",
					"        var buffer = Buffer.from(original)",
					"        // decode from base64",
					"        buffer = Buffer.from(buffer.toString(), 'base64')",
					"",
					"        // DER signature format",
					"        // 0x30|totalLength|0x02|rLength|r|0x02|sLength|s",
					"        const rLength = buffer[3]",
					"",
					"        var rBytes = buffer.slice(4, 4 + rLength)",
					"        var sBytes = buffer.slice(4 + rLength + 2)",
					"",
					"        if (rBytes[0] == 0) { rBytes = rBytes.slice(1) }",
					"        if (sBytes[0] == 0) { sBytes = sBytes.slice(1) }",
					"        ",
					"        const signature = Buffer.concat([rBytes, sBytes])",
					"        const encoded = signature.toString('base64')",
					"",
					"        return `${name}:${encoded}:`",
					"    }",
					"",
					"    const updateSignature = (async () => {",
					"        try {",
					"            const signedRequest = await httpMessageSignatures.httpbis.signMessage({",
					"                key,",
					"                fields",
					"            }, {",
					"                method,",
					"                url,",
					"                headers,",
					"            });",
					"            pm.request.headers.upsert({key: \"Signature\", value: patchSignature(signedRequest.headers[\"Signature\"])});",
					"            pm.request.headers.upsert({key: \"Signature-Input\", value: signedRequest.headers[\"Signature-Input\"]});",
					"            pm.request.headers.upsert({key: \"Content-Digest\", value: headers[\"content-digest\"]});",
					"        } catch (error) {",
					"            console.error(error);",
					"        }",
					"    });",
					"",
					"    updateSignature();",
					"}",
					"",
					"pm.sendRequest('https://github.com/OffBlocks/node-http-message-signatures/releases/download/v1.2.0/http-message-signatures.min.js', (err, res) => {",
					"    if (err) {",
					"        console.log(err)",
					"    } else {",
					"        eval(res.text());",
					"        pm.sendRequest('https://cdn.jsdelivr.net/npm/canonicalize@2.0.0/lib/canonicalize.min.js', (err, res) => {",
					"            if (err) {",
					"                console.log(err)",
					"            } else {",
					"                var module = {};",
					"                eval(res.text());",
					"                canonicalize = module.exports",
					"                updateRequestSignature(httpMessageSignatures);",
					"            }",
					"        })",
					"    }",
					"});",
					"",
					"pm.sendRequest({",
					"    url: pm.environment.get('baseUrl') + '/auth/token',",
					"    method: 'POST',",
					"    header: {",
					"        'content-type': 'application/json'",
					"    },",
					"    body: {",
					"        mode: 'raw',",
					"        raw: JSON.stringify({",
					"            apiKey: pm.environment.get('apiKey'),",
					"            apiSecret: pm.environment.get('apiSecret')",
					"        })",
					"    }",
					"}, (err, res) => pm.environment.set(\"bearerToken\", res.json().token));"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "77d249d5-0e28-4349-8b7c-74d13941a709",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "264bc4c8-7457-49c7-9089-42a7d4722fb0",
			"key": "baseUrl",
			"value": "https://api.offblocks.xyz/v1",
			"type": "string"
		}
	]
}