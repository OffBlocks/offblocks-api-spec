{
	"info": {
		"_postman_id": "3222055a-103f-4ee7-9d2f-f2d617a9f61d",
		"name": "OffBlocks API 1.0",
		"description": "OffBlocks API provides endpoints and capabilities covering user (customer) onboarding, account and card management, transaction lifecycle as well as live feed for all entities via webhooks.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "31088643-3222055a-103f-4ee7-9d2f-f2d617a9f61d"
	},
	"item": [
		{
			"name": "auth",
			"item": [
				{
					"name": "Initial Authentication",
					"id": "0a954abf-d3a2-4b74-943c-ca4cdac7b414",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"apiKey\": \"{{apiKey}}\",\n  \"apiSecret\": \"{{apiSecret}}\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"token"
							]
						},
						"description": "Retrieve authentication token using API credentials"
					},
					"response": [
						{
							"id": "381edc5c-80e9-46b6-9ee4-5a9054b0eeea",
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"apiKey\": \"<string>\",\n  \"apiSecret\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.sandbox.offblocks.xyz/v1/auth/token",
									"protocol": "https",
									"host": [
										"api",
										"sandbox",
										"offblocks",
										"xyz"
									],
									"path": [
										"v1",
										"auth",
										"token"
									]
								},
								"description": "Retrieve authentication token using API credentials"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"token\": \"<string>\",\n  \"expiresAt\": \"<integer>\",\n  \"tokenType\": \"<string>\"\n}"
						},
						{
							"id": "c581e3b8-af18-40f0-b214-c0cc17bfa6f3",
							"name": "Invalid request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"apiKey\": \"<string>\",\n  \"apiSecret\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"token"
									]
								},
								"description": "Retrieve authentication token using API credentials"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "0aa18550-9691-4285-8c87-c21c37e1457d",
							"name": "Invalid credentials",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"apiKey\": \"<string>\",\n  \"apiSecret\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"token"
									]
								},
								"description": "Retrieve authentication token using API credentials"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "18fb9647-d6aa-485d-953e-b7fb8aa6686c",
							"name": "Internal error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"apiKey\": \"{{apiKey}}\",\n  \"apiSecret\": \"{{apiSecret}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"token"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Update signing key",
					"id": "7a169602-7226-469e-985c-119b1dfe1e78",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"signingKey\": \"{{signaturePublicKey}}\",\n  \"signingKeyId\": \"{{signatureKeyId}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/signing",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"signing"
							]
						},
						"description": "Update public key used to sign API requests. When you upload your public key, a unique key ID is returned in response. This is different to your public key itself, and is required to sign your requests"
					},
					"response": [
						{
							"id": "9f687f94-d814-4e3e-afa5-01a0f68f4c38",
							"name": "Invalid request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"signingKey\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/v1/auth/signing",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"v1",
										"auth",
										"signing"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "1de86824-c0fe-4fc7-a411-aa50a089e663",
							"name": "Not authorised",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"signingKey\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/signing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"signing"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "2ef6bfab-3c78-48ea-927d-a919efc48e9b",
							"name": "Successful operation",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"signingKey\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/signing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"signing"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "b52cba28-f4cd-4123-ab1c-9d4803a0a40e",
							"name": "Internal error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"signingKey\": \"{{signaturePublicKey}}\",\n  \"signingKeyId\": \"{{signatureKeyId}}\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/auth/signing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"signing"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Delete signing key",
					"id": "8334c027-859e-4655-8b79-dddeec22033c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"signingKeyId\": \"<uuid>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/signing",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"signing"
							]
						},
						"description": "Delete public key used to sign API requests"
					},
					"response": [
						{
							"id": "109f901e-112d-42a4-b75f-5f303fd63532",
							"name": "Successful operation",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"signingKeyId\": \"<uuid>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/v1/auth/signing",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"v1",
										"auth",
										"signing"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "80531afe-e1a8-4334-b206-b8daa79463f1",
							"name": "Invalid request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"signingKeyId\": \"<uuid>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/signing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"signing"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "ca3391f8-c507-4789-93a7-a37746cfcbd2",
							"name": "Not authorised",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"signingKeyId\": \"<uuid>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/signing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"signing"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "817329fd-c1c2-4dbc-a2ba-02ff53c7260d",
							"name": "Internal error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"signingKeyId\": \"<uuid>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/signing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"signing"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Update API credentials",
					"id": "96aa30d8-c200-4931-806e-eac535e99a38",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"apiKey\": \"{{apiKey}}\",\n  \"apiSecret\": \"{{apiSecret}}\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/credentials",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"credentials"
							]
						},
						"description": "Update existing API credentials (API key, API secret or both). This invalidates all issued tokens and active sessions"
					},
					"response": [
						{
							"id": "480e0e53-71b3-4d79-8c6e-dcc9905a8fa5",
							"name": "Successful operation",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"apiKey\": \"<string>\",\n  \"apiSecret\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.sandbox.offblocks.xyz/v1/auth/credentials",
									"protocol": "https",
									"host": [
										"api",
										"sandbox",
										"offblocks",
										"xyz"
									],
									"path": [
										"v1",
										"auth",
										"credentials"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "753fbb04-c7d9-45ce-ac2c-94d390261173",
							"name": "Invalid request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"apiKey\": \"<string>\",\n  \"apiSecret\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/credentials",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"credentials"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "02040ad1-2bad-4558-a7f9-d5c46717ca7f",
							"name": "Not authorised",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"apiKey\": \"<string>\",\n  \"apiSecret\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/credentials",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"credentials"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "a72940f1-fb76-4d05-8635-39536124baea",
							"name": "Internal error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"apiKey\": \"{{apiKey}}\",\n  \"apiSecret\": \"{{apiSecret}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/credentials",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"credentials"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Delete API credentials",
					"id": "1b5e3d75-55aa-4044-97cc-6df559d4f2d0",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"apiKey\": \"{{apiKey}}\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/credentials",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"credentials"
							]
						},
						"description": "Delete existing API credentials. This invalidates all issued tokens and active sessions"
					},
					"response": [
						{
							"id": "99593fbc-2367-45b2-ae9f-fc08e3ec9f1e",
							"name": "Successful operation",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"apiKey\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/v1/auth/credentials",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"v1",
										"auth",
										"credentials"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "1ec74a46-bdf3-407f-be77-40f5ce904007",
							"name": "Invalid request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"apiKey\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/credentials",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"credentials"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "d213bb47-43a2-4d2f-a66f-ca438e0b3c24",
							"name": "Not authorised",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"apiKey\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/credentials",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"credentials"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "794c11aa-a53e-4b9b-b53f-1227294b69df",
							"name": "Internal error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"apiKey\": \"{{apiKey}}\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/credentials",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"credentials"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						}
					]
				}
			],
			"id": "5b5f6c35-4b50-44f3-8eb7-c566256191b5"
		},
		{
			"name": "customers",
			"item": [
				{
					"name": "Retrieve customers",
					"id": "c59d46fb-de01-4c80-8778-c4d8ab1fdae7",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"customers"
							]
						},
						"description": "Retrieves customers' details"
					},
					"response": [
						{
							"id": "57b361f1-f920-4183-bc1c-920bd8328ceb",
							"name": "Successful operation",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.sandbox.offblocks.xyz/v1/customers",
									"protocol": "https",
									"host": [
										"api",
										"sandbox",
										"offblocks",
										"xyz"
									],
									"path": [
										"v1",
										"customers"
									]
								},
								"description": "Retrieves customers' details"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"status\": \"inactive\",\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"externalId\": \"<string>\",\n    \"chainId\": \"<string>\"\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"status\": \"active\",\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"externalId\": \"<string>\",\n    \"chainId\": \"<string>\"\n  }\n]"
						},
						{
							"id": "13f24b33-6af6-40ec-b9c6-42df782d2017",
							"name": "Invalid request",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers"
									]
								},
								"description": "Retrieves customers' details"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "df2f6f11-149a-4fb3-a2d4-cb2a3a397bef",
							"name": "Not authorised",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers"
									]
								},
								"description": "Retrieves customers' details"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "089227bc-95f6-4791-863a-f1224253cebd",
							"name": "Internal error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Retrieve customer",
					"id": "59e910ad-7695-413d-b80c-a721cb6e7fe5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/customers/:customerId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"customers",
								":customerId"
							],
							"variable": [
								{
									"key": "customerId",
									"value": "56463bb2-a4c2-537e-bfdb-a1705b9eee17",
									"description": "(Required) ID of customer to be retrieved"
								}
							]
						},
						"description": "Retrieves customer's details"
					},
					"response": [
						{
							"id": "a3f534ce-8e3e-4785-af01-8d51b0f61b78",
							"name": "Successful operation",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.sandbox.offblocks.xyz/v1/customers/:customerId",
									"protocol": "https",
									"host": [
										"api",
										"sandbox",
										"offblocks",
										"xyz"
									],
									"path": [
										"v1",
										"customers",
										":customerId"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "<string>",
											"description": "(Required) ID of customer to be retrieved"
										}
									]
								},
								"description": "Retrieves customer's details"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"status\": \"verifying\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"externalId\": \"<string>\",\n  \"chainId\": \"<string>\"\n}"
						},
						{
							"id": "fffc3baf-51de-4bbe-9b1d-fd117751917b",
							"name": "Invalid request",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "<string>",
											"description": "(Required) ID of customer to be retrieved"
										}
									]
								},
								"description": "Retrieves customer's details"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "85657ba4-57a4-4e4a-bf1d-9519dd547b03",
							"name": "Not authorised",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "<string>",
											"description": "(Required) ID of customer to be retrieved"
										}
									]
								},
								"description": "Retrieves customer's details"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "93fd02d5-f759-4eaa-b850-f3f952eb109f",
							"name": "Customer not found",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "<string>",
											"description": "(Required) ID of customer to be retrieved"
										}
									]
								},
								"description": "Retrieves customer's details"
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "b11e7b11-d5e4-4df0-a1d0-8a04f57878c3",
							"name": "Internal error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId"
									],
									"variable": [
										{
											"key": "customerId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Create new customer",
					"id": "8ca1b91a-e16d-4745-b9d3-2ae81903e151",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) Idempotency key (free format)",
								"key": "Idempotency-Key",
								"value": "{{$randomUUID}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"chainId\": \"eip155:280:0x43158f45b5EbD7b1179130130DF00393928C2691\",\n  \"externalId\": \"a56e4492-dacf-4782-a671-2c2a6ae891ae\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"customers"
							]
						},
						"description": "Creates new customer and generates a KYC verification URL"
					},
					"response": [
						{
							"id": "c8860ace-d385-4419-85f7-8ec138146937",
							"name": "Successful operation",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.sandbox.offblocks.xyz/v1/customers",
									"protocol": "https",
									"host": [
										"api",
										"sandbox",
										"offblocks",
										"xyz"
									],
									"path": [
										"v1",
										"customers"
									]
								},
								"description": "Creates new customer and generates a KYC verification URL"
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"status\": \"inactive\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"challenge\": \"<string>\",\n  \"chainId\": \"<string>\",\n  \"externalId\": \"<string>\"\n}"
						},
						{
							"id": "281d1026-f410-4572-a6c3-442318547708",
							"name": "Invalid request",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/customers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers"
									]
								},
								"description": "Creates new customer and generates a KYC verification URL"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "ac34ba52-822d-4eb2-b0b4-4808f38ef6ba",
							"name": "Not authorised",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/customers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers"
									]
								},
								"description": "Creates new customer and generates a KYC verification URL"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "40dd22d0-c4e7-4564-9269-49e56b0a45bc",
							"name": "Customer already exists",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"chainId\": \"eip155:280:0x078A9c24556eF8198Ae8264253E78E8B02ed0bC1\",\n  \"externalId\": \"6e021e3f-57ae-4e76-8c07-245bbb21c1bb\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/customers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "a38be9ad-da52-4c07-b164-b34a98515dec",
							"name": "Internal error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"chainId\": \"eip155:280:0x078A9c24556eF8198Ae8264253E78E8B02ed0bC1\",\n  \"externalId\": \"6e021e3f-57ae-4e76-8c07-245bbb21c1bb\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/customers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Retrieve customer challenge",
					"id": "9135af0e-197d-4563-be25-88bed6834a82",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "(Required) HTTP message signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/customers/:customerId/challenge",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"customers",
								":customerId",
								"challenge"
							],
							"variable": [
								{
									"key": "customerId",
									"value": "d7dcb9a5-f05b-526c-957c-603ffb7024ff",
									"description": "(Required) ID of customer to be challenged"
								}
							]
						},
						"description": "Retrieves challenge to verify customer's ownership of their blockchain account. This operation invalidates any previously issued challenges for the customer"
					},
					"response": [
						{
							"id": "09ff063e-fd01-4b89-9b5a-e49a465adf0e",
							"name": "Successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId/challenge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId",
										"challenge"
									],
									"variable": [
										{
											"key": "customerId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"challenge\": \"<string>\"\n}"
						},
						{
							"id": "cf1c144c-1bfa-4743-a75e-82f6a2e3870f",
							"name": "Invalid request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId/challenge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId",
										"challenge"
									],
									"variable": [
										{
											"key": "customerId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "cc481d45-63f7-45c1-a0b4-fe4c0bb69e94",
							"name": "Not authorised",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId/challenge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId",
										"challenge"
									],
									"variable": [
										{
											"key": "customerId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "0fa2f5cf-b0dd-4a43-82de-15ea2acf9208",
							"name": "Customer not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId/challenge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId",
										"challenge"
									],
									"variable": [
										{
											"key": "customerId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "a8686b53-b89a-414c-9bad-715f0debdf41",
							"name": "Internal error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId/challenge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId",
										"challenge"
									],
									"variable": [
										{
											"key": "customerId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Sign previously issued customer challenge",
					"id": "3830e20a-1074-4f3f-bc1e-a0b3748798c2",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"description": "(Required) HTTP message signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "(Required) Idempotency key (UUID)",
								"key": "Idempotency-Key",
								"value": "{{$randomUUID}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ownerId\": \"eip155:280:0x43158f45b5EbD7b1179130131DF00393928C2691\",\n  \"challenge\": \"YXBpLnNhbmRib3gub2ZmYmxvY2tzLnh5eiB3YW50cyB5b3UgdG8gc2lnbiBpbiB3aXRoIHlvdXIgRXRoZXJldW0gYWNjb3VudDoKMHg0MzE1OGY0NWI1RWJEN2IxMTc5MTMwMTMwREYwMDM5MzkyOEMyNjkxCgpPZmZCbG9ja3Mgd2FudHMgdG8gdmVyaWZ5IG93bmVyc2hpcCBvZiB5b3VyIHdhbGxldC4gQnkgY29ubmVjdGluZyB5b3VyIHdhbGxldCBhbmQgdXNpbmcgT2ZmQmxvY2tzLCB5b3UgYWdyZWUgdG8gb3VyIFRlcm1zIG9mIHNlcnZpY2VzIGFuZCBQcml2YWN5IFBvbGljeQoKVVJJOiBodHRwczovL2FwaS5zYW5kYm94Lm9mZmJsb2Nrcy54eXoKVmVyc2lvbjogMQpDaGFpbiBJRDogMjgwCk5vbmNlOiA1dWZvaUVxRGFGdm1mbzc4Cklzc3VlZCBBdDogMjAyNC0wMS0xN1QxODoyMTo1M1o=\",\n  \"signature\": \"MHg4M2IxM2RhYjE2MjI3MjAxMWQzMzQ4NDFkZjE5NTQ1MjUwNDI1NjczMjhhZDdjMDVjOTYyYjAwNWVlZDg3MGI2NDhjMjA0ZjBiZmZjZjUyYjM3NTE0MGIwYzg0OTA4ZTQ2MzMyNWIxZGZlNWJiYjAzMjU5NzYyNDgyODM0YWYzNzFi\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/customers/:customerId/challenge/sign",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"customers",
								":customerId",
								"challenge",
								"sign"
							],
							"variable": [
								{
									"key": "customerId",
									"value": "56463bb2-a4c2-537e-bfdb-a1705b9eee17",
									"description": "(Required) ID of customer to be challenged"
								}
							]
						},
						"description": "Signs previously issued challenge to verify customer's ownership of their blockchain account"
					},
					"response": [
						{
							"id": "e93301a1-24c8-495c-9520-ac36dee0c41b",
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ownerId\": \"ut consequat ex Ut\",\n  \"challenge\": \"<string>\",\n  \"signature\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId/challenge/sign",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId",
										"challenge",
										"sign"
									],
									"variable": [
										{
											"key": "customerId"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "6098ee85-71a1-4762-be64-ad63db48ec6d",
							"name": "Invalid request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ownerId\": \"ut consequat ex Ut\",\n  \"challenge\": \"<string>\",\n  \"signature\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId/challenge/sign",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId",
										"challenge",
										"sign"
									],
									"variable": [
										{
											"key": "customerId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "fdff5db9-7452-4fd8-b79c-46d06f7b9964",
							"name": "Not authorised",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ownerId\": \"ut consequat ex Ut\",\n  \"challenge\": \"<string>\",\n  \"signature\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId/challenge/sign",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId",
										"challenge",
										"sign"
									],
									"variable": [
										{
											"key": "customerId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "f993375d-bab4-47c4-ac38-0a3d4e01644c",
							"name": "Customer not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ownerId\": \"ut consequat ex Ut\",\n  \"challenge\": \"<string>\",\n  \"signature\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId/challenge/sign",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId",
										"challenge",
										"sign"
									],
									"variable": [
										{
											"key": "customerId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "c7d27af5-452a-4d1b-90f7-70e938e49868",
							"name": "Challenge already signed",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ownerId\": \"eip155:280:0x43158f45b5EbD7b1179130131DF00393928C2691\",\n  \"challenge\": \"TnpOak5Ea3dPRGN0T0RVd1l5MDBNV0V3TFdFd05HWXROakJqTWpnNE4yVmlabVk0\",\n  \"signature\": \"c2lnbmF0dXJl\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId/challenge/sign",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId",
										"challenge",
										"sign"
									],
									"variable": [
										{
											"key": "customerId"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "99a49dc6-ec69-4d3e-86b9-91423e8fb8e1",
							"name": "Internal error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ownerId\": \"eip155:280:0x43158f45b5EbD7b1179130131DF00393928C2691\",\n  \"challenge\": \"TnpOak5Ea3dPRGN0T0RVd1l5MDBNV0V3TFdFd05HWXROakJqTWpnNE4yVmlabVk0\",\n  \"signature\": \"c2lnbmF0dXJl\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId/challenge/sign",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId",
										"challenge",
										"sign"
									],
									"variable": [
										{
											"key": "customerId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Deactivate customer",
					"id": "f034902e-2f22-4641-a79b-d3fc46aabec2",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) Idempotency key (free format)",
								"key": "Idempotency-Key",
								"value": "{{$randomUUID}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/customers/:customerId/deactivate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"customers",
								":customerId",
								"deactivate"
							],
							"variable": [
								{
									"key": "customerId",
									"value": "16843e98-857b-5ec3-b616-43d8b334c828",
									"description": "(Required) ID of customer to be deactivated"
								}
							]
						},
						"description": "Deactivates customer and all associated resources"
					},
					"response": [
						{
							"id": "64fd32ac-8c5a-4504-a245-471019eb97f6",
							"name": "Successful operation",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.sandbox.offblocks.xyz/v1/customers/:customerId/deactivate",
									"protocol": "https",
									"host": [
										"api",
										"sandbox",
										"offblocks",
										"xyz"
									],
									"path": [
										"v1",
										"customers",
										":customerId",
										"deactivate"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "<string>",
											"description": "(Required) ID of customer to be deactivated"
										}
									]
								},
								"description": "Deactivates customer and all associated resources"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"status\": \"rejected\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"externalId\": \"<string>\",\n  \"chainId\": \"<string>\"\n}"
						},
						{
							"id": "ddcc3c3c-3335-4310-b630-3d3f40d409b7",
							"name": "Invalid request",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId/deactivate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId",
										"deactivate"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "<string>",
											"description": "(Required) ID of customer to be deactivated"
										}
									]
								},
								"description": "Deactivates customer and all associated resources"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "90c6eb5f-dc99-48b3-a45b-f1aeca82bff2",
							"name": "Not authorised",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId/deactivate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId",
										"deactivate"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "<string>",
											"description": "(Required) ID of customer to be deactivated"
										}
									]
								},
								"description": "Deactivates customer and all associated resources"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "51df8d41-cc31-45cb-b339-928928fe6dd7",
							"name": "Customer not found",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId/deactivate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId",
										"deactivate"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "<string>",
											"description": "(Required) ID of customer to be deactivated"
										}
									]
								},
								"description": "Deactivates customer and all associated resources"
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "f7239dd3-2518-43ed-b510-444abb1d2ba5",
							"name": "Invalid state transition",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId/deactivate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId",
										"deactivate"
									],
									"variable": [
										{
											"key": "customerId"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "78220bd8-e390-4a91-acf6-d0431c856018",
							"name": "Internal error",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId/deactivate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId",
										"deactivate"
									],
									"variable": [
										{
											"key": "customerId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Activate customer",
					"id": "12acd24f-386f-45c1-9b8c-7af0fff213cb",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) Idempotency key (free format)",
								"key": "Idempotency-Key",
								"value": "{{$randomUUID}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/customers/:customerId/activate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"customers",
								":customerId",
								"activate"
							],
							"variable": [
								{
									"key": "customerId",
									"value": "16843e98-857b-5ec3-b616-43d8b334c828",
									"description": "(Required) ID of customer to be activated"
								}
							]
						},
						"description": "Activates customer and all associated resources"
					},
					"response": [
						{
							"id": "f47e5959-f2bc-472f-9567-1a8993e76872",
							"name": "Successful operation",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.sandbox.offblocks.xyz/v1/customers/:customerId/activate",
									"protocol": "https",
									"host": [
										"api",
										"sandbox",
										"offblocks",
										"xyz"
									],
									"path": [
										"v1",
										"customers",
										":customerId",
										"activate"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "<string>",
											"description": "(Required) ID of customer to be activated"
										}
									]
								},
								"description": "Activates customer and all associated resources"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"status\": \"initiating\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"externalId\": \"<string>\",\n  \"chainId\": \"<string>\"\n}"
						},
						{
							"id": "fdebfec1-9e6a-4381-9cb8-9252b2dcce4a",
							"name": "Invalid request",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId/activate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId",
										"activate"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "<string>",
											"description": "(Required) ID of customer to be activated"
										}
									]
								},
								"description": "Activates customer and all associated resources"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "c08b8be3-7e70-4171-b082-dab4f2d80cfa",
							"name": "Not authorised",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId/activate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId",
										"activate"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "<string>",
											"description": "(Required) ID of customer to be activated"
										}
									]
								},
								"description": "Activates customer and all associated resources"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "0fb77152-79e6-4e73-ba49-94def132fdaf",
							"name": "Customer not found",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId/activate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId",
										"activate"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "<string>",
											"description": "(Required) ID of customer to be activated"
										}
									]
								},
								"description": "Activates customer and all associated resources"
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "b373ff93-40cd-43d5-bda6-4a6dfba8e13d",
							"name": "Invalid state transition",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId/activate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId",
										"activate"
									],
									"variable": [
										{
											"key": "customerId"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "8f6d0b67-70b8-4d7b-9293-eac937ad6c5d",
							"name": "Internal error",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId/activate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId",
										"activate"
									],
									"variable": [
										{
											"key": "customerId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						}
					]
				}
			],
			"id": "e290621f-a647-47c9-ba90-90b350866433"
		},
		{
			"name": "accounts",
			"item": [
				{
					"name": "Retrieve accounts",
					"id": "9576ed4a-1733-4577-bee0-82968cc6dec9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/accounts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"accounts"
							]
						},
						"description": "Retrieves accounts' details"
					},
					"response": [
						{
							"id": "c7205315-ba38-430f-898d-4a89aab5b3b3",
							"name": "Successful operation",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.sandbox.offblocks.xyz/v1/accounts",
									"protocol": "https",
									"host": [
										"api",
										"sandbox",
										"offblocks",
										"xyz"
									],
									"path": [
										"v1",
										"accounts"
									]
								},
								"description": "Retrieves accounts' details"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"customerId\": \"<uuid>\",\n    \"status\": \"initiating\",\n    \"type\": \"card_account\",\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"currencies\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"customerId\": \"<uuid>\",\n    \"status\": \"active\",\n    \"type\": \"card_account\",\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"currencies\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]"
						},
						{
							"id": "0c83179e-d2d0-4848-a916-60af8599eedd",
							"name": "Invalid request",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts"
									]
								},
								"description": "Retrieves accounts' details"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "83360761-088a-4777-ad1e-9358a1608292",
							"name": "Not authorised",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts"
									]
								},
								"description": "Retrieves accounts' details"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "bf3519f1-fa77-4d48-ad05-3eb6a9db8496",
							"name": "Internal error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Retrieve account",
					"id": "48f2941d-de99-4e72-ba81-4334e05f3f42",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/accounts/:accountId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"accounts",
								":accountId"
							],
							"variable": [
								{
									"key": "accountId",
									"value": "ae61c362-4136-49af-8e01-544457fe265b",
									"description": "(Required) ID of account to be retrieved"
								}
							]
						},
						"description": "Retrieves account's details"
					},
					"response": [
						{
							"id": "fa77ae13-9013-4a86-90a1-397fc32bfde0",
							"name": "Successful operation",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.sandbox.offblocks.xyz/v1/accounts/:accountId",
									"protocol": "https",
									"host": [
										"api",
										"sandbox",
										"offblocks",
										"xyz"
									],
									"path": [
										"v1",
										"accounts",
										":accountId"
									],
									"variable": [
										{
											"key": "accountId",
											"value": "<string>",
											"description": "(Required) ID of account to be retrieved"
										}
									]
								},
								"description": "Retrieves account's details"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"customerId\": \"<uuid>\",\n  \"status\": \"closed\",\n  \"type\": \"card_account\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"currencies\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"id": "51367f0f-c8ae-4dc4-984a-8a8d24371bf2",
							"name": "Invalid request",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId"
									],
									"variable": [
										{
											"key": "accountId",
											"value": "<string>",
											"description": "(Required) ID of account to be retrieved"
										}
									]
								},
								"description": "Retrieves account's details"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "a6fc5400-e817-445e-aee1-a2c0a9829df5",
							"name": "Not authorised",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId"
									],
									"variable": [
										{
											"key": "accountId",
											"value": "<string>",
											"description": "(Required) ID of account to be retrieved"
										}
									]
								},
								"description": "Retrieves account's details"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "61d82ebe-4051-4000-bc96-b876497bdc6a",
							"name": "Account not found",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId"
									],
									"variable": [
										{
											"key": "accountId",
											"value": "<string>",
											"description": "(Required) ID of account to be retrieved"
										}
									]
								},
								"description": "Retrieves account's details"
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "e6d78195-a808-4e8c-920f-c9732ed26a3b",
							"name": "Internal error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId"
									],
									"variable": [
										{
											"key": "accountId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Retrieve customer accounts",
					"id": "ecfedec4-7799-4d48-808d-fed72dd59ce3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/customers/:customerId/accounts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"customers",
								":customerId",
								"accounts"
							],
							"variable": [
								{
									"key": "customerId",
									"value": "16843e98-857b-5ec3-b616-43d8b334c828",
									"description": "(Required) ID of the customer"
								}
							]
						},
						"description": "Retrieves customer's accounts"
					},
					"response": [
						{
							"id": "206c941c-c2f8-48e3-873f-3306b1bb2a54",
							"name": "Successful operation",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.sandbox.offblocks.xyz/v1/customers/:customerId/accounts",
									"protocol": "https",
									"host": [
										"api",
										"sandbox",
										"offblocks",
										"xyz"
									],
									"path": [
										"v1",
										"customers",
										":customerId",
										"accounts"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "<string>",
											"description": "(Required) ID of the customer"
										}
									]
								},
								"description": "Retrieves customer's accounts"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"customerId\": \"<uuid>\",\n    \"status\": \"pending\",\n    \"type\": \"card_account\",\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"currencies\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"customerId\": \"<uuid>\",\n    \"status\": \"initiating\",\n    \"type\": \"card_account\",\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"currencies\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n]"
						},
						{
							"id": "28391b43-ed14-4dde-8610-609adbd71a19",
							"name": "Invalid request",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId",
										"accounts"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "<string>",
											"description": "(Required) ID of the customer"
										}
									]
								},
								"description": "Retrieves customer's accounts"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "1bec9d44-c980-44df-bb67-f65c823e3a67",
							"name": "Not authorised",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId",
										"accounts"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "<string>",
											"description": "(Required) ID of the customer"
										}
									]
								},
								"description": "Retrieves customer's accounts"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "b0f15204-90ec-449e-91bb-7052c73a9d6d",
							"name": "Customer not found",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId",
										"accounts"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "<string>",
											"description": "(Required) ID of the customer"
										}
									]
								},
								"description": "Retrieves customer's accounts"
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "40e8da41-5d16-4e6e-b2e0-2df7d1b00f6b",
							"name": "Internal error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId",
										"accounts"
									],
									"variable": [
										{
											"key": "customerId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Create new customer account",
					"id": "aa4e10d6-b95b-453a-b285-2705b9ef92c4",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"description": "(Required) Content digest",
								"key": "Content-Digest",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) Idempotency key (free format)",
								"key": "Idempotency-Key",
								"value": "{{$randomUUID}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/customers/:customerId/accounts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"customers",
								":customerId",
								"accounts"
							],
							"variable": [
								{
									"key": "customerId",
									"value": "16843e98-857b-5ec3-b616-43d8b334c828",
									"description": "(Required) ID of customer"
								}
							]
						},
						"description": "Creates new account for the customer"
					},
					"response": [
						{
							"id": "96a6bfc5-3398-4c73-bb0b-caef208efa0a",
							"name": "Successful operation",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<string>\",\n  \"type\": \"CARD_ACCOUNT\",\n  \"currencies\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"signature\": {\n    \"chainId\": \"<integer>\",\n    \"owner\": \"<string>\",\n    \"r\": \"<string>\",\n    \"s\": \"<string>\",\n    \"v\": \"<integer>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.sandbox.offblocks.xyz/v1/customers/:customerId/accounts",
									"protocol": "https",
									"host": [
										"api",
										"sandbox",
										"offblocks",
										"xyz"
									],
									"path": [
										"v1",
										"customers",
										":customerId",
										"accounts"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "<string>",
											"description": "(Required) ID of customer"
										}
									]
								},
								"description": "Creates new account for the customer"
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"customerId\": \"<uuid>\",\n  \"status\": \"pending\",\n  \"type\": \"card_account\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"currencies\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"challenge\": \"<string>\"\n}"
						},
						{
							"id": "a5f44a56-02cb-44ad-b01d-dae28703e314",
							"name": "Invalid request",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<string>\",\n  \"type\": \"CARD_ACCOUNT\",\n  \"currencies\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"signature\": {\n    \"chainId\": \"<integer>\",\n    \"owner\": \"<string>\",\n    \"r\": \"<string>\",\n    \"s\": \"<string>\",\n    \"v\": \"<integer>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId",
										"accounts"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "<string>",
											"description": "(Required) ID of customer"
										}
									]
								},
								"description": "Creates new account for the customer"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "92ccae01-6565-401d-a2de-73e7b019e951",
							"name": "Not authorised",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<string>\",\n  \"type\": \"CARD_ACCOUNT\",\n  \"currencies\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"signature\": {\n    \"chainId\": \"<integer>\",\n    \"owner\": \"<string>\",\n    \"r\": \"<string>\",\n    \"s\": \"<string>\",\n    \"v\": \"<integer>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId",
										"accounts"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "<string>",
											"description": "(Required) ID of customer"
										}
									]
								},
								"description": "Creates new account for the customer"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "0f79e147-681a-412b-a9e3-be726ceba6a2",
							"name": "Customer not found",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<string>\",\n  \"type\": \"CARD_ACCOUNT\",\n  \"currencies\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"signature\": {\n    \"chainId\": \"<integer>\",\n    \"owner\": \"<string>\",\n    \"r\": \"<string>\",\n    \"s\": \"<string>\",\n    \"v\": \"<integer>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId",
										"accounts"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "<string>",
											"description": "(Required) ID of customer"
										}
									]
								},
								"description": "Creates new account for the customer"
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "594c8b7a-6a2e-4788-adfb-3c950331604e",
							"name": "Internal error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"CARD_ACCOUNT\",\n  \"currencies\": [\n    \"EUR\"\n  ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId",
										"accounts"
									],
									"variable": [
										{
											"key": "customerId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Retrieve account challenge",
					"id": "0a577a3a-8d54-428c-83ff-7507873da703",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "(Required) HTTP message signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/accounts/:accountId/challenge",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"accounts",
								":accountId",
								"challenge"
							],
							"variable": [
								{
									"key": "accountId",
									"value": "fdd70cfa-7933-467b-a37c-303ad37afaa6",
									"description": "(Required) ID of account to be challenged"
								}
							]
						},
						"description": "Retrieves challenge to sign account creation or deletion transaction on-chain. This operation invalidates any previously issued challenges for the account"
					},
					"response": [
						{
							"id": "96ef4e07-d19f-4be8-9f9f-55d1fb2cd38e",
							"name": "Successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId/challenge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId",
										"challenge"
									],
									"variable": [
										{
											"key": "accountId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"challenge\": \"<string>\"\n}"
						},
						{
							"id": "c4c2005e-7982-4258-b3a6-969b43b652a7",
							"name": "Invalid request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId/challenge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId",
										"challenge"
									],
									"variable": [
										{
											"key": "accountId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "b73e7a78-8410-45bc-8def-bd5cf296942b",
							"name": "Not authorised",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId/challenge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId",
										"challenge"
									],
									"variable": [
										{
											"key": "accountId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "c9103ba6-cdaf-487a-9121-ffb204e3cecd",
							"name": "Account not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId/challenge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId",
										"challenge"
									],
									"variable": [
										{
											"key": "accountId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "76be2ad2-761d-4c02-b529-a5b6ce350f77",
							"name": "Internal error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId/challenge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId",
										"challenge"
									],
									"variable": [
										{
											"key": "accountId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Sign previously issued account challenge",
					"id": "1cd4a6ec-7822-478f-94dc-491396b91385",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"description": "(Required) HTTP message signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "(Required) Idempotency key (UUID)",
								"key": "Idempotency-Key",
								"value": "{{$randomUUID}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ownerId\": \"eip155:280:0x43158f45b5EbD7b1179130131DF00393928C2691\",\n  \"challenge\": \"NWRmMzU5ZjAtZDI5OS00MGExLTgwMjMtMTdjNzdhNTAxNDRj\",\n  \"signature\": \"c2lnbmF0dXJl\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/accounts/:accountId/challenge/sign",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"accounts",
								":accountId",
								"challenge",
								"sign"
							],
							"variable": [
								{
									"key": "accountId",
									"value": "ae61c362-4136-49af-8e01-544457fe265b",
									"description": "(Required) ID of account to be challenged"
								}
							]
						},
						"description": "Signs previously issued challenge to sign account creation or deletion transaction on-chain"
					},
					"response": [
						{
							"id": "d1c03c6c-9755-497f-9a80-931dd4f68c70",
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ownerId\": \"ut consequat ex Ut\",\n  \"challenge\": \"<string>\",\n  \"signature\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId/challenge/sign",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId",
										"challenge",
										"sign"
									],
									"variable": [
										{
											"key": "accountId"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "0de79043-5785-4040-8d0f-c8cd26e3f9f3",
							"name": "Invalid request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ownerId\": \"ut consequat ex Ut\",\n  \"challenge\": \"<string>\",\n  \"signature\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId/challenge/sign",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId",
										"challenge",
										"sign"
									],
									"variable": [
										{
											"key": "accountId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "85de1fe3-eca8-4985-92ab-8c7c39c208a0",
							"name": "Not authorised",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ownerId\": \"ut consequat ex Ut\",\n  \"challenge\": \"<string>\",\n  \"signature\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId/challenge/sign",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId",
										"challenge",
										"sign"
									],
									"variable": [
										{
											"key": "accountId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "8691af97-8ee6-49cc-9f7a-628bc72656e2",
							"name": "Account not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ownerId\": \"ut consequat ex Ut\",\n  \"challenge\": \"<string>\",\n  \"signature\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId/challenge/sign",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId",
										"challenge",
										"sign"
									],
									"variable": [
										{
											"key": "accountId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "ba1fd25f-2ad6-464a-a126-36125ee5a94c",
							"name": "Challenge already signed",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ownerId\": \"eip155:280:0x43158f45b5EbD7b1179130131DF00393928C2691\",\n  \"challenge\": \"YTEzNzljOTktZTUwMi00MjhhLWI2OWItOTlhZTc1ODAzMjIy\",\n  \"signature\": \"c2lnbmF0dXJl\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId/challenge/sign",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId",
										"challenge",
										"sign"
									],
									"variable": [
										{
											"key": "accountId"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "67bfa0a2-2be9-402c-be77-aee0605e6203",
							"name": "Internal error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ownerId\": \"eip155:280:0x43158f45b5EbD7b1179130131DF00393928C2691\",\n  \"challenge\": \"YTEzNzljOTktZTUwMi00MjhhLWI2OWItOTlhZTc1ODAzMjIy\",\n  \"signature\": \"c2lnbmF0dXJl\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId/challenge/sign",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId",
										"challenge",
										"sign"
									],
									"variable": [
										{
											"key": "accountId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Deactivate account",
					"id": "1dac505a-6461-4415-a88d-485f447aa35e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) Idempotency key (free format)",
								"key": "Idempotency-Key",
								"value": "{{$randomUUID}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/accounts/:accountId/deactivate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"accounts",
								":accountId",
								"deactivate"
							],
							"variable": [
								{
									"key": "accountId",
									"value": "cd282e77-8d7d-423c-9597-8ea54d27b9c3",
									"description": "(Required) ID of account to be deactivated"
								}
							]
						},
						"description": "Deactivates account and all associated resources"
					},
					"response": [
						{
							"id": "d0abd47e-ca03-4fe8-8485-2c55a0905b05",
							"name": "Successful operation",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.sandbox.offblocks.xyz/v1/accounts/:accountId/deactivate",
									"protocol": "https",
									"host": [
										"api",
										"sandbox",
										"offblocks",
										"xyz"
									],
									"path": [
										"v1",
										"accounts",
										":accountId",
										"deactivate"
									],
									"variable": [
										{
											"key": "accountId",
											"value": "<string>",
											"description": "(Required) ID of account to be deactivated"
										}
									]
								},
								"description": "Deactivates account and all associated resources"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"customerId\": \"<uuid>\",\n  \"status\": \"closed\",\n  \"type\": \"card_account\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"currencies\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"id": "8a9a83ce-103c-4ad3-9e63-916c4a50acb4",
							"name": "Invalid request",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId/deactivate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId",
										"deactivate"
									],
									"variable": [
										{
											"key": "accountId",
											"value": "<string>",
											"description": "(Required) ID of account to be deactivated"
										}
									]
								},
								"description": "Deactivates account and all associated resources"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "c856d789-2015-482a-bc08-af01d0066da1",
							"name": "Not authorised",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId/deactivate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId",
										"deactivate"
									],
									"variable": [
										{
											"key": "accountId",
											"value": "<string>",
											"description": "(Required) ID of account to be deactivated"
										}
									]
								},
								"description": "Deactivates account and all associated resources"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "83a11650-1a16-4967-a191-14debe9554e7",
							"name": "Account not found",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId/deactivate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId",
										"deactivate"
									],
									"variable": [
										{
											"key": "accountId",
											"value": "<string>",
											"description": "(Required) ID of account to be deactivated"
										}
									]
								},
								"description": "Deactivates account and all associated resources"
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "e8d4d9ac-2823-41fb-86be-4dcf3329f1d3",
							"name": "Invalid state transition",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId/deactivate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId",
										"deactivate"
									],
									"variable": [
										{
											"key": "accountId"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "253daacb-96f8-4749-9974-7595e49cd933",
							"name": "Internal error",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId/deactivate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId",
										"deactivate"
									],
									"variable": [
										{
											"key": "accountId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Activate account",
					"id": "6fddf751-6aca-43e8-bbfc-d373639f01c1",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) Idempotency key (free format)",
								"key": "Idempotency-Key",
								"value": "{{$randomUUID}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/accounts/:accountId/activate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"accounts",
								":accountId",
								"activate"
							],
							"variable": [
								{
									"key": "accountId",
									"value": "cd282e77-8d7d-423c-9597-8ea54d27b9c3",
									"description": "(Required) ID of account to be activated"
								}
							]
						},
						"description": "Activates account and all associated resources"
					},
					"response": [
						{
							"id": "0ca921af-cc85-458e-a22b-0ad7455a59bd",
							"name": "Successful operation",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.sandbox.offblocks.xyz/v1/accounts/:accountId/activate",
									"protocol": "https",
									"host": [
										"api",
										"sandbox",
										"offblocks",
										"xyz"
									],
									"path": [
										"v1",
										"accounts",
										":accountId",
										"activate"
									],
									"variable": [
										{
											"key": "accountId",
											"value": "<string>",
											"description": "(Required) ID of account to be activated"
										}
									]
								},
								"description": "Activates account and all associated resources"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"customerId\": \"<uuid>\",\n  \"status\": \"pending\",\n  \"type\": \"card_account\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"currencies\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
						},
						{
							"id": "9cdab790-078d-4428-ae1a-4c51d4e613e5",
							"name": "Invalid request",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId/activate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId",
										"activate"
									],
									"variable": [
										{
											"key": "accountId",
											"value": "<string>",
											"description": "(Required) ID of account to be activated"
										}
									]
								},
								"description": "Activates account and all associated resources"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "116ce4a0-d7d7-4848-9dd4-cc2298f07d86",
							"name": "Not authorised",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId/activate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId",
										"activate"
									],
									"variable": [
										{
											"key": "accountId",
											"value": "<string>",
											"description": "(Required) ID of account to be activated"
										}
									]
								},
								"description": "Activates account and all associated resources"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "1b2248a5-6d9a-4f51-8686-60ea5642fec8",
							"name": "Account not found",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId/activate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId",
										"activate"
									],
									"variable": [
										{
											"key": "accountId",
											"value": "<string>",
											"description": "(Required) ID of account to be activated"
										}
									]
								},
								"description": "Activates account and all associated resources"
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "f5abff93-003e-40c4-b3ef-d8ebe09dd6b0",
							"name": "Invalid state transition",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId/activate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId",
										"activate"
									],
									"variable": [
										{
											"key": "accountId"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "e96eb1da-d7e9-4a9f-b041-d532c58c30cb",
							"name": "Internal error",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId/activate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId",
										"activate"
									],
									"variable": [
										{
											"key": "accountId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Close account",
					"id": "e94bb01e-1e0a-49ed-9e8b-bafd65684d9e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) Idempotency key (free format)",
								"key": "Idempotency-Key",
								"value": "{{$randomUUID}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"signature\": {\n    \"chainId\": \"<integer>\",\n    \"owner\": \"<string>\",\n    \"r\": \"<string>\",\n    \"s\": \"<string>\",\n    \"v\": \"<integer>\"\n  }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/accounts/:accountId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"accounts",
								":accountId"
							],
							"variable": [
								{
									"key": "accountId",
									"value": "cd282e77-8d7d-423c-9597-8ea54d27b9c3",
									"description": "(Required) ID of account to be closed"
								}
							]
						},
						"description": "Closes account"
					},
					"response": [
						{
							"id": "f979d547-1bd3-4246-b322-184be23901ac",
							"name": "Invalid request",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"signature\": {\n    \"chainId\": \"<integer>\",\n    \"owner\": \"<string>\",\n    \"r\": \"<string>\",\n    \"s\": \"<string>\",\n    \"v\": \"<integer>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId"
									],
									"variable": [
										{
											"key": "accountId",
											"value": "<string>",
											"description": "(Required) ID of account to be closed"
										}
									]
								},
								"description": "Closes account"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "bbbe317a-4c2c-4952-a75f-4681aa82673a",
							"name": "Not authorised",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"signature\": {\n    \"chainId\": \"<integer>\",\n    \"owner\": \"<string>\",\n    \"r\": \"<string>\",\n    \"s\": \"<string>\",\n    \"v\": \"<integer>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId"
									],
									"variable": [
										{
											"key": "accountId",
											"value": "<string>",
											"description": "(Required) ID of account to be closed"
										}
									]
								},
								"description": "Closes account"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "9f1cbc2d-232b-46f0-a31c-c32acb8921f2",
							"name": "Account not found",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"signature\": {\n    \"chainId\": \"<integer>\",\n    \"owner\": \"<string>\",\n    \"r\": \"<string>\",\n    \"s\": \"<string>\",\n    \"v\": \"<integer>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId"
									],
									"variable": [
										{
											"key": "accountId",
											"value": "<string>",
											"description": "(Required) ID of account to be closed"
										}
									]
								},
								"description": "Closes account"
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "98b392c1-06d4-4cbf-bdea-f21f01e48e87",
							"name": "Successful operation",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"signature\": {\n    \"chainId\": \"<integer>\",\n    \"owner\": \"<string>\",\n    \"r\": \"<string>\",\n    \"s\": \"<string>\",\n    \"v\": \"<integer>\"\n  }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId"
									],
									"variable": [
										{
											"key": "accountId"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "4d2e7e59-d54f-478a-9aaa-9733be38ef45",
							"name": "Invalid state transition",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"signature\": {\n    \"chainId\": \"<integer>\",\n    \"owner\": \"<string>\",\n    \"r\": \"<string>\",\n    \"s\": \"<string>\",\n    \"v\": \"<integer>\"\n  }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId"
									],
									"variable": [
										{
											"key": "accountId"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "0db91be4-7c30-4608-be33-4dbac42cf417",
							"name": "Internal error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"signature\": {\n    \"chainId\": \"<integer>\",\n    \"owner\": \"<string>\",\n    \"r\": \"<string>\",\n    \"s\": \"<string>\",\n    \"v\": \"<integer>\"\n  }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId"
									],
									"variable": [
										{
											"key": "accountId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						}
					]
				}
			],
			"id": "68c3b886-02b0-4bd4-9f48-3c9769d01e75"
		},
		{
			"name": "cards",
			"item": [
				{
					"name": "Retrieve cards",
					"id": "db42f730-40c4-4943-a808-b46cb57d3883",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/cards",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cards"
							]
						},
						"description": "Retrieves cards' details"
					},
					"response": [
						{
							"id": "40a0d438-2778-47cc-8ec5-20eb50f453b9",
							"name": "Successful operation",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.sandbox.offblocks.xyz/v1/cards",
									"protocol": "https",
									"host": [
										"api",
										"sandbox",
										"offblocks",
										"xyz"
									],
									"path": [
										"v1",
										"cards"
									]
								},
								"description": "Retrieves cards' details"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"accountId\": \"<uuid>\",\n    \"customerId\": \"<uuid>\",\n    \"type\": \"physical\",\n    \"status\": \"suspended\",\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"name\": \"<string>\",\n    \"network\": \"mastercard\",\n    \"lastFourDigits\": \"<string>\",\n    \"expirationDate\": \"<string>\",\n    \"billingAddress\": {\n      \"firstLine\": \"<string>\",\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postCode\": \"<string>\",\n      \"secondLine\": \"<string>\",\n      \"state\": \"<string>\"\n    }\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"accountId\": \"<uuid>\",\n    \"customerId\": \"<uuid>\",\n    \"type\": \"virtual\",\n    \"status\": \"blocked\",\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"name\": \"<string>\",\n    \"network\": \"visa\",\n    \"lastFourDigits\": \"<string>\",\n    \"expirationDate\": \"<string>\",\n    \"billingAddress\": {\n      \"firstLine\": \"<string>\",\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postCode\": \"<string>\",\n      \"secondLine\": \"<string>\",\n      \"state\": \"<string>\"\n    }\n  }\n]"
						},
						{
							"id": "e646ba20-ecad-403a-8b47-3d7ee5a88da6",
							"name": "Invalid request",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cards"
									]
								},
								"description": "Retrieves cards' details"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "1e270ab1-a7cd-4edc-b0e3-f6c2e5f8a43c",
							"name": "Not authorised",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cards"
									]
								},
								"description": "Retrieves cards' details"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "63a37fd9-1431-496a-86ae-014b8c75c4c0",
							"name": "Internal error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cards"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Retrieve card",
					"id": "ce65fa87-5f4a-4e15-a92c-75bd749fbe78",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/cards/:cardId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cards",
								":cardId"
							],
							"variable": [
								{
									"key": "cardId",
									"value": "a196b4dc-d251-4f9c-a5e2-128c45e80c45",
									"description": "(Required) ID of a card to be retrieved"
								}
							]
						},
						"description": "Retrieves card's details"
					},
					"response": [
						{
							"id": "fba4b0ab-dd06-42f2-9799-142020e87561",
							"name": "Successful operation",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.sandbox.offblocks.xyz/v1/cards/:cardId",
									"protocol": "https",
									"host": [
										"api",
										"sandbox",
										"offblocks",
										"xyz"
									],
									"path": [
										"v1",
										"cards",
										":cardId"
									],
									"variable": [
										{
											"key": "cardId",
											"value": "<string>",
											"description": "(Required) ID of a card to be retrieved"
										}
									]
								},
								"description": "Retrieves card's details"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"accountId\": \"<uuid>\",\n  \"customerId\": \"<uuid>\",\n  \"type\": \"virtual\",\n  \"status\": \"blocked\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"name\": \"<string>\",\n  \"network\": \"mastercard\",\n  \"lastFourDigits\": \"<string>\",\n  \"expirationDate\": \"<string>\",\n  \"billingAddress\": {\n    \"firstLine\": \"<string>\",\n    \"city\": \"<string>\",\n    \"country\": \"<string>\",\n    \"postCode\": \"<string>\",\n    \"secondLine\": \"<string>\",\n    \"state\": \"<string>\"\n  }\n}"
						},
						{
							"id": "4e3f29a2-8655-4436-86e1-fe8fe0c482ef",
							"name": "Invalid request",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cards/:cardId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cards",
										":cardId"
									],
									"variable": [
										{
											"key": "cardId",
											"value": "<string>",
											"description": "(Required) ID of a card to be retrieved"
										}
									]
								},
								"description": "Retrieves card's details"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "b21d8db1-ff10-48b3-8f92-8bd011d14332",
							"name": "Not authorised",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cards/:cardId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cards",
										":cardId"
									],
									"variable": [
										{
											"key": "cardId",
											"value": "<string>",
											"description": "(Required) ID of a card to be retrieved"
										}
									]
								},
								"description": "Retrieves card's details"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "af18d1e8-ff14-42eb-a1e9-8302fb41f9c5",
							"name": "Card not found",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cards/:cardId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cards",
										":cardId"
									],
									"variable": [
										{
											"key": "cardId",
											"value": "<string>",
											"description": "(Required) ID of a card to be retrieved"
										}
									]
								},
								"description": "Retrieves card's details"
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "319cd81b-ab75-442a-a964-27b09a8b5ef0",
							"name": "Internal error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cards/:cardId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cards",
										":cardId"
									],
									"variable": [
										{
											"key": "cardId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Retrieve account cards",
					"id": "f0a8816d-20ee-41de-89c7-b7af03b4302a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/accounts/:accountId/cards",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"accounts",
								":accountId",
								"cards"
							],
							"variable": [
								{
									"key": "accountId",
									"value": "cd282e77-8d7d-423c-9597-8ea54d27b9c3",
									"description": "(Required) ID of the account"
								}
							]
						},
						"description": "Retrieves account's cards"
					},
					"response": [
						{
							"id": "a54f8f26-e2b4-415e-9066-1d333c734da8",
							"name": "Successful operation",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.sandbox.offblocks.xyz/v1/accounts/:accountId/cards",
									"protocol": "https",
									"host": [
										"api",
										"sandbox",
										"offblocks",
										"xyz"
									],
									"path": [
										"v1",
										"accounts",
										":accountId",
										"cards"
									],
									"variable": [
										{
											"key": "accountId",
											"value": "<string>",
											"description": "(Required) ID of the account"
										}
									]
								},
								"description": "Retrieves account's cards"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"accountId\": \"<uuid>\",\n    \"customerId\": \"<uuid>\",\n    \"type\": \"virtual\",\n    \"status\": \"blocked\",\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"name\": \"<string>\",\n    \"network\": \"visa\",\n    \"lastFourDigits\": \"<string>\",\n    \"expirationDate\": \"<string>\",\n    \"billingAddress\": {\n      \"firstLine\": \"<string>\",\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postCode\": \"<string>\",\n      \"secondLine\": \"<string>\",\n      \"state\": \"<string>\"\n    }\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"accountId\": \"<uuid>\",\n    \"customerId\": \"<uuid>\",\n    \"type\": \"physical\",\n    \"status\": \"inactive\",\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"name\": \"<string>\",\n    \"network\": \"mastercard\",\n    \"lastFourDigits\": \"<string>\",\n    \"expirationDate\": \"<string>\",\n    \"billingAddress\": {\n      \"firstLine\": \"<string>\",\n      \"city\": \"<string>\",\n      \"country\": \"<string>\",\n      \"postCode\": \"<string>\",\n      \"secondLine\": \"<string>\",\n      \"state\": \"<string>\"\n    }\n  }\n]"
						},
						{
							"id": "d00133f5-b067-4c98-a837-14c269ac59d8",
							"name": "Invalid request",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId/cards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId",
										"cards"
									],
									"variable": [
										{
											"key": "accountId",
											"value": "<string>",
											"description": "(Required) ID of the account"
										}
									]
								},
								"description": "Retrieves account's cards"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "b1a6a3d4-4b62-4323-bb14-d7a13fd538a4",
							"name": "Not authorised",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId/cards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId",
										"cards"
									],
									"variable": [
										{
											"key": "accountId",
											"value": "<string>",
											"description": "(Required) ID of the account"
										}
									]
								},
								"description": "Retrieves account's cards"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "052431f1-09bb-4c4f-80f2-4177bbdcc967",
							"name": "Account not found",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId/cards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId",
										"cards"
									],
									"variable": [
										{
											"key": "accountId",
											"value": "<string>",
											"description": "(Required) ID of the account"
										}
									]
								},
								"description": "Retrieves account's cards"
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "41e63f92-42a9-490a-87d0-6e8d15b332e6",
							"name": "Internal error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId/cards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId",
										"cards"
									],
									"variable": [
										{
											"key": "accountId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Create new card",
					"id": "2667fb5f-2494-41b8-82e0-044104b4dffd",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"description": "(Required) Content digest",
								"key": "Content-Digest",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) Idempotency key (free format)",
								"key": "Idempotency-Key",
								"value": "{{$randomUUID}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/accounts/:accountId/cards",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"accounts",
								":accountId",
								"cards"
							],
							"variable": [
								{
									"key": "accountId",
									"value": "fdd70cfa-7933-467b-a37c-303ad37afaa6",
									"description": "(Required) ID of account"
								}
							]
						},
						"description": "Creates new card for the account"
					},
					"response": [
						{
							"id": "0060708b-5e55-4fb9-8da9-b7ead94c0e1b",
							"name": "Successful operation",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<string>\",\n  \"type\": \"VIRTUAL\",\n  \"billingAddress\": {\n    \"firstLine\": \"<string>\",\n    \"city\": \"<string>\",\n    \"country\": \"<string>\",\n    \"postCode\": \"<string>\",\n    \"secondLine\": \"<string>\",\n    \"state\": \"<string>\"\n  },\n  \"shippingAddress\": {\n    \"firstLine\": \"<string>\",\n    \"city\": \"<string>\",\n    \"country\": \"<string>\",\n    \"postCode\": \"<string>\",\n    \"secondLine\": \"<string>\",\n    \"state\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.sandbox.offblocks.xyz/v1/accounts/:accountId/cards",
									"protocol": "https",
									"host": [
										"api",
										"sandbox",
										"offblocks",
										"xyz"
									],
									"path": [
										"v1",
										"accounts",
										":accountId",
										"cards"
									],
									"variable": [
										{
											"key": "accountId",
											"value": "<string>",
											"description": "(Required) ID of account"
										}
									]
								},
								"description": "Creates new card for the account"
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"accountId\": \"<uuid>\",\n  \"customerId\": \"<uuid>\",\n  \"type\": \"virtual\",\n  \"status\": \"suspended\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"name\": \"<string>\",\n  \"network\": \"mastercard\",\n  \"lastFourDigits\": \"<string>\",\n  \"expirationDate\": \"<string>\",\n  \"billingAddress\": {\n    \"firstLine\": \"<string>\",\n    \"city\": \"<string>\",\n    \"country\": \"<string>\",\n    \"postCode\": \"<string>\",\n    \"secondLine\": \"<string>\",\n    \"state\": \"<string>\"\n  }\n}"
						},
						{
							"id": "22ab8c93-0ffc-431a-b914-251da854b31c",
							"name": "Invalid request",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<string>\",\n  \"type\": \"VIRTUAL\",\n  \"billingAddress\": {\n    \"firstLine\": \"<string>\",\n    \"city\": \"<string>\",\n    \"country\": \"<string>\",\n    \"postCode\": \"<string>\",\n    \"secondLine\": \"<string>\",\n    \"state\": \"<string>\"\n  },\n  \"shippingAddress\": {\n    \"firstLine\": \"<string>\",\n    \"city\": \"<string>\",\n    \"country\": \"<string>\",\n    \"postCode\": \"<string>\",\n    \"secondLine\": \"<string>\",\n    \"state\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId/cards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId",
										"cards"
									],
									"variable": [
										{
											"key": "accountId",
											"value": "<string>",
											"description": "(Required) ID of account"
										}
									]
								},
								"description": "Creates new card for the account"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "74ac075b-7b66-4039-ab34-fa99efdc53a7",
							"name": "Not authorised",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<string>\",\n  \"type\": \"VIRTUAL\",\n  \"billingAddress\": {\n    \"firstLine\": \"<string>\",\n    \"city\": \"<string>\",\n    \"country\": \"<string>\",\n    \"postCode\": \"<string>\",\n    \"secondLine\": \"<string>\",\n    \"state\": \"<string>\"\n  },\n  \"shippingAddress\": {\n    \"firstLine\": \"<string>\",\n    \"city\": \"<string>\",\n    \"country\": \"<string>\",\n    \"postCode\": \"<string>\",\n    \"secondLine\": \"<string>\",\n    \"state\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId/cards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId",
										"cards"
									],
									"variable": [
										{
											"key": "accountId",
											"value": "<string>",
											"description": "(Required) ID of account"
										}
									]
								},
								"description": "Creates new card for the account"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "97592b20-5cc2-4744-b0ed-8ddb782c86a2",
							"name": "Account not found",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<string>\",\n  \"type\": \"VIRTUAL\",\n  \"billingAddress\": {\n    \"firstLine\": \"<string>\",\n    \"city\": \"<string>\",\n    \"country\": \"<string>\",\n    \"postCode\": \"<string>\",\n    \"secondLine\": \"<string>\",\n    \"state\": \"<string>\"\n  },\n  \"shippingAddress\": {\n    \"firstLine\": \"<string>\",\n    \"city\": \"<string>\",\n    \"country\": \"<string>\",\n    \"postCode\": \"<string>\",\n    \"secondLine\": \"<string>\",\n    \"state\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId/cards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId",
										"cards"
									],
									"variable": [
										{
											"key": "accountId",
											"value": "<string>",
											"description": "(Required) ID of account"
										}
									]
								},
								"description": "Creates new card for the account"
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "311824b5-d91b-42c7-b56e-01c978258eda",
							"name": "Internal error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"VIRTUAL\",\n  \"billingAddress\": {\n    \"firstLine\": \"1 Text Avenue\",\n    \"city\": \"London\",\n    \"country\": \"GB\",\n    \"postCode\": \"SW1 1AA\"\n  }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId/cards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId",
										"cards"
									],
									"variable": [
										{
											"key": "accountId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Deactivate card",
					"id": "5e1e2e9b-43ee-4540-ad6f-ca822db37c32",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) Idempotency key (free format)",
								"key": "Idempotency-Key",
								"value": "{{$randomUUID}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/cards/:cardId/deactivate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cards",
								":cardId",
								"deactivate"
							],
							"variable": [
								{
									"key": "cardId",
									"value": "a196b4dc-d251-4f9c-a5e2-128c45e80c45",
									"description": "(Required) ID of card to be deactivated"
								}
							]
						},
						"description": "Deactivates card and all associated resources"
					},
					"response": [
						{
							"id": "cfe75ec1-7292-494e-847e-783adf6958a5",
							"name": "Successful operation",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.sandbox.offblocks.xyz/v1/cards/:cardId/deactivate",
									"protocol": "https",
									"host": [
										"api",
										"sandbox",
										"offblocks",
										"xyz"
									],
									"path": [
										"v1",
										"cards",
										":cardId",
										"deactivate"
									],
									"variable": [
										{
											"key": "cardId",
											"value": "<string>",
											"description": "(Required) ID of card to be deactivated"
										}
									]
								},
								"description": "Deactivates card and all associated resources"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"accountId\": \"<uuid>\",\n  \"customerId\": \"<uuid>\",\n  \"type\": \"physical\",\n  \"status\": \"inactive\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"name\": \"<string>\",\n  \"network\": \"visa\",\n  \"lastFourDigits\": \"<string>\",\n  \"expirationDate\": \"<string>\",\n  \"billingAddress\": {\n    \"firstLine\": \"<string>\",\n    \"city\": \"<string>\",\n    \"country\": \"<string>\",\n    \"postCode\": \"<string>\",\n    \"secondLine\": \"<string>\",\n    \"state\": \"<string>\"\n  }\n}"
						},
						{
							"id": "39722d4d-451c-404c-9d3a-b2d9aeb17b5f",
							"name": "Invalid request",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cards/:cardId/deactivate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cards",
										":cardId",
										"deactivate"
									],
									"variable": [
										{
											"key": "cardId",
											"value": "<string>",
											"description": "(Required) ID of card to be deactivated"
										}
									]
								},
								"description": "Deactivates card and all associated resources"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "e71ad4cd-4f6a-49fa-970b-e2e029e0933d",
							"name": "Not authorised",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cards/:cardId/deactivate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cards",
										":cardId",
										"deactivate"
									],
									"variable": [
										{
											"key": "cardId",
											"value": "<string>",
											"description": "(Required) ID of card to be deactivated"
										}
									]
								},
								"description": "Deactivates card and all associated resources"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "e9f5da55-d835-4ed1-992f-d78558c87588",
							"name": "Account not found",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cards/:cardId/deactivate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cards",
										":cardId",
										"deactivate"
									],
									"variable": [
										{
											"key": "cardId",
											"value": "<string>",
											"description": "(Required) ID of card to be deactivated"
										}
									]
								},
								"description": "Deactivates card and all associated resources"
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "c573659d-18ac-4fd5-9784-56e376d4eccf",
							"name": "Invalid state transition",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cards/:cardId/deactivate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cards",
										":cardId",
										"deactivate"
									],
									"variable": [
										{
											"key": "cardId"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "7d83699e-41c9-4a5e-adb8-967c1017c84e",
							"name": "Internal error",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cards/:cardId/deactivate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cards",
										":cardId",
										"deactivate"
									],
									"variable": [
										{
											"key": "cardId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Activate card",
					"id": "620055f2-6cca-4e16-b534-0cc8d67ce6be",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) Idempotency key (free format)",
								"key": "Idempotency-Key",
								"value": "{{$randomUUID}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/cards/:cardId/activate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cards",
								":cardId",
								"activate"
							],
							"variable": [
								{
									"key": "cardId",
									"value": "a196b4dc-d251-4f9c-a5e2-128c45e80c45",
									"description": "(Required) ID of card to be activated"
								}
							]
						},
						"description": "Activates card and all associated resources"
					},
					"response": [
						{
							"id": "1e919e47-3398-4947-ab9a-beb319df2c92",
							"name": "Successful operation",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.sandbox.offblocks.xyz/v1/cards/:cardId/activate",
									"protocol": "https",
									"host": [
										"api",
										"sandbox",
										"offblocks",
										"xyz"
									],
									"path": [
										"v1",
										"cards",
										":cardId",
										"activate"
									],
									"variable": [
										{
											"key": "cardId",
											"value": "<string>",
											"description": "(Required) ID of card to be activated"
										}
									]
								},
								"description": "Activates card and all associated resources"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"accountId\": \"<uuid>\",\n  \"customerId\": \"<uuid>\",\n  \"type\": \"virtual\",\n  \"status\": \"active\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"name\": \"<string>\",\n  \"network\": \"mastercard\",\n  \"lastFourDigits\": \"<string>\",\n  \"expirationDate\": \"<string>\",\n  \"billingAddress\": {\n    \"firstLine\": \"<string>\",\n    \"city\": \"<string>\",\n    \"country\": \"<string>\",\n    \"postCode\": \"<string>\",\n    \"secondLine\": \"<string>\",\n    \"state\": \"<string>\"\n  }\n}"
						},
						{
							"id": "8f9b8271-8439-432f-b548-a6ee7bd780e9",
							"name": "Invalid request",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cards/:cardId/activate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cards",
										":cardId",
										"activate"
									],
									"variable": [
										{
											"key": "cardId",
											"value": "<string>",
											"description": "(Required) ID of card to be activated"
										}
									]
								},
								"description": "Activates card and all associated resources"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "725e10f3-037d-41a5-b160-5010af2585ce",
							"name": "Not authorised",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cards/:cardId/activate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cards",
										":cardId",
										"activate"
									],
									"variable": [
										{
											"key": "cardId",
											"value": "<string>",
											"description": "(Required) ID of card to be activated"
										}
									]
								},
								"description": "Activates card and all associated resources"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "2c152578-3687-44f1-b7b3-a210415325cf",
							"name": "Account not found",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cards/:cardId/activate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cards",
										":cardId",
										"activate"
									],
									"variable": [
										{
											"key": "cardId",
											"value": "<string>",
											"description": "(Required) ID of card to be activated"
										}
									]
								},
								"description": "Activates card and all associated resources"
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "d4438c93-8788-4dc5-94b4-1aa4cb4cd777",
							"name": "Invalid state transition",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cards/:cardId/activate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cards",
										":cardId",
										"activate"
									],
									"variable": [
										{
											"key": "cardId"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "b81c9ec3-7bd1-4dcd-8744-c8bcb2339c98",
							"name": "Internal error",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cards/:cardId/activate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cards",
										":cardId",
										"activate"
									],
									"variable": [
										{
											"key": "cardId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Terminate card",
					"id": "d86c67cf-3fc1-4058-aa79-714e7cc5c74e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) Idempotency key (free format)",
								"key": "Idempotency-Key",
								"value": "{{$randomUUID}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/cards/:cardId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cards",
								":cardId"
							],
							"variable": [
								{
									"key": "cardId",
									"value": "a196b4dc-d251-4f9c-a5e2-128c45e80c45",
									"description": "(Required) ID of a card to be closed"
								}
							]
						},
						"description": "Terminates card"
					},
					"response": [
						{
							"id": "aff54be9-9bdf-4e36-a689-1f4c1366a380",
							"name": "Successful operation",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "https://api.sandbox.offblocks.xyz/v1/cards/:cardId",
									"protocol": "https",
									"host": [
										"api",
										"sandbox",
										"offblocks",
										"xyz"
									],
									"path": [
										"v1",
										"cards",
										":cardId"
									],
									"variable": [
										{
											"key": "cardId",
											"value": "<string>",
											"description": "(Required) ID of a card to be closed"
										}
									]
								},
								"description": "Terminates card"
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "376cd4bd-2749-4214-ae6c-385c9f8be219",
							"name": "Invalid request",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cards/:cardId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cards",
										":cardId"
									],
									"variable": [
										{
											"key": "cardId",
											"value": "<string>",
											"description": "(Required) ID of a card to be closed"
										}
									]
								},
								"description": "Terminates card"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "059e19a1-4359-4aa6-a047-05a1deb5e08a",
							"name": "Not authorised",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cards/:cardId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cards",
										":cardId"
									],
									"variable": [
										{
											"key": "cardId",
											"value": "<string>",
											"description": "(Required) ID of a card to be closed"
										}
									]
								},
								"description": "Terminates card"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "f55a1e0a-c5cd-4571-a262-5921e343e955",
							"name": "Card not found",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cards/:cardId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cards",
										":cardId"
									],
									"variable": [
										{
											"key": "cardId",
											"value": "<string>",
											"description": "(Required) ID of a card to be closed"
										}
									]
								},
								"description": "Terminates card"
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "15a7ea23-3ee5-4b47-87ff-34aabe8debb4",
							"name": "Invalid state transition",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cards/:cardId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cards",
										":cardId"
									],
									"variable": [
										{
											"key": "cardId"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "34797a32-0977-4580-94cb-671592b8cebd",
							"name": "Internal error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cards/:cardId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cards",
										":cardId"
									],
									"variable": [
										{
											"key": "cardId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						}
					]
				}
			],
			"id": "ec7ebe8d-01c1-4a6d-9ea3-abf0d3916b09"
		},
		{
			"name": "transactions",
			"item": [
				{
					"name": "Retrieve transaction details",
					"id": "240300cf-ba38-4653-aa5e-b253ac41ff9a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/transactions/:transactionId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transactions",
								":transactionId"
							],
							"variable": [
								{
									"key": "transactionId",
									"value": "a196b4dc-d251-4f9c-a5e2-128c45e80c45",
									"description": "(Required) ID of the transaction"
								}
							]
						},
						"description": "Retrieves transaction's details"
					},
					"response": [
						{
							"id": "bf9c588d-50e2-4177-8c1d-61d2e761a55f",
							"name": "Successful operation",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.sandbox.offblocks.xyz/v1/transactions/:transactionId",
									"protocol": "https",
									"host": [
										"api",
										"sandbox",
										"offblocks",
										"xyz"
									],
									"path": [
										"v1",
										"transactions",
										":transactionId"
									],
									"variable": [
										{
											"key": "transactionId",
											"value": "<string>",
											"description": "(Required) ID of the transaction"
										}
									]
								},
								"description": "Retrieves transaction's details"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"accountId\": \"<uuid>\",\n  \"customerId\": \"<uuid>\",\n  \"status\": \"processed\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"cardId\": \"<uuid>\",\n  \"amount\": \"<integer>\",\n  \"currency\": \"<string>\",\n  \"token\": \"<string>\",\n  \"tokenAmount\": \"<string>\",\n  \"meta\": {\n    \"direction\": \"NOOP\",\n    \"exchangeRate\": \"<integer>\",\n    \"merchant\": {\n      \"name\": \"<string>\",\n      \"mcc\": \"<integer>\",\n      \"country\": \"<string>\",\n      \"city\": \"<string>\",\n      \"id\": \"<string>\"\n    },\n    \"transactionType\": \"PURCHASE\",\n    \"authCode\": \"<string>\"\n  },\n  \"direction\": \"credit\",\n  \"merchantAmount\": \"<string>\",\n  \"merchantCurrency\": \"<string>\",\n  \"exchangeRate\": \"<string>\",\n  \"merchant\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"mcc\": \"<integer>\",\n    \"country\": \"<string>\",\n    \"city\": \"<string>\"\n  },\n  \"fees\": [\n    {\n      \"type\": \"network\",\n      \"tokenAmount\": \"<string>\"\n    },\n    {\n      \"type\": \"service\",\n      \"tokenAmount\": \"<string>\"\n    }\n  ],\n  \"chainTransactions\": [\n    {\n      \"chainId\": \"<string>\",\n      \"createdAt\": \"<dateTime>\"\n    },\n    {\n      \"chainId\": \"<string>\",\n      \"createdAt\": \"<dateTime>\"\n    }\n  ]\n}"
						},
						{
							"id": "d7607b73-4bf2-48b3-8d70-b1d5ef844951",
							"name": "Invalid request",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transactions/:transactionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transactions",
										":transactionId"
									],
									"variable": [
										{
											"key": "transactionId",
											"value": "<string>",
											"description": "(Required) ID of the transaction"
										}
									]
								},
								"description": "Retrieves transaction's details"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "edfd8dae-50ca-430f-b402-7bf078d56696",
							"name": "Not authorised",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transactions/:transactionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transactions",
										":transactionId"
									],
									"variable": [
										{
											"key": "transactionId",
											"value": "<string>",
											"description": "(Required) ID of the transaction"
										}
									]
								},
								"description": "Retrieves transaction's details"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "c76d9524-6d18-49cd-8b41-d84498cea402",
							"name": "Transaction not found",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transactions/:transactionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transactions",
										":transactionId"
									],
									"variable": [
										{
											"key": "transactionId",
											"value": "<string>",
											"description": "(Required) ID of the transaction"
										}
									]
								},
								"description": "Retrieves transaction's details"
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "47ce044b-32ed-456b-8097-fe55c36f74a2",
							"name": "Internal error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transactions/:transactionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transactions",
										":transactionId"
									],
									"variable": [
										{
											"key": "transactionId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Retrieve account transactions",
					"id": "f2d404fb-c16d-480b-b386-0e2acdf1f763",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/accounts/:accountId/transactions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"accounts",
								":accountId",
								"transactions"
							],
							"variable": [
								{
									"key": "accountId",
									"value": "fb52ff01-0551-4b87-9d3e-19af735ebb12",
									"description": "(Required) ID of the account"
								}
							]
						},
						"description": "Retrieves account's transactions"
					},
					"response": [
						{
							"id": "0ad3de69-1b34-44c5-b5dd-1b36bea29b32",
							"name": "Successful operation",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.sandbox.offblocks.xyz/v1/accounts/:accountId/transactions",
									"protocol": "https",
									"host": [
										"api",
										"sandbox",
										"offblocks",
										"xyz"
									],
									"path": [
										"v1",
										"accounts",
										":accountId",
										"transactions"
									],
									"variable": [
										{
											"key": "accountId",
											"value": "<string>",
											"description": "(Required) ID of the account"
										}
									]
								},
								"description": "Retrieves account's transactions"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"accountId\": \"<uuid>\",\n    \"customerId\": \"<uuid>\",\n    \"status\": \"reversed\",\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"cardId\": \"<uuid>\",\n    \"amount\": \"<integer>\",\n    \"currency\": \"<string>\",\n    \"token\": \"<string>\",\n    \"tokenAmount\": \"<string>\",\n    \"meta\": {\n      \"direction\": \"DEBIT\",\n      \"exchangeRate\": \"<integer>\",\n      \"merchant\": {\n        \"name\": \"<string>\",\n        \"mcc\": \"<integer>\",\n        \"country\": \"<string>\",\n        \"city\": \"<string>\",\n        \"id\": \"<string>\"\n      },\n      \"transactionType\": \"DEPOSIT\",\n      \"authCode\": \"<string>\"\n    },\n    \"direction\": \"credit\",\n    \"merchantAmount\": \"<string>\",\n    \"merchantCurrency\": \"<string>\",\n    \"exchangeRate\": \"<string>\",\n    \"merchant\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"mcc\": \"<integer>\",\n      \"country\": \"<string>\",\n      \"city\": \"<string>\"\n    },\n    \"fees\": [\n      {\n        \"type\": \"network\",\n        \"tokenAmount\": \"<string>\"\n      },\n      {\n        \"type\": \"partner\",\n        \"tokenAmount\": \"<string>\"\n      }\n    ],\n    \"chainTransactions\": [\n      {\n        \"chainId\": \"<string>\",\n        \"createdAt\": \"<dateTime>\"\n      },\n      {\n        \"chainId\": \"<string>\",\n        \"createdAt\": \"<dateTime>\"\n      }\n    ]\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"accountId\": \"<uuid>\",\n    \"customerId\": \"<uuid>\",\n    \"status\": \"reversing\",\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"cardId\": \"<uuid>\",\n    \"amount\": \"<integer>\",\n    \"currency\": \"<string>\",\n    \"token\": \"<string>\",\n    \"tokenAmount\": \"<string>\",\n    \"meta\": {\n      \"direction\": \"NOOP\",\n      \"exchangeRate\": \"<integer>\",\n      \"merchant\": {\n        \"name\": \"<string>\",\n        \"mcc\": \"<integer>\",\n        \"country\": \"<string>\",\n        \"city\": \"<string>\",\n        \"id\": \"<string>\"\n      },\n      \"transactionType\": \"REFUND\",\n      \"authCode\": \"<string>\"\n    },\n    \"direction\": \"debit\",\n    \"merchantAmount\": \"<string>\",\n    \"merchantCurrency\": \"<string>\",\n    \"exchangeRate\": \"<string>\",\n    \"merchant\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"mcc\": \"<integer>\",\n      \"country\": \"<string>\",\n      \"city\": \"<string>\"\n    },\n    \"fees\": [\n      {\n        \"type\": \"partner\",\n        \"tokenAmount\": \"<string>\"\n      },\n      {\n        \"type\": \"service\",\n        \"tokenAmount\": \"<string>\"\n      }\n    ],\n    \"chainTransactions\": [\n      {\n        \"chainId\": \"<string>\",\n        \"createdAt\": \"<dateTime>\"\n      },\n      {\n        \"chainId\": \"<string>\",\n        \"createdAt\": \"<dateTime>\"\n      }\n    ]\n  }\n]"
						},
						{
							"id": "ae9f6647-2eeb-40c5-9e25-be47b0541000",
							"name": "Invalid request",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId/transactions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId",
										"transactions"
									],
									"variable": [
										{
											"key": "accountId",
											"value": "<string>",
											"description": "(Required) ID of the account"
										}
									]
								},
								"description": "Retrieves account's transactions"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "96a82dd2-d21f-4fcd-8558-b53d303ea07b",
							"name": "Not authorised",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId/transactions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId",
										"transactions"
									],
									"variable": [
										{
											"key": "accountId",
											"value": "<string>",
											"description": "(Required) ID of the account"
										}
									]
								},
								"description": "Retrieves account's transactions"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "99523ff3-a875-4dbe-9ae5-bdf33159a2cc",
							"name": "Account not found",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId/transactions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId",
										"transactions"
									],
									"variable": [
										{
											"key": "accountId",
											"value": "<string>",
											"description": "(Required) ID of the account"
										}
									]
								},
								"description": "Retrieves account's transactions"
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "74a55a6a-a533-42ec-84ac-541ea901b045",
							"name": "Internal error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts/:accountId/transactions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts",
										":accountId",
										"transactions"
									],
									"variable": [
										{
											"key": "accountId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Retrieve card transactions",
					"id": "183c282b-dc01-4b09-8ac6-f569bf8b74a4",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/cards/:cardId/transactions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"cards",
								":cardId",
								"transactions"
							],
							"variable": [
								{
									"key": "cardId",
									"value": "a196b4dc-d251-4f9c-a5e2-128c45e80c45",
									"description": "(Required) ID of the card"
								}
							]
						},
						"description": "Retrieves card's transactions"
					},
					"response": [
						{
							"id": "39dba429-3f53-4b9b-9277-366f7c9077b0",
							"name": "Successful operation",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.sandbox.offblocks.xyz/v1/cards/:cardId/transactions",
									"protocol": "https",
									"host": [
										"api",
										"sandbox",
										"offblocks",
										"xyz"
									],
									"path": [
										"v1",
										"cards",
										":cardId",
										"transactions"
									],
									"variable": [
										{
											"key": "cardId",
											"value": "<string>",
											"description": "(Required) ID of the card"
										}
									]
								},
								"description": "Retrieves card's transactions"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<uuid>\",\n    \"accountId\": \"<uuid>\",\n    \"customerId\": \"<uuid>\",\n    \"status\": \"processed\",\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"cardId\": \"<uuid>\",\n    \"amount\": \"<integer>\",\n    \"currency\": \"<string>\",\n    \"token\": \"<string>\",\n    \"tokenAmount\": \"<string>\",\n    \"meta\": {\n      \"direction\": \"DEBIT\",\n      \"exchangeRate\": \"<integer>\",\n      \"merchant\": {\n        \"name\": \"<string>\",\n        \"mcc\": \"<integer>\",\n        \"country\": \"<string>\",\n        \"city\": \"<string>\",\n        \"id\": \"<string>\"\n      },\n      \"transactionType\": \"OTHER\",\n      \"authCode\": \"<string>\"\n    },\n    \"direction\": \"credit\",\n    \"merchantAmount\": \"<string>\",\n    \"merchantCurrency\": \"<string>\",\n    \"exchangeRate\": \"<string>\",\n    \"merchant\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"mcc\": \"<integer>\",\n      \"country\": \"<string>\",\n      \"city\": \"<string>\"\n    },\n    \"fees\": [\n      {\n        \"type\": \"partner\",\n        \"tokenAmount\": \"<string>\"\n      },\n      {\n        \"type\": \"network\",\n        \"tokenAmount\": \"<string>\"\n      }\n    ],\n    \"chainTransactions\": [\n      {\n        \"chainId\": \"<string>\",\n        \"createdAt\": \"<dateTime>\"\n      },\n      {\n        \"chainId\": \"<string>\",\n        \"createdAt\": \"<dateTime>\"\n      }\n    ]\n  },\n  {\n    \"id\": \"<uuid>\",\n    \"accountId\": \"<uuid>\",\n    \"customerId\": \"<uuid>\",\n    \"status\": \"reversing\",\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"cardId\": \"<uuid>\",\n    \"amount\": \"<integer>\",\n    \"currency\": \"<string>\",\n    \"token\": \"<string>\",\n    \"tokenAmount\": \"<string>\",\n    \"meta\": {\n      \"direction\": \"NOOP\",\n      \"exchangeRate\": \"<integer>\",\n      \"merchant\": {\n        \"name\": \"<string>\",\n        \"mcc\": \"<integer>\",\n        \"country\": \"<string>\",\n        \"city\": \"<string>\",\n        \"id\": \"<string>\"\n      },\n      \"transactionType\": \"WITHDRAWAL\",\n      \"authCode\": \"<string>\"\n    },\n    \"direction\": \"credit\",\n    \"merchantAmount\": \"<string>\",\n    \"merchantCurrency\": \"<string>\",\n    \"exchangeRate\": \"<string>\",\n    \"merchant\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"mcc\": \"<integer>\",\n      \"country\": \"<string>\",\n      \"city\": \"<string>\"\n    },\n    \"fees\": [\n      {\n        \"type\": \"network\",\n        \"tokenAmount\": \"<string>\"\n      },\n      {\n        \"type\": \"service\",\n        \"tokenAmount\": \"<string>\"\n      }\n    ],\n    \"chainTransactions\": [\n      {\n        \"chainId\": \"<string>\",\n        \"createdAt\": \"<dateTime>\"\n      },\n      {\n        \"chainId\": \"<string>\",\n        \"createdAt\": \"<dateTime>\"\n      }\n    ]\n  }\n]"
						},
						{
							"id": "42b1504f-2495-4cec-a2ce-f34dea1ab227",
							"name": "Invalid request",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cards/:cardId/transactions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cards",
										":cardId",
										"transactions"
									],
									"variable": [
										{
											"key": "cardId",
											"value": "<string>",
											"description": "(Required) ID of the card"
										}
									]
								},
								"description": "Retrieves card's transactions"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "7caf1c79-6494-4772-b636-4be1dc2380c2",
							"name": "Not authorised",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cards/:cardId/transactions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cards",
										":cardId",
										"transactions"
									],
									"variable": [
										{
											"key": "cardId",
											"value": "<string>",
											"description": "(Required) ID of the card"
										}
									]
								},
								"description": "Retrieves card's transactions"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "d9f7f381-9785-446f-ba04-4c77c2bccfd6",
							"name": "Card not found",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cards/:cardId/transactions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cards",
										":cardId",
										"transactions"
									],
									"variable": [
										{
											"key": "cardId",
											"value": "<string>",
											"description": "(Required) ID of the card"
										}
									]
								},
								"description": "Retrieves card's transactions"
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "3de31133-3c1e-4a00-942e-b69f0f88a40b",
							"name": "Internal error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cards/:cardId/transactions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cards",
										":cardId",
										"transactions"
									],
									"variable": [
										{
											"key": "cardId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Retrieve authorisation details",
					"id": "86e3405a-36ec-4202-8de5-9802370f54d2",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "(Required) HTTP message signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/authorisations/:authorisationId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"authorisations",
								":authorisationId"
							],
							"variable": [
								{
									"key": "authorisationId",
									"value": "2857c8c8-b26f-2db7-e17c-f2adb68d3186",
									"description": "(Required) ID of the authorisation"
								}
							]
						},
						"description": "Retrieves authorisation's details"
					},
					"response": [
						{
							"id": "28ed1e10-c976-42b3-b923-496600b83723",
							"name": "Successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/authorisations/:authorisationId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorisations",
										":authorisationId"
									],
									"variable": [
										{
											"key": "authorisationId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"urn:uuid:a612862f-5bd9-f9aa-8cca-1ee958b266ba\",\n  \"accountId\": \"3bc109e6-8e9a-8157-077f-a1e017f3e201\",\n  \"status\": \"released\",\n  \"amount\": \"consequat fugiat deserunt\",\n  \"currency\": \"<string>\",\n  \"merchantAmount\": \"labore Excepteur nulla\",\n  \"merchantCurrency\": \"<string>\",\n  \"exchangeRate\": \"ipsum qui aute do\",\n  \"merchant\": {\n    \"id\": \"dolor adipisicing\",\n    \"name\": \"dolore esse sed consectetur cupidatat\",\n    \"mcc\": 12738263,\n    \"country\": \"elit voluptate ullamco sint\",\n    \"city\": \"in aliquip esse dolore nisi\"\n  },\n  \"createdAt\": \"1982-09-19T22:22:35.732Z\",\n  \"updatedAt\": \"2020-04-14T17:52:11.235Z\",\n  \"cardId\": \"urn:uuid:3e4c5d3b-509b-2104-1a49-24bc7ea8f1a8\"\n}"
						},
						{
							"id": "23ee30bc-1806-4fa6-a2c5-5851569ca913",
							"name": "Invalid request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/authorisations/:authorisationId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorisations",
										":authorisationId"
									],
									"variable": [
										{
											"key": "authorisationId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "eb5df29b-4770-440e-9d1c-77381461c779",
							"name": "Not authorised",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/authorisations/:authorisationId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorisations",
										":authorisationId"
									],
									"variable": [
										{
											"key": "authorisationId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "192a7b01-70f7-4bb8-8fff-1b48d165d3df",
							"name": "Authorisation not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/authorisations/:authorisationId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorisations",
										":authorisationId"
									],
									"variable": [
										{
											"key": "authorisationId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "4f442bc8-b78b-463e-9253-abfe78e1b44a",
							"name": "Internal error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/authorisations/:authorisationId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorisations",
										":authorisationId"
									],
									"variable": [
										{
											"key": "authorisationId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						}
					]
				}
			],
			"id": "f3963098-828f-4bf1-a057-9b77f11d704c"
		},
		{
			"name": "webhooks",
			"item": [
				{
					"name": "Retrieve all active webhooks",
					"id": "4646b08e-b143-41db-b5d7-428fc9be4225",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "(Required) HTTP message signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/webhooks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"webhooks"
							]
						},
						"description": "Retrieves all active webhooks"
					},
					"response": [
						{
							"id": "11e63157-9151-4b04-91bd-ccf0fc7fde7d",
							"name": "Successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"0035c6b1-2d9a-a173-5f40-bb43cc7c1b11\",\n    \"callbackUrl\": \"<uri>\",\n    \"types\": [\n      \"card.updated\",\n      \"account.updated\"\n    ],\n    \"createdAt\": \"1946-06-27T21:33:35.570Z\",\n    \"updatedAt\": \"1998-06-23T18:04:25.880Z\"\n  },\n  {\n    \"id\": \"b78cf6f4-f2a3-cec0-3298-39326e207ab1\",\n    \"callbackUrl\": \"<uri>\",\n    \"types\": [\n      \"transaction.updated\",\n      \"account.updated\"\n    ],\n    \"createdAt\": \"1980-02-19T22:57:18.409Z\",\n    \"updatedAt\": \"1997-09-27T23:29:02.103Z\"\n  }\n]"
						},
						{
							"id": "8b216b18-47eb-4950-96a3-0055336c4f65",
							"name": "Invalid request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "d619ed97-858c-4ccf-9841-86462ad32854",
							"name": "Not authorised",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "98023554-4adc-4c9e-8d72-662cbd47e3de",
							"name": "Internal error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Retrieve webhook subscription information",
					"id": "a9945e3a-f895-4d20-ad80-38a58eecc493",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "(Required) HTTP message signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/webhooks/:webhookId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"webhooks",
								":webhookId"
							],
							"variable": [
								{
									"key": "webhookId",
									"value": "0cf75ea8-0f78-1244-4766-099c1acaf2df",
									"description": "(Required) ID for a webhook to be retrieved"
								}
							]
						},
						"description": "Retrieves webhook subscription information"
					},
					"response": [
						{
							"id": "69a7a5f8-057a-48eb-bca2-5d7a4a4aab60",
							"name": "Successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/:webhookId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										":webhookId"
									],
									"variable": [
										{
											"key": "webhookId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"urn:uuid:5fee6244-408b-246c-f2d6-56717b8386fe\",\n  \"callbackUrl\": \"<uri>\",\n  \"types\": [\n    \"authorisation.updated\",\n    \"card.updated\"\n  ],\n  \"createdAt\": \"1980-02-19T12:53:45.389Z\",\n  \"updatedAt\": \"1994-12-28T16:45:05.168Z\"\n}"
						},
						{
							"id": "48f386b8-63b3-4df2-b87c-8a5c611e7342",
							"name": "Invalid request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/:webhookId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										":webhookId"
									],
									"variable": [
										{
											"key": "webhookId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "b909c8c1-4c7a-40b7-984d-aa6d568b4191",
							"name": "Not authorised",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/:webhookId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										":webhookId"
									],
									"variable": [
										{
											"key": "webhookId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "6f4ec1a6-21da-4a6a-915a-1d009a4c51fa",
							"name": "Webhook not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/:webhookId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										":webhookId"
									],
									"variable": [
										{
											"key": "webhookId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "37b7b99b-6a05-45b5-b627-907bf8832259",
							"name": "Internal error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/:webhookId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										":webhookId"
									],
									"variable": [
										{
											"key": "webhookId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Create new or update an existing webhook",
					"id": "2a0b39f1-ea1f-4644-8ea1-66367fe309c9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"description": "(Required) Content digest",
								"key": "Content-Digest",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) Idempotency key (free format)",
								"key": "Idempotency-Key",
								"value": "{{$randomUUID}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/webhooks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"webhooks"
							]
						},
						"description": "Creates new webhook subscription or updates an existing one"
					},
					"response": [
						{
							"id": "4f554117-29a0-4c4b-8dc3-937528b358c0",
							"name": "Successful operation",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<string>\",\n  \"callbackUrl\": \"<string>\",\n  \"scopes\": [\n    \"ACCOUNT\",\n    \"CARD\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									]
								},
								"description": "Creates new webhook subscription or updates an existing one"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"callbackUrl\": \"<uri>\",\n  \"scopes\": [\n    \"transaction\",\n    \"card\"\n  ],\n  \"createdAt\": \"<dateTime>\",\n  \"types\": [\n    \"card.updated\",\n    \"card.updated\"\n  ],\n  \"updatedAt\": \"<dateTime>\"\n}"
						},
						{
							"id": "f019d46a-043e-435d-a8c6-3ec5188afeff",
							"name": "Invalid request",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<string>\",\n  \"callbackUrl\": \"<string>\",\n  \"scopes\": [\n    \"ACCOUNT\",\n    \"CARD\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									]
								},
								"description": "Creates new webhook subscription or updates an existing one"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "e8a0dcc8-0864-4c95-8afd-f15997f9f4b6",
							"name": "Not authorised",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<string>\",\n  \"callbackUrl\": \"<string>\",\n  \"scopes\": [\n    \"ACCOUNT\",\n    \"CARD\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									]
								},
								"description": "Creates new webhook subscription or updates an existing one"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "1ea9ae0e-a5f9-4143-a444-f898d9cc83bc",
							"name": "Internal error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<uuid>\",\n  \"callbackUrl\": \"<string>\",\n  \"scopes\": [\n    \"customer\",\n    \"authorisation\"\n  ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Remove webhook subscription",
					"id": "a7b8d7e6-c8b3-48fa-9b7e-1972c4946e2c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) Idempotency key (free format)",
								"key": "Idempotency-Key",
								"value": "{{$randomUUID}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/webhooks/:webhookId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"webhooks",
								":webhookId"
							],
							"variable": [
								{
									"key": "webhookId",
									"value": "0cf75ea8-0f78-1244-4766-099c1acaf2df",
									"description": "(Required) ID for a webhook to be removed"
								}
							]
						},
						"description": "Removes webhook subscription"
					},
					"response": [
						{
							"id": "04112b27-c9bf-44ae-bc65-b4db865b179b",
							"name": "Successful operation",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/:webhookId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										":webhookId"
									],
									"variable": [
										{
											"key": "webhookId",
											"value": "<string>",
											"description": "(Required) ID for a webhook to be removed"
										}
									]
								},
								"description": "Removes webhook subscription"
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "da20419e-b25e-4ac6-906f-ae1efefebf1f",
							"name": "Invalid request",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/:webhookId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										":webhookId"
									],
									"variable": [
										{
											"key": "webhookId",
											"value": "<string>",
											"description": "(Required) ID for a webhook to be removed"
										}
									]
								},
								"description": "Removes webhook subscription"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "1fd56b7f-ace1-4eda-b024-02e58dd2530f",
							"name": "Not authorised",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/:webhookId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										":webhookId"
									],
									"variable": [
										{
											"key": "webhookId",
											"value": "<string>",
											"description": "(Required) ID for a webhook to be removed"
										}
									]
								},
								"description": "Removes webhook subscription"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "11508fd4-984c-40d5-8b5c-2745e0adec88",
							"name": "Account not found",
							"originalRequest": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"description": "(Required) HTTP signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (free format)",
										"key": "Idempotency-Key",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/:webhookId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										":webhookId"
									],
									"variable": [
										{
											"key": "webhookId",
											"value": "<string>",
											"description": "(Required) ID for a webhook to be removed"
										}
									]
								},
								"description": "Removes webhook subscription"
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": null
						},
						{
							"id": "29671057-41ed-4af7-825b-bc15c58c0dbf",
							"name": "Internal error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/:webhookId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										":webhookId"
									],
									"variable": [
										{
											"key": "webhookId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						}
					]
				}
			],
			"id": "a325e9c6-46a3-46b5-80f4-5fb81a81530f"
		},
		{
			"name": "simulator",
			"item": [
				{
					"name": "Verify customer",
					"id": "c9f08078-925d-4fa1-a0e3-10b4eaca1939",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PATCH",
						"header": [
							{
								"description": "(Required) HTTP message signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "(Required) Idempotency key (UUID)",
								"key": "Idempotency-Key",
								"value": "{{$randomUUID}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/simulator/customers/:customerId/verify",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"simulator",
								"customers",
								":customerId",
								"verify"
							],
							"variable": [
								{
									"key": "customerId",
									"value": "56463bb2-a4c2-537e-bfdb-a1705b9eee17",
									"description": "(Required) ID of customer to be verified"
								}
							]
						},
						"description": "Simulates customer verification success"
					},
					"response": [
						{
							"id": "b33522c1-4af7-4bd8-b7fa-8b2d225750a6",
							"name": "Successful operation",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/simulator/customers/:customerId/verify",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"customers",
										":customerId",
										"verify"
									],
									"variable": [
										{
											"key": "customerId"
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "90183834-5916-40dd-8c32-ca9da0d6a7f2",
							"name": "Invalid request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/simulator/customers/:customerId/verify",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"customers",
										":customerId",
										"verify"
									],
									"variable": [
										{
											"key": "customerId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "bfe3cd72-48ba-4a40-84fe-04a248ecc23c",
							"name": "Not authorised",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/simulator/customers/:customerId/verify",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"customers",
										":customerId",
										"verify"
									],
									"variable": [
										{
											"key": "customerId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "88009bcf-7b08-43ea-b6fe-cdd7a86e7f70",
							"name": "Customer not found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/simulator/customers/:customerId/verify",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"customers",
										":customerId",
										"verify"
									],
									"variable": [
										{
											"key": "customerId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "a2e02e54-a496-4ac4-8cbb-835b24e1fdcb",
							"name": "Internal error",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/simulator/customers/:customerId/verify",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"customers",
										":customerId",
										"verify"
									],
									"variable": [
										{
											"key": "customerId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Reject customer",
					"id": "9e922677-2bcd-476c-b347-ea9a21397b4d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PATCH",
						"header": [
							{
								"description": "(Required) HTTP message signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "(Required) Idempotency key (UUID)",
								"key": "Idempotency-Key",
								"value": "{{$randomUUID}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/simulator/customers/:customerId/reject",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"simulator",
								"customers",
								":customerId",
								"reject"
							],
							"variable": [
								{
									"key": "customerId",
									"value": "2857c8c8-b26f-2db7-e17c-f2adb68d3186",
									"description": "(Required) ID of customer to be rejected"
								}
							]
						},
						"description": "Simulates customer verification rejection"
					},
					"response": [
						{
							"id": "5b14e568-2dc8-4137-b69e-7fa430c09a18",
							"name": "Successful operation",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/simulator/customers/:customerId/reject",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"customers",
										":customerId",
										"reject"
									],
									"variable": [
										{
											"key": "customerId"
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "493f9006-e3eb-445a-834d-8e52ddae2aa3",
							"name": "Invalid request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/simulator/customers/:customerId/reject",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"customers",
										":customerId",
										"reject"
									],
									"variable": [
										{
											"key": "customerId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "45bed638-3f9b-4502-913b-b4b4a2883521",
							"name": "Not authorised",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/simulator/customers/:customerId/reject",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"customers",
										":customerId",
										"reject"
									],
									"variable": [
										{
											"key": "customerId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "a249ab2e-5450-48be-aeac-c33af0c8c646",
							"name": "Customer not found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/simulator/customers/:customerId/reject",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"customers",
										":customerId",
										"reject"
									],
									"variable": [
										{
											"key": "customerId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "7d489a48-f350-4a11-bddd-2d89b1719c7f",
							"name": "Internal error",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/simulator/customers/:customerId/reject",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"customers",
										":customerId",
										"reject"
									],
									"variable": [
										{
											"key": "customerId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Issue card",
					"id": "320d501c-13f8-4a8d-8836-3d4f698d3f32",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PATCH",
						"header": [
							{
								"description": "(Required) HTTP message signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "(Required) Idempotency key (UUID)",
								"key": "Idempotency-Key",
								"value": "{{$randomUUID}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/simulator/cards/:cardId/issue",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"simulator",
								"cards",
								":cardId",
								"issue"
							],
							"variable": [
								{
									"key": "cardId",
									"value": "2857c8c8-b26f-2db7-e17c-f2adb68d3186",
									"description": "(Required) ID of card to be issued"
								}
							]
						},
						"description": "Simulates card issuing success"
					},
					"response": [
						{
							"id": "a131b33b-81b8-464f-a9e6-998c2276de4d",
							"name": "Successful operation",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/simulator/cards/:cardId/issue",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"cards",
										":cardId",
										"issue"
									],
									"variable": [
										{
											"key": "cardId"
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "4c5adc64-5f20-404c-9660-aab2485c517c",
							"name": "Invalid request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/simulator/cards/:cardId/issue",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"cards",
										":cardId",
										"issue"
									],
									"variable": [
										{
											"key": "cardId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "a9e6fa59-80b3-4a36-aaa1-0210ca735db0",
							"name": "Not authorised",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/simulator/cards/:cardId/issue",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"cards",
										":cardId",
										"issue"
									],
									"variable": [
										{
											"key": "cardId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "dd5f1a65-1d8a-4943-a27c-e8fb5e5bc45a",
							"name": "Card not found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/simulator/cards/:cardId/issue",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"cards",
										":cardId",
										"issue"
									],
									"variable": [
										{
											"key": "cardId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "9731f4b8-b556-47bd-9831-d1bac0f59568",
							"name": "Internal error",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/simulator/cards/:cardId/issue",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"cards",
										":cardId",
										"issue"
									],
									"variable": [
										{
											"key": "cardId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Fail card issuance",
					"id": "6a120727-c96b-4ab4-82cd-59a2cb27980a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PATCH",
						"header": [
							{
								"description": "(Required) HTTP message signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "(Required) Idempotency key (UUID)",
								"key": "Idempotency-Key",
								"value": "{{$randomUUID}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/simulator/cards/:cardId/fail",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"simulator",
								"cards",
								":cardId",
								"fail"
							],
							"variable": [
								{
									"key": "cardId",
									"value": "2857c8c8-b26f-2db7-e17c-f2adb68d3186",
									"description": "(Required) ID of card to be failed"
								}
							]
						},
						"description": "Simulates card issuing failure"
					},
					"response": [
						{
							"id": "d9f24d89-cd2c-4d88-aeeb-024e6a79d9a5",
							"name": "Successful operation",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/simulator/cards/:cardId/fail",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"cards",
										":cardId",
										"fail"
									],
									"variable": [
										{
											"key": "cardId"
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "90a4c64e-a217-4448-abc4-baad148930aa",
							"name": "Invalid request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/simulator/cards/:cardId/fail",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"cards",
										":cardId",
										"fail"
									],
									"variable": [
										{
											"key": "cardId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "db2b77ea-905e-4200-a942-182ccef9de06",
							"name": "Not authorised",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/simulator/cards/:cardId/fail",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"cards",
										":cardId",
										"fail"
									],
									"variable": [
										{
											"key": "cardId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "c09f6e34-754a-471b-83db-db91098769b1",
							"name": "Card not found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/simulator/cards/:cardId/fail",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"cards",
										":cardId",
										"fail"
									],
									"variable": [
										{
											"key": "cardId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "b89c75e9-65e9-42ef-b401-6615e04fc4c5",
							"name": "Internal error",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/simulator/cards/:cardId/fail",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"cards",
										":cardId",
										"fail"
									],
									"variable": [
										{
											"key": "cardId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Initiate card authorisation",
					"id": "8028248e-d62b-4476-99c7-6e5fcbdb6b01",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "(Required) HTTP message signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "(Required) Idempotency key (UUID)",
								"key": "Idempotency-Key",
								"value": "{{$randomUUID}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"amount\": \"20.0\",\n  \"currency\": \"EUR\",\n  \"capture\": true\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/simulator/cards/:cardId/authorisation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"simulator",
								"cards",
								":cardId",
								"authorisation"
							],
							"variable": [
								{
									"key": "cardId",
									"value": "74e8120f-3de8-4a67-aa48-a966aee4ebfe",
									"description": "(Required) ID of card"
								}
							]
						},
						"description": "Simulates card authorisation"
					},
					"response": [
						{
							"id": "a7cb3cad-17ab-4a40-b664-b8e019be6a9b",
							"name": "Invalid request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"esse dolor\",\n  \"currency\": \"<string>\",\n  \"capture\": true\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/simulator/cards/:cardId/authorisation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"cards",
										":cardId",
										"authorisation"
									],
									"variable": [
										{
											"key": "cardId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "e66e8fce-7698-42f6-8d07-9b2723a2a6f8",
							"name": "Not authorised",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"esse dolor\",\n  \"currency\": \"<string>\",\n  \"capture\": true\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/simulator/cards/:cardId/authorisation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"cards",
										":cardId",
										"authorisation"
									],
									"variable": [
										{
											"key": "cardId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "2955e2a8-5e54-422f-b66f-9679e05bbf78",
							"name": "Card not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"esse dolor\",\n  \"currency\": \"<string>\",\n  \"capture\": true\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/simulator/cards/:cardId/authorisation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"cards",
										":cardId",
										"authorisation"
									],
									"variable": [
										{
											"key": "cardId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "86c7cb18-996c-42f7-9233-56068f95a76c",
							"name": "Internal error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"esse dolor\",\n  \"currency\": \"<string>\",\n  \"capture\": true\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/simulator/cards/:cardId/authorisation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"cards",
										":cardId",
										"authorisation"
									],
									"variable": [
										{
											"key": "cardId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "17736aae-ab62-4692-a68c-08e8f744731e",
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": \"10.0\",\n  \"currency\": \"EUR\",\n  \"capture\": false\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/simulator/cards/:cardId/authorisation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"cards",
										":cardId",
										"authorisation"
									],
									"variable": [
										{
											"key": "cardId"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\",\n  \"accountId\": \"<uuid>\",\n  \"status\": \"released\",\n  \"amount\": \"<string>\",\n  \"currency\": \"<string>\",\n  \"merchantAmount\": \"<string>\",\n  \"merchantCurrency\": \"<string>\",\n  \"exchangeRate\": \"<string>\",\n  \"merchant\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"mcc\": \"<integer>\",\n    \"country\": \"<string>\",\n    \"city\": \"<string>\"\n  },\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"cardId\": \"<uuid>\"\n}"
						}
					]
				},
				{
					"name": "Capture card authorisation",
					"id": "7f86dccf-bb36-4e0a-bd2f-daf38b2c7421",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PATCH",
						"header": [
							{
								"description": "(Required) HTTP message signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "(Required) Idempotency key (UUID)",
								"key": "Idempotency-Key",
								"value": "{{$randomUUID}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/simulator/authorisations/:authorisationId/capture",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"simulator",
								"authorisations",
								":authorisationId",
								"capture"
							],
							"variable": [
								{
									"key": "authorisationId",
									"value": "2857c8c8-b26f-2db7-e17c-f2adb68d3186",
									"description": "(Required) ID of authorisation to be captured"
								}
							]
						},
						"description": "Simulates card authorisation capture"
					},
					"response": [
						{
							"id": "626cd8b7-f720-44a0-9cf4-bfab8eb564eb",
							"name": "Successful operation",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/simulator/authorisations/:authorisationId/capture",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"authorisations",
										":authorisationId",
										"capture"
									],
									"variable": [
										{
											"key": "authorisationId"
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "780b9e6c-2717-4a4f-a86b-5431196ea235",
							"name": "Invalid request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/simulator/authorisations/:authorisationId/capture",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"authorisations",
										":authorisationId",
										"capture"
									],
									"variable": [
										{
											"key": "authorisationId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "799539fc-f282-475c-b3f4-5097720f82a9",
							"name": "Not authorised",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/simulator/authorisations/:authorisationId/capture",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"authorisations",
										":authorisationId",
										"capture"
									],
									"variable": [
										{
											"key": "authorisationId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "d44b8b9d-d393-479a-9265-024416216438",
							"name": "Authorisation not found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/simulator/authorisations/:authorisationId/capture",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"authorisations",
										":authorisationId",
										"capture"
									],
									"variable": [
										{
											"key": "authorisationId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "fc85e751-38d2-4ba2-86a3-59b22e7aa2c9",
							"name": "Internal error",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/simulator/authorisations/:authorisationId/capture",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"authorisations",
										":authorisationId",
										"capture"
									],
									"variable": [
										{
											"key": "authorisationId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						}
					]
				},
				{
					"name": "Release card authorisation",
					"id": "9bd62ad2-d9d6-4d7c-9d47-68fd419002e4",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PATCH",
						"header": [
							{
								"description": "(Required) HTTP message signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "(Required) Idempotency key (UUID)",
								"key": "Idempotency-Key",
								"value": "{{$randomUUID}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/simulator/authorisations/:authorisationId/release",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"simulator",
								"authorisations",
								":authorisationId",
								"release"
							],
							"variable": [
								{
									"key": "authorisationId",
									"value": "2857c8c8-b26f-2db7-e17c-f2adb68d3186",
									"description": "(Required) ID of authorisation to be released"
								}
							]
						},
						"description": "Simulates card authorisation release"
					},
					"response": [
						{
							"id": "166d5906-6d41-4de6-aa90-916d8ff43f4e",
							"name": "Successful operation",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/simulator/authorisations/:authorisationId/release",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"authorisations",
										":authorisationId",
										"release"
									],
									"variable": [
										{
											"key": "authorisationId"
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "4464674f-4627-414a-a206-9265afd2d52d",
							"name": "Invalid request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/simulator/authorisations/:authorisationId/release",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"authorisations",
										":authorisationId",
										"release"
									],
									"variable": [
										{
											"key": "authorisationId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "a693651a-85ac-46c5-a005-602f3e1c04b2",
							"name": "Not authorised",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/simulator/authorisations/:authorisationId/release",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"authorisations",
										":authorisationId",
										"release"
									],
									"variable": [
										{
											"key": "authorisationId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "b4e55ced-25da-4d82-8d6f-aba036d01c17",
							"name": "Authorisation not found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/simulator/authorisations/:authorisationId/release",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"authorisations",
										":authorisationId",
										"release"
									],
									"variable": [
										{
											"key": "authorisationId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "61204a15-434c-403a-85e3-6f40a4377d92",
							"name": "Internal error",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"description": "(Required) HTTP message signature",
										"key": "Signature",
										"value": "<string>"
									},
									{
										"description": "(Required) HTTP message signature input",
										"key": "Signature-Input",
										"value": "<string>"
									},
									{
										"description": "(Required) Idempotency key (UUID)",
										"key": "Idempotency-Key",
										"value": "<uuid>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/simulator/authorisations/:authorisationId/release",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"simulator",
										"authorisations",
										":authorisationId",
										"release"
									],
									"variable": [
										{
											"key": "authorisationId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						}
					]
				}
			],
			"id": "5022f2ee-3179-4031-9554-b632d7e8d005"
		},
		{
			"name": "Retrieve supported blockchains",
			"id": "dadecbbc-f2d8-4ad8-a0d7-89760e72a68b",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{bearerToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) HTTP message signature",
						"key": "Signature",
						"value": "<string>"
					},
					{
						"description": "(Required) HTTP message signature input",
						"key": "Signature-Input",
						"value": "<string>"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/chains",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"chains"
					]
				},
				"description": "Retrieves supported blockchains"
			},
			"response": [
				{
					"id": "2a7480e1-7677-44f8-ab2a-d516bdc91219",
					"name": "Successful operation",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) HTTP message signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"description": "Added as a part of security scheme: bearer",
								"key": "Authorization",
								"value": "Bearer <token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/chains",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"chains"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\"\n  }\n]"
				},
				{
					"id": "ef2209e4-563c-45bb-a910-117b657747da",
					"name": "Invalid request",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) HTTP message signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "Added as a part of security scheme: bearer",
								"key": "Authorization",
								"value": "Bearer <token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/chains",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"chains"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": []
				},
				{
					"id": "ba1505f4-5598-427f-a9f5-918966e60aa2",
					"name": "Not authorised",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) HTTP message signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "Added as a part of security scheme: bearer",
								"key": "Authorization",
								"value": "Bearer <token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/chains",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"chains"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": []
				},
				{
					"id": "1ea21edc-29c6-4714-a808-29ee6e2a1c73",
					"name": "Internal error",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) HTTP message signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "Added as a part of security scheme: bearer",
								"key": "Authorization",
								"value": "Bearer <token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/chains",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"chains"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": []
				}
			]
		},
		{
			"name": "Retrieve supported assets",
			"id": "5c049e90-f510-4e17-9d2a-dfd8c4f97bfc",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{bearerToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) HTTP message signature",
						"key": "Signature",
						"value": "<string>"
					},
					{
						"description": "(Required) HTTP message signature input",
						"key": "Signature-Input",
						"value": "<string>"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/assets?chain=<string>",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"assets"
					],
					"query": [
						{
							"description": "Optional filter by blockchain",
							"key": "chain",
							"value": "<string>"
						}
					]
				},
				"description": "Retrieves supported assets"
			},
			"response": [
				{
					"id": "6f2dc0c1-0b8e-4d08-ac56-68c27a1c5ca8",
					"name": "Successful operation",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) HTTP message signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"description": "Added as a part of security scheme: bearer",
								"key": "Authorization",
								"value": "Bearer <token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/assets?chain=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assets"
							],
							"query": [
								{
									"description": "Optional filter by blockchain",
									"key": "chain",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n  {\n    \"id\": \"ex sed\",\n    \"blockchain\": \"<string>\",\n    \"name\": \"<string>\",\n    \"symbol\": \"<string>\"\n  },\n  {\n    \"id\": \"consequat sit\",\n    \"blockchain\": \"<string>\",\n    \"name\": \"<string>\",\n    \"symbol\": \"<string>\"\n  }\n]"
				},
				{
					"id": "e39c74a0-177f-4584-8066-c15bf90c6bdf",
					"name": "Invalid request",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) HTTP message signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "Added as a part of security scheme: bearer",
								"key": "Authorization",
								"value": "Bearer <token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/assets?chain=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assets"
							],
							"query": [
								{
									"description": "Optional filter by blockchain",
									"key": "chain",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": []
				},
				{
					"id": "7a26cbba-c288-4cf1-94a3-153fa5065e53",
					"name": "Not authorised",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) HTTP message signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "Added as a part of security scheme: bearer",
								"key": "Authorization",
								"value": "Bearer <token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/assets?chain=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assets"
							],
							"query": [
								{
									"description": "Optional filter by blockchain",
									"key": "chain",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": []
				},
				{
					"id": "a71b6cdd-5d4f-4fc7-8da2-bb35a364233f",
					"name": "Internal error",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) HTTP message signature",
								"key": "Signature",
								"value": "<string>"
							},
							{
								"description": "(Required) HTTP message signature input",
								"key": "Signature-Input",
								"value": "<string>"
							},
							{
								"description": "Added as a part of security scheme: bearer",
								"key": "Authorization",
								"value": "Bearer <token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/assets?chain=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"assets"
							],
							"query": [
								{
									"description": "Optional filter by blockchain",
									"key": "chain",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "text",
					"header": [],
					"cookie": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{bearerToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "53fa8865-d836-42ab-aa40-face36fc7523",
				"type": "text/javascript",
				"exec": [
					"const URL = require('url')",
					"var canonicalize = {};",
					"",
					"function updateRequestSignature(httpMessageSignatures) {",
					"    if (!pm.request.headers.has(\"Signature\")) {",
					"        return",
					"    }",
					"",
					"    const keyId = pm.environment.get(\"signatureKeyId\");",
					"    const privateKey = pm.environment.get(\"signaturePrivateKey\");",
					"",
					"    const key = httpMessageSignatures.createSigner(privateKey, 'ecdsa-p384-sha384', keyId);",
					"    const fields = ['@method', '@authority', '@path']",
					"    ",
					"    const url = URL.parse(pm.variables.replaceIn(pm.request.url.toString()));",
					"    const method = pm.request.method;",
					"",
					"    const headers = {};",
					"",
					"    if (pm.request.body.raw) {",
					"        var hash = CryptoJS.SHA512(pm.variables.replaceIn(pm.request.body).raw);",
					"        var digest = hash.toString(CryptoJS.enc.Base64);",
					"        headers[\"content-digest\"] = `sha-512=:${digest}:`;",
					"        fields.push('content-digest');",
					"    }",
					"",
					"    // browser version of crypto doesn't support ieee-p1363 encoding of ECDSA signature",
					"    // we need to manually unpack DER encoding and assemble the signature back",
					"    const patchSignature = (sig) => {",
					"        // remove leading \"sig=: and trailing :\"",
					"        const [name, original] = sig.split(':')",
					"",
					"        var buffer = Buffer.from(original)",
					"        // decode from base64",
					"        buffer = Buffer.from(buffer.toString(), 'base64')",
					"",
					"        // DER signature format",
					"        // 0x30|totalLength|0x02|rLength|r|0x02|sLength|s",
					"        const rLength = buffer[3]",
					"",
					"        var rBytes = buffer.slice(4, 4 + rLength)",
					"        var sBytes = buffer.slice(4 + rLength + 2)",
					"",
					"        if (rBytes[0] == 0) { rBytes = rBytes.slice(1) }",
					"        if (sBytes[0] == 0) { sBytes = sBytes.slice(1) }",
					"        ",
					"        const signature = Buffer.concat([rBytes, sBytes])",
					"        const encoded = signature.toString('base64')",
					"",
					"        return `${name}:${encoded}:`",
					"    }",
					"",
					"    const updateSignature = (async () => {",
					"        try {",
					"            const signedRequest = await httpMessageSignatures.httpbis.signMessage({",
					"                key,",
					"                fields",
					"            }, {",
					"                method,",
					"                url,",
					"                headers,",
					"            });",
					"            pm.request.headers.upsert({key: \"Signature\", value: patchSignature(signedRequest.headers[\"Signature\"])});",
					"            pm.request.headers.upsert({key: \"Signature-Input\", value: signedRequest.headers[\"Signature-Input\"]});",
					"            pm.request.headers.upsert({key: \"Content-Digest\", value: headers[\"content-digest\"]});",
					"        } catch (error) {",
					"            console.error(error);",
					"        }",
					"    });",
					"",
					"    updateSignature();",
					"}",
					"",
					"pm.sendRequest('https://github.com/OffBlocks/node-http-message-signatures/releases/download/v1.2.0/http-message-signatures.min.js', (err, res) => {",
					"    if (err) {",
					"        console.log(err)",
					"    } else {",
					"        eval(res.text());",
					"        pm.sendRequest('https://cdn.jsdelivr.net/npm/canonicalize@2.0.0/lib/canonicalize.min.js', (err, res) => {",
					"            if (err) {",
					"                console.log(err)",
					"            } else {",
					"                var module = {};",
					"                eval(res.text());",
					"                canonicalize = module.exports",
					"                updateRequestSignature(httpMessageSignatures);",
					"            }",
					"        })",
					"    }",
					"});",
					"",
					"pm.sendRequest({",
					"    url: pm.environment.get('baseUrl') + '/auth/token',",
					"    method: 'POST',",
					"    header: {",
					"        'content-type': 'application/json'",
					"    },",
					"    body: {",
					"        mode: 'raw',",
					"        raw: JSON.stringify({",
					"            apiKey: pm.environment.get('apiKey'),",
					"            apiSecret: pm.environment.get('apiSecret')",
					"        })",
					"    }",
					"}, (err, res) => pm.environment.set(\"bearerToken\", res.json().token));"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "acca8d51-0f0f-4420-a190-da6d915c12c3",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "264bc4c8-7457-49c7-9089-42a7d4722fb0",
			"key": "baseUrl",
			"value": "https://api.offblocks.xyz/v1",
			"type": "string"
		}
	]
}